

#include <stdio.h>
#include "ap_fixed.h"

void case_4(
    ap_int<16> in_data[30],
    ap_int<16> out_data[18]
)
{

#pragma HLS array_partition variable=in_data complete
#pragma HLS array_partition variable=out_data complete

    

ap_int<7> in1;
in1.range(6, 0) = in_data[0].range(6, 0);
ap_int<12> in2;
in2.range(11, 0) = in_data[1].range(11, 0);
ap_int<12> in3;
in3.range(11, 0) = in_data[2].range(11, 0);
ap_int<11> in4;
in4.range(10, 0) = in_data[3].range(10, 0);
ap_int<11> in5;
in5.range(10, 0) = in_data[4].range(10, 0);
ap_int<12> in6;
in6.range(11, 0) = in_data[5].range(11, 0);
ap_int<16> in7;
in7.range(15, 0) = in_data[6].range(15, 0);
ap_int<4> in8;
in8.range(3, 0) = in_data[7].range(3, 0);
ap_int<14> in9;
in9.range(13, 0) = in_data[8].range(13, 0);
ap_int<2> in10;
in10.range(1, 0) = in_data[9].range(1, 0);
ap_int<16> in11;
in11.range(15, 0) = in_data[10].range(15, 0);
ap_int<8> in12;
in12.range(7, 0) = in_data[11].range(7, 0);
ap_int<9> in13;
in13.range(8, 0) = in_data[12].range(8, 0);
ap_int<5> in14;
in14.range(4, 0) = in_data[13].range(4, 0);
ap_int<10> in15;
in15.range(9, 0) = in_data[14].range(9, 0);
ap_int<4> in16;
in16.range(3, 0) = in_data[15].range(3, 0);
ap_int<14> in17;
in17.range(13, 0) = in_data[16].range(13, 0);
ap_int<2> in18;
in18.range(1, 0) = in_data[17].range(1, 0);
ap_int<4> in19;
in19.range(3, 0) = in_data[18].range(3, 0);
ap_int<15> in20;
in20.range(14, 0) = in_data[19].range(14, 0);
ap_int<14> in21;
in21.range(13, 0) = in_data[20].range(13, 0);
ap_int<12> in22;
in22.range(11, 0) = in_data[21].range(11, 0);
ap_int<7> in23;
in23.range(6, 0) = in_data[22].range(6, 0);
ap_int<8> in24;
in24.range(7, 0) = in_data[23].range(7, 0);
ap_int<15> in25;
in25.range(14, 0) = in_data[24].range(14, 0);
ap_int<13> in26;
in26.range(12, 0) = in_data[25].range(12, 0);
ap_int<3> in27;
in27.range(2, 0) = in_data[26].range(2, 0);
ap_int<15> in28;
in28.range(14, 0) = in_data[27].range(14, 0);
ap_int<12> in29;
in29.range(11, 0) = in_data[28].range(11, 0);
ap_int<12> in30;
in30.range(11, 0) = in_data[29].range(11, 0);

ap_int<2> m31;
ap_int<8> m32;
ap_int<6> m33;
ap_int<8> m34;
ap_int<10> m35;
ap_int<12> m36;
ap_int<8> m37;
ap_int<5> m38;
ap_int<14> m39;
ap_int<9> m40;
ap_int<4> m41;
ap_int<13> m42;
ap_int<5> m43;
ap_int<4> m44;
ap_int<12> m45;
ap_int<5> m46;
ap_int<6> m47;
ap_int<12> m48;
ap_int<16> m49;
ap_int<5> m50;
ap_int<10> m51;
ap_int<9> m52;
ap_int<8> m53;
ap_int<9> m54;
ap_int<7> m55;
ap_int<15> m56;
ap_int<7> m57;
ap_int<8> m58;
ap_int<7> m59;
ap_int<5> m60;
ap_int<5> m61;
ap_int<10> m62;
ap_int<8> m63;
ap_int<10> m64;
ap_int<4> m65;
ap_int<3> m66;
ap_int<5> m67;
ap_int<13> m68;
ap_int<8> m69;
ap_int<8> m70;
ap_int<14> m71;
ap_int<11> m72;
ap_int<12> m73;
ap_int<11> m74;
ap_int<13> m75;
ap_int<13> m76;
ap_int<4> m77;
ap_int<3> m78;
ap_int<14> m79;
ap_int<5> m80;
ap_int<9> m81;
ap_int<16> m82;
ap_int<13> m83;
ap_int<5> m84;
ap_int<14> m85;
ap_int<13> m86;
ap_int<3> m87;
ap_int<4> m88;
ap_int<5> m89;
ap_int<14> m90;
ap_int<6> m91;
ap_int<7> m92;
ap_int<7> m93;
ap_int<13> m94;
ap_int<14> m95;
ap_int<7> m96;
ap_int<11> m97;
ap_int<12> m98;
ap_int<15> m99;
ap_int<7> m100;
ap_int<7> m101;
ap_int<3> m102;
ap_int<9> m103;
ap_int<12> m104;
ap_int<13> m105;
ap_int<9> m106;
ap_int<8> m107;
ap_int<5> m108;
ap_int<7> m109;
ap_int<14> m110;
ap_int<6> m111;
ap_int<11> m112;
ap_int<16> m113;
ap_int<16> m114;
ap_int<6> m115;
ap_int<6> m116;
ap_int<9> m117;
ap_int<3> m118;
ap_int<5> m119;

m31 = in23 * in10;
m32 = in21 * in3;
m33 = in15 * in18;
m34 = m31 * in29;
m35 = m34 * in11;
m36 = in7 * in19;
m37 = in18 + m36;
m38 = in27 + in19;
m39 = m38 * in15;
m40 = in28 * m33;
m41 = m31 + m38;
m42 = in14 + in29;
m43 = in28 * in27;
m44 = in16 * m31;
m45 = in20 * m31;
m46 = m42 + in23;
m47 = m36 * in17;
m48 = m42 * in23;
m49 = m47 * m39;
m50 = m33 * m32;
m51 = m34 + m31;
m52 = m45 * m40;
m53 = m46 + m42;
m54 = m35 * m49;
m55 = m37 * m34;
m56 = m42 * m55;
m57 = m38 * m51;
m58 = m44 * m49;
m59 = m44 * m53;
m60 = m33 * m59;
m61 = m48 * m35;
m62 = m47 * m52;
m63 = m43 + m47;
m64 = m47 * m56;
m65 = m54 * m64;
m66 = m43 * m63;
m67 = m61 + m59;
m68 = m60 * m63;
m69 = m53 + m64;
m70 = m43 * m58;
m71 = m54 * m63;
m72 = m50 + m52;
m73 = m46 + m68;
m74 = m65 * m68;
m75 = m45 * m64;
m76 = m48 + m74;
m77 = m69 * m65;
m78 = m50 * m67;
m79 = m65 * m49;
m80 = m67 * m56;
m81 = m78 * m56;
m82 = m70 * m71;
m83 = m57 * m74;
m84 = m72 * m62;
m85 = m65 * m74;
m86 = m82 * m64;
m87 = m60 * m58;
m88 = m65 * m67;
m89 = m59 * m68;
m90 = m82 + m68;
m91 = m78 + m89;
m92 = m62 * m68;
m93 = m76 * m90;
m94 = m84 * m82;
m95 = m83 * m74;
m96 = m80 + m75;
m97 = m95 + m70;
m98 = m95 * m76;
m99 = m81 * m82;
m100 = m90 * m77;
m101 = m77 * m95;
m102 = m92 * m78;
m103 = m102 * m90;
m104 = m96 * m94;
m105 = m75 * m80;
m106 = m82 + m96;
m107 = m80 * m79;
m108 = m79 * m87;
m109 = m103 * m104;
m110 = m95 * m80;
m111 = m105 * m105;
m112 = m97 * m100;
m113 = m110 * m112;
m114 = m94 * m110;
m115 = m92 * m91;
m116 = m100 * m90;
m117 = m115 * m99;
m118 = m117 * m102;
m119 = m117 * m109;

out_data[0] = m41;
out_data[1] = m66;
out_data[2] = m73;
out_data[3] = m85;
out_data[4] = m86;
out_data[5] = m88;
out_data[6] = m93;
out_data[7] = m98;
out_data[8] = m101;
out_data[9] = m106;
out_data[10] = m107;
out_data[11] = m108;
out_data[12] = m111;
out_data[13] = m113;
out_data[14] = m114;
out_data[15] = m116;
out_data[16] = m118;
out_data[17] = m119;


}
    