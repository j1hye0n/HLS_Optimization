// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="case_1_case_1,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.275000,HLS_SYN_LAT=28,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1058,HLS_SYN_LUT=7176,HLS_VERSION=2024_2}" *)

module case_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_data_0,
        in_data_1,
        in_data_2,
        in_data_3,
        in_data_4,
        in_data_5,
        in_data_6,
        in_data_7,
        in_data_8,
        in_data_9,
        in_data_10,
        in_data_11,
        in_data_12,
        in_data_13,
        in_data_14,
        in_data_15,
        in_data_16,
        in_data_17,
        out_data_0,
        out_data_0_ap_vld,
        out_data_1,
        out_data_1_ap_vld,
        out_data_2,
        out_data_2_ap_vld,
        out_data_3,
        out_data_3_ap_vld,
        out_data_4,
        out_data_4_ap_vld,
        out_data_5,
        out_data_5_ap_vld,
        out_data_6,
        out_data_6_ap_vld,
        out_data_7,
        out_data_7_ap_vld,
        out_data_8,
        out_data_8_ap_vld,
        out_data_9,
        out_data_9_ap_vld,
        out_data_10,
        out_data_10_ap_vld,
        out_data_11,
        out_data_11_ap_vld,
        out_data_12,
        out_data_12_ap_vld,
        out_data_13,
        out_data_13_ap_vld,
        out_data_14,
        out_data_14_ap_vld,
        out_data_15,
        out_data_15_ap_vld,
        out_data_16,
        out_data_16_ap_vld,
        out_data_17,
        out_data_17_ap_vld,
        out_data_18,
        out_data_18_ap_vld
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_state2 = 29'd2;
parameter    ap_ST_fsm_state3 = 29'd4;
parameter    ap_ST_fsm_state4 = 29'd8;
parameter    ap_ST_fsm_state5 = 29'd16;
parameter    ap_ST_fsm_state6 = 29'd32;
parameter    ap_ST_fsm_state7 = 29'd64;
parameter    ap_ST_fsm_state8 = 29'd128;
parameter    ap_ST_fsm_state9 = 29'd256;
parameter    ap_ST_fsm_state10 = 29'd512;
parameter    ap_ST_fsm_state11 = 29'd1024;
parameter    ap_ST_fsm_state12 = 29'd2048;
parameter    ap_ST_fsm_state13 = 29'd4096;
parameter    ap_ST_fsm_state14 = 29'd8192;
parameter    ap_ST_fsm_state15 = 29'd16384;
parameter    ap_ST_fsm_state16 = 29'd32768;
parameter    ap_ST_fsm_state17 = 29'd65536;
parameter    ap_ST_fsm_state18 = 29'd131072;
parameter    ap_ST_fsm_state19 = 29'd262144;
parameter    ap_ST_fsm_state20 = 29'd524288;
parameter    ap_ST_fsm_state21 = 29'd1048576;
parameter    ap_ST_fsm_state22 = 29'd2097152;
parameter    ap_ST_fsm_state23 = 29'd4194304;
parameter    ap_ST_fsm_state24 = 29'd8388608;
parameter    ap_ST_fsm_state25 = 29'd16777216;
parameter    ap_ST_fsm_state26 = 29'd33554432;
parameter    ap_ST_fsm_state27 = 29'd67108864;
parameter    ap_ST_fsm_state28 = 29'd134217728;
parameter    ap_ST_fsm_state29 = 29'd268435456;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] in_data_0;
input  [15:0] in_data_1;
input  [15:0] in_data_2;
input  [15:0] in_data_3;
input  [15:0] in_data_4;
input  [15:0] in_data_5;
input  [15:0] in_data_6;
input  [15:0] in_data_7;
input  [15:0] in_data_8;
input  [15:0] in_data_9;
input  [15:0] in_data_10;
input  [15:0] in_data_11;
input  [15:0] in_data_12;
input  [15:0] in_data_13;
input  [15:0] in_data_14;
input  [15:0] in_data_15;
input  [15:0] in_data_16;
input  [15:0] in_data_17;
output  [15:0] out_data_0;
output   out_data_0_ap_vld;
output  [15:0] out_data_1;
output   out_data_1_ap_vld;
output  [15:0] out_data_2;
output   out_data_2_ap_vld;
output  [15:0] out_data_3;
output   out_data_3_ap_vld;
output  [15:0] out_data_4;
output   out_data_4_ap_vld;
output  [15:0] out_data_5;
output   out_data_5_ap_vld;
output  [15:0] out_data_6;
output   out_data_6_ap_vld;
output  [15:0] out_data_7;
output   out_data_7_ap_vld;
output  [15:0] out_data_8;
output   out_data_8_ap_vld;
output  [15:0] out_data_9;
output   out_data_9_ap_vld;
output  [15:0] out_data_10;
output   out_data_10_ap_vld;
output  [15:0] out_data_11;
output   out_data_11_ap_vld;
output  [15:0] out_data_12;
output   out_data_12_ap_vld;
output  [15:0] out_data_13;
output   out_data_13_ap_vld;
output  [15:0] out_data_14;
output   out_data_14_ap_vld;
output  [15:0] out_data_15;
output   out_data_15_ap_vld;
output  [15:0] out_data_16;
output   out_data_16_ap_vld;
output  [15:0] out_data_17;
output   out_data_17_ap_vld;
output  [15:0] out_data_18;
output   out_data_18_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_data_0_ap_vld;
reg out_data_1_ap_vld;
reg out_data_2_ap_vld;
reg out_data_3_ap_vld;
reg out_data_4_ap_vld;
reg out_data_5_ap_vld;
reg out_data_6_ap_vld;
reg out_data_7_ap_vld;
reg out_data_8_ap_vld;
reg out_data_9_ap_vld;
reg out_data_10_ap_vld;
reg out_data_11_ap_vld;
reg out_data_12_ap_vld;
reg out_data_13_ap_vld;
reg out_data_14_ap_vld;
reg out_data_15_ap_vld;
reg out_data_16_ap_vld;
reg out_data_17_ap_vld;
reg out_data_18_ap_vld;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] m19_fu_455_p2;
reg   [9:0] m19_reg_2078;
wire   [9:0] m21_fu_470_p1;
reg   [9:0] m21_reg_2083;
wire    ap_CS_fsm_state2;
wire  signed [8:0] trunc_ln185_1_fu_474_p1;
reg  signed [8:0] trunc_ln185_1_reg_2089;
wire   [8:0] m22_fu_508_p1;
reg   [8:0] m22_reg_2094;
wire    ap_CS_fsm_state3;
wire   [4:0] m25_fu_534_p2;
reg   [4:0] m25_reg_2099;
wire   [9:0] m26_fu_553_p1;
reg   [9:0] m26_reg_2104;
wire  signed [6:0] trunc_ln190_1_fu_567_p1;
reg  signed [6:0] trunc_ln190_1_reg_2110;
wire  signed [2:0] trunc_ln192_1_fu_571_p1;
reg  signed [2:0] trunc_ln192_1_reg_2115;
wire  signed [6:0] trunc_ln212_fu_575_p1;
reg  signed [6:0] trunc_ln212_reg_2120;
wire  signed [8:0] in18_fu_592_p1;
reg  signed [8:0] in18_reg_2125;
wire    ap_CS_fsm_state4;
wire   [8:0] m23_fu_600_p2;
reg   [8:0] m23_reg_2130;
wire  signed [6:0] trunc_ln190_fu_605_p1;
reg  signed [6:0] trunc_ln190_reg_2135;
wire   [9:0] m29_fu_617_p2;
reg   [9:0] m29_reg_2140;
wire   [9:0] m31_fu_623_p2;
reg   [9:0] m31_reg_2145;
wire   [9:0] m32_fu_629_p2;
reg   [9:0] m32_reg_2150;
wire  signed [9:0] m33_fu_655_p1;
reg  signed [9:0] m33_reg_2156;
wire  signed [4:0] trunc_ln215_fu_681_p1;
reg  signed [4:0] trunc_ln215_reg_2162;
wire   [2:0] trunc_ln200_fu_685_p1;
reg   [2:0] trunc_ln200_reg_2167;
wire   [7:0] trunc_ln204_fu_689_p1;
reg   [7:0] trunc_ln204_reg_2172;
wire  signed [6:0] m28_fu_727_p2;
reg  signed [6:0] m28_reg_2177;
wire    ap_CS_fsm_state5;
wire   [2:0] m30_fu_731_p2;
reg   [2:0] m30_reg_2184;
wire   [9:0] m34_fu_748_p1;
reg   [9:0] m34_reg_2189;
wire  signed [8:0] trunc_ln214_fu_767_p1;
reg  signed [8:0] trunc_ln214_reg_2194;
wire   [4:0] m38_fu_780_p1;
reg   [4:0] m38_reg_2199;
wire  signed [9:0] m43_fu_793_p1;
reg  signed [9:0] m43_reg_2204;
wire  signed [7:0] trunc_ln207_fu_797_p1;
reg  signed [7:0] trunc_ln207_reg_2212;
wire  signed [4:0] trunc_ln208_fu_801_p1;
reg  signed [4:0] trunc_ln208_reg_2217;
wire  signed [6:0] trunc_ln211_1_fu_805_p1;
reg  signed [6:0] trunc_ln211_1_reg_2222;
wire  signed [8:0] trunc_ln214_1_fu_809_p1;
reg  signed [8:0] trunc_ln214_1_reg_2227;
wire   [2:0] m39_fu_821_p1;
reg   [2:0] m39_reg_2232;
wire    ap_CS_fsm_state6;
wire  signed [4:0] m44_fu_845_p1;
reg  signed [4:0] m44_reg_2237;
wire  signed [7:0] m45_fu_849_p2;
reg  signed [7:0] m45_reg_2245;
wire  signed [6:0] m49_fu_858_p2;
reg  signed [6:0] m49_reg_2252;
wire   [8:0] m52_fu_863_p2;
reg   [8:0] m52_reg_2258;
wire   [3:0] trunc_ln216_fu_867_p1;
reg   [3:0] trunc_ln216_reg_2263;
wire  signed [2:0] trunc_ln220_fu_871_p1;
reg  signed [2:0] trunc_ln220_reg_2268;
wire  signed [2:0] m41_fu_883_p1;
reg  signed [2:0] m41_reg_2273;
wire    ap_CS_fsm_state7;
wire  signed [6:0] mul_ln212_fu_902_p2;
reg  signed [6:0] mul_ln212_reg_2280;
wire  signed [6:0] m50_fu_917_p2;
reg  signed [6:0] m50_reg_2285;
wire    ap_CS_fsm_state8;
wire  signed [3:0] m54_fu_924_p2;
reg  signed [3:0] m54_reg_2292;
wire  signed [2:0] m58_fu_933_p2;
reg  signed [2:0] m58_reg_2300;
wire   [1:0] m60_fu_941_p2;
reg  signed [1:0] m60_reg_2307;
wire  signed [4:0] m59_fu_954_p2;
reg  signed [4:0] m59_reg_2312;
wire    ap_CS_fsm_state9;
wire   [2:0] m63_fu_967_p1;
reg  signed [2:0] m63_reg_2320;
wire  signed [9:0] trunc_ln227_fu_1001_p1;
reg  signed [9:0] trunc_ln227_reg_2325;
wire    ap_CS_fsm_state10;
wire  signed [8:0] m51_fu_1005_p1;
reg  signed [8:0] m51_reg_2330;
wire   [4:0] m53_fu_1012_p2;
reg   [4:0] m53_reg_2335;
wire  signed [3:0] trunc_ln218_fu_1017_p1;
reg  signed [3:0] trunc_ln218_reg_2340;
wire   [9:0] add_ln233_fu_1024_p2;
reg   [9:0] add_ln233_reg_2345;
wire  signed [7:0] sext_ln223_1_fu_1032_p1;
reg  signed [7:0] sext_ln223_1_reg_2351;
wire  signed [7:0] m62_fu_1053_p1;
reg  signed [7:0] m62_reg_2356;
wire  signed [9:0] mul_ln227_fu_1057_p2;
reg  signed [9:0] mul_ln227_reg_2361;
wire  signed [7:0] m67_fu_1064_p2;
reg  signed [7:0] m67_reg_2366;
wire   [3:0] trunc_ln236_fu_1070_p1;
reg   [3:0] trunc_ln236_reg_2373;
wire   [5:0] m66_fu_1093_p1;
reg   [5:0] m66_reg_2378;
wire    ap_CS_fsm_state11;
wire  signed [8:0] m69_fu_1113_p2;
reg  signed [8:0] m69_reg_2383;
wire  signed [9:0] m71_fu_1121_p2;
reg  signed [9:0] m71_reg_2390;
wire   [3:0] m72_fu_1139_p1;
reg  signed [3:0] m72_reg_2397;
wire   [3:0] m74_fu_1155_p1;
reg  signed [3:0] m74_reg_2402;
wire  signed [7:0] trunc_ln237_fu_1159_p1;
reg  signed [7:0] trunc_ln237_reg_2407;
wire   [4:0] m70_fu_1183_p1;
reg   [4:0] m70_reg_2412;
wire    ap_CS_fsm_state12;
wire  signed [9:0] add_ln235_fu_1193_p2;
reg  signed [9:0] add_ln235_reg_2417;
wire  signed [6:0] m76_fu_1206_p2;
reg  signed [6:0] m76_reg_2423;
wire  signed [4:0] m77_fu_1227_p1;
reg  signed [4:0] m77_reg_2429;
wire  signed [7:0] m78_fu_1240_p1;
reg  signed [7:0] m78_reg_2435;
wire   [8:0] m79_fu_1253_p1;
reg  signed [8:0] m79_reg_2441;
wire   [7:0] trunc_ln252_1_fu_1257_p1;
reg   [7:0] trunc_ln252_1_reg_2446;
wire   [7:0] m80_fu_1275_p2;
reg   [7:0] m80_reg_2451;
wire    ap_CS_fsm_state13;
wire   [9:0] m81_fu_1291_p1;
reg   [9:0] m81_reg_2457;
wire  signed [9:0] sext_ln244_fu_1295_p1;
wire   [7:0] m84_fu_1307_p1;
reg   [7:0] m84_reg_2467;
wire   [9:0] m85_fu_1317_p1;
reg  signed [9:0] m85_reg_2472;
wire   [4:0] m86_fu_1330_p1;
reg   [4:0] m86_reg_2477;
wire  signed [5:0] m89_fu_1346_p1;
reg  signed [5:0] m89_reg_2482;
wire   [7:0] trunc_ln252_fu_1350_p1;
reg   [7:0] trunc_ln252_reg_2489;
wire   [3:0] trunc_ln253_fu_1354_p1;
reg   [3:0] trunc_ln253_reg_2494;
wire   [9:0] trunc_ln255_fu_1358_p1;
reg   [9:0] trunc_ln255_reg_2499;
wire  signed [7:0] trunc_ln256_1_fu_1362_p1;
reg  signed [7:0] trunc_ln256_1_reg_2504;
wire  signed [6:0] trunc_ln257_1_fu_1366_p1;
reg  signed [6:0] trunc_ln257_1_reg_2509;
wire   [9:0] grp_fu_2058_p3;
reg  signed [9:0] m82_reg_2514;
wire    ap_CS_fsm_state14;
wire  signed [7:0] trunc_ln256_fu_1398_p1;
reg  signed [7:0] trunc_ln256_reg_2520;
wire  signed [7:0] m90_fu_1402_p2;
reg  signed [7:0] m90_reg_2525;
wire   [9:0] add_ln255_fu_1422_p2;
reg   [9:0] add_ln255_reg_2530;
wire  signed [6:0] trunc_ln257_fu_1426_p1;
reg  signed [6:0] trunc_ln257_reg_2536;
wire  signed [6:0] trunc_ln268_fu_1443_p1;
reg  signed [6:0] trunc_ln268_reg_2541;
wire   [6:0] m92_fu_1469_p1;
reg   [6:0] m92_reg_2546;
wire    ap_CS_fsm_state15;
wire   [7:0] m94_fu_1473_p2;
reg   [7:0] m94_reg_2551;
wire   [19:0] zext_ln260_fu_1477_p1;
reg   [19:0] zext_ln260_reg_2557;
wire   [9:0] m98_fu_1492_p1;
reg   [9:0] m98_reg_2562;
wire  signed [8:0] trunc_ln275_fu_1496_p1;
reg  signed [8:0] trunc_ln275_reg_2568;
wire   [4:0] m103_fu_1509_p1;
reg   [4:0] m103_reg_2573;
wire  signed [6:0] mul_ln268_fu_1513_p2;
reg  signed [6:0] mul_ln268_reg_2578;
wire   [7:0] trunc_ln269_fu_1517_p1;
reg   [7:0] trunc_ln269_reg_2583;
wire  signed [8:0] add_ln258_fu_1527_p2;
reg  signed [8:0] add_ln258_reg_2588;
wire    ap_CS_fsm_state16;
wire   [19:0] zext_ln262_1_fu_1536_p1;
reg   [19:0] zext_ln262_1_reg_2595;
wire   [9:0] m100_fu_1544_p1;
reg   [9:0] m100_reg_2600;
wire  signed [6:0] m105_fu_1557_p1;
reg  signed [6:0] m105_reg_2607;
wire  signed [6:0] m106_fu_1561_p2;
reg  signed [6:0] m106_reg_2613;
wire  signed [8:0] mul_ln275_fu_1565_p2;
reg  signed [8:0] mul_ln275_reg_2619;
wire  signed [7:0] m102_fu_1588_p1;
reg  signed [7:0] m102_reg_2624;
wire    ap_CS_fsm_state17;
wire  signed [9:0] m104_fu_1597_p1;
reg  signed [9:0] m104_reg_2630;
wire   [7:0] trunc_ln269_1_fu_1601_p1;
reg   [7:0] trunc_ln269_1_reg_2636;
wire   [8:0] m113_fu_1605_p2;
reg   [8:0] m113_reg_2641;
wire   [6:0] m114_fu_1618_p1;
reg  signed [6:0] m114_reg_2646;
wire   [9:0] m99_fu_1625_p2;
reg   [9:0] m99_reg_2651;
wire    ap_CS_fsm_state18;
wire   [7:0] m107_fu_1630_p2;
reg   [7:0] m107_reg_2656;
wire   [6:0] m109_fu_1646_p1;
reg   [6:0] m109_reg_2662;
wire   [4:0] m110_fu_1683_p1;
reg   [4:0] m110_reg_2667;
wire    ap_CS_fsm_state19;
wire  signed [4:0] m111_fu_1714_p1;
reg  signed [4:0] m111_reg_2672;
wire    ap_CS_fsm_state20;
wire  signed [7:0] m108_fu_1727_p1;
reg  signed [7:0] m108_reg_2678;
wire    ap_CS_fsm_state21;
wire   [7:0] m115_fu_1734_p2;
reg   [7:0] m115_reg_2684;
wire  signed [14:0] sext_ln279_fu_1739_p1;
reg  signed [14:0] sext_ln279_reg_2689;
wire   [9:0] m117_fu_1751_p1;
reg   [9:0] m117_reg_2694;
wire  signed [6:0] trunc_ln283_fu_1755_p1;
reg  signed [6:0] trunc_ln283_reg_2699;
wire  signed [8:0] trunc_ln300_1_fu_1759_p1;
reg  signed [8:0] trunc_ln300_1_reg_2704;
wire   [9:0] m118_fu_1775_p1;
reg   [9:0] m118_reg_2709;
wire    ap_CS_fsm_state22;
wire  signed [6:0] m121_fu_1779_p2;
reg  signed [6:0] m121_reg_2716;
wire   [7:0] m120_fu_1795_p1;
reg  signed [7:0] m120_reg_2722;
wire    ap_CS_fsm_state23;
wire   [9:0] m122_fu_1807_p1;
reg   [9:0] m122_reg_2727;
wire  signed [9:0] m125_fu_1814_p2;
reg  signed [9:0] m125_reg_2732;
wire  signed [5:0] trunc_ln291_fu_1819_p1;
reg  signed [5:0] trunc_ln291_reg_2738;
wire  signed [5:0] trunc_ln291_1_fu_1823_p1;
reg  signed [5:0] trunc_ln291_1_reg_2743;
wire  signed [8:0] trunc_ln300_fu_1827_p1;
reg  signed [8:0] trunc_ln300_reg_2748;
wire  signed [3:0] trunc_ln294_2_fu_1831_p1;
reg  signed [3:0] trunc_ln294_2_reg_2753;
wire  signed [3:0] trunc_ln299_fu_1835_p1;
reg  signed [3:0] trunc_ln299_reg_2758;
wire   [16:0] zext_ln285_fu_1839_p1;
reg   [16:0] zext_ln285_reg_2763;
wire    ap_CS_fsm_state24;
wire   [7:0] m123_fu_1851_p1;
reg   [7:0] m123_reg_2768;
wire  signed [9:0] m127_fu_1871_p1;
reg  signed [9:0] m127_reg_2773;
wire  signed [7:0] trunc_ln294_fu_1879_p1;
reg  signed [7:0] trunc_ln294_reg_2778;
wire  signed [3:0] trunc_ln294_1_fu_1883_p1;
reg  signed [3:0] trunc_ln294_1_reg_2783;
wire  signed [7:0] m133_fu_1902_p1;
reg  signed [7:0] m133_reg_2788;
wire  signed [6:0] trunc_ln306_fu_1920_p1;
reg  signed [6:0] trunc_ln306_reg_2794;
wire  signed [7:0] m124_fu_1942_p1;
reg  signed [7:0] m124_reg_2799;
wire    ap_CS_fsm_state25;
wire  signed [9:0] m130_fu_1946_p2;
reg  signed [9:0] m130_reg_2805;
wire  signed [3:0] m137_fu_1960_p2;
reg  signed [3:0] m137_reg_2810;
wire   [8:0] trunc_ln300_2_fu_1965_p1;
reg   [8:0] trunc_ln300_2_reg_2816;
wire  signed [9:0] mul_ln302_fu_1969_p2;
reg  signed [9:0] mul_ln302_reg_2821;
wire   [8:0] m128_fu_1987_p1;
reg   [8:0] m128_reg_2826;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state28;
wire   [15:0] mul_ln259_fu_1436_p2;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state29;
wire  signed [3:0] in8_fu_443_p1;
wire  signed [9:0] m19_fu_455_p0;
wire  signed [9:0] mul_ln183_fu_464_p0;
wire  signed [19:0] sext_ln183_fu_461_p1;
wire  signed [9:0] mul_ln183_fu_464_p1;
wire   [19:0] mul_ln183_fu_464_p2;
wire   [8:0] in7_fu_478_p1;
wire   [15:0] mul_ln184_fu_502_p0;
wire   [8:0] mul_ln184_fu_502_p1;
wire   [18:0] mul_ln184_fu_502_p2;
wire  signed [5:0] m24_fu_520_p0;
wire  signed [5:0] m24_fu_520_p1;
wire   [7:0] in14_fu_486_p1;
wire   [4:0] trunc_ln187_fu_530_p1;
wire   [4:0] in13_fu_482_p1;
wire   [9:0] in15_fu_490_p1;
wire   [9:0] mul_ln188_fu_547_p0;
wire   [9:0] mul_ln188_fu_547_p1;
wire   [19:0] mul_ln188_fu_547_p2;
wire   [5:0] m24_fu_520_p2;
wire  signed [8:0] sext_ln187_fu_526_p1;
wire  signed [8:0] sext_ln189_fu_557_p1;
wire   [8:0] add_ln189_fu_561_p2;
wire  signed [8:0] m23_fu_600_p0;
wire   [8:0] in11_fu_584_p1;
wire  signed [9:0] sext_ln191_fu_609_p1;
wire  signed [9:0] sext_ln191_1_fu_613_p1;
wire   [9:0] in17_fu_588_p1;
wire   [9:0] mul_ln195_fu_649_p0;
wire   [9:0] mul_ln195_fu_649_p1;
wire   [19:0] mul_ln195_fu_649_p2;
wire   [8:0] mul_ln197_fu_662_p0;
wire   [9:0] mul_ln197_fu_662_p1;
wire   [18:0] mul_ln197_fu_662_p2;
wire   [9:0] mul_ln198_fu_675_p0;
wire   [4:0] mul_ln198_fu_675_p1;
wire   [10:0] mul_ln198_fu_675_p2;
wire   [8:0] m35_fu_668_p1;
wire   [2:0] trunc_ln182_fu_702_p1;
wire   [2:0] in10_fu_698_p1;
wire   [2:0] mul_ln182_fu_714_p0;
wire   [2:0] mul_ln182_fu_714_p1;
wire   [5:0] mul_ln182_fu_714_p2;
wire  signed [2:0] m30_fu_731_p0;
wire   [9:0] mul_ln196_fu_742_p0;
wire   [18:0] mul_ln196_fu_742_p2;
wire   [8:0] mul_ln199_fu_761_p0;
wire   [9:0] mul_ln199_fu_761_p1;
wire   [18:0] mul_ln199_fu_761_p2;
wire   [9:0] mul_ln200_fu_774_p0;
wire   [9:0] mul_ln200_fu_774_p1;
wire   [10:0] mul_ln200_fu_774_p2;
wire   [9:0] mul_ln205_fu_787_p0;
wire   [9:0] mul_ln205_fu_787_p1;
wire   [19:0] mul_ln205_fu_787_p2;
wire   [2:0] mul_ln201_fu_816_p0;
wire   [6:0] mul_ln201_fu_816_p2;
wire  signed [7:0] sext_ln204_fu_825_p1;
wire   [9:0] mul_ln206_fu_839_p0;
wire   [4:0] mul_ln206_fu_839_p1;
wire   [10:0] mul_ln206_fu_839_p2;
wire  signed [7:0] add_ln207_fu_828_p2;
wire  signed [6:0] m49_fu_858_p0;
wire   [2:0] mul_ln203_fu_878_p0;
wire   [6:0] mul_ln203_fu_878_p2;
wire   [4:0] m46_fu_887_p2;
wire   [7:0] m47_fu_894_p2;
wire  signed [3:0] sext_ln216_fu_921_p1;
wire   [1:0] trunc_ln222_1_fu_937_p1;
wire   [1:0] trunc_ln222_fu_929_p1;
wire   [3:0] mul_ln225_fu_962_p1;
wire   [6:0] mul_ln225_fu_962_p2;
wire   [6:0] m55_fu_947_p2;
wire  signed [9:0] sext_ln226_1_fu_975_p1;
wire  signed [9:0] sext_ln226_fu_971_p1;
wire   [9:0] add_ln226_fu_978_p2;
wire   [9:0] mul_ln213_fu_995_p0;
wire   [9:0] mul_ln213_fu_995_p1;
wire   [19:0] mul_ln213_fu_995_p2;
wire  signed [9:0] sext_ln219_fu_1021_p1;
wire  signed [7:0] sext_ln223_fu_1029_p1;
wire   [14:0] mul_ln224_fu_1047_p2;
wire  signed [7:0] m67_fu_1064_p0;
wire   [9:0] mul_ln228_fu_1087_p0;
wire   [12:0] mul_ln228_fu_1087_p2;
wire   [7:0] mul_ln230_fu_1103_p0;
wire   [8:0] mul_ln230_fu_1103_p2;
wire  signed [9:0] sext_ln233_fu_1118_p1;
wire  signed [3:0] m56_fu_1074_p2;
wire   [7:0] mul_ln234_fu_1133_p2;
wire   [3:0] mul_ln236_fu_1149_p0;
wire   [6:0] mul_ln236_fu_1149_p2;
wire   [3:0] m68_fu_1109_p1;
wire   [4:0] mul_ln232_fu_1177_p0;
wire   [9:0] mul_ln232_fu_1177_p2;
wire  signed [9:0] sext_ln235_fu_1187_p1;
wire  signed [9:0] sext_ln235_1_fu_1190_p1;
wire  signed [4:0] m75_fu_1199_p1;
wire   [9:0] mul_ln239_fu_1221_p0;
wire   [8:0] mul_ln239_fu_1221_p1;
wire   [10:0] mul_ln239_fu_1221_p2;
wire  signed [8:0] mul_ln240_fu_1234_p0;
wire  signed [12:0] sext_ln239_fu_1212_p1;
wire   [12:0] mul_ln240_fu_1234_p2;
wire  signed [8:0] mul_ln241_fu_1247_p0;
wire   [12:0] mul_ln241_fu_1247_p2;
wire   [7:0] m75_fu_1199_p2;
wire   [18:0] mul_ln243_fu_1285_p2;
wire   [7:0] mul_ln246_fu_1301_p0;
wire   [14:0] mul_ln246_fu_1301_p2;
wire   [17:0] mul_ln247_fu_1311_p2;
wire   [4:0] mul_ln248_fu_1324_p0;
wire  signed [4:0] mul_ln248_fu_1324_p1;
wire   [9:0] mul_ln248_fu_1324_p2;
wire   [12:0] m87_fu_1340_p2;
wire   [9:0] mul_ln245_fu_1379_p0;
wire   [7:0] mul_ln245_fu_1379_p1;
wire   [16:0] mul_ln245_fu_1379_p2;
wire   [7:0] mul_ln250_fu_1392_p0;
wire   [12:0] mul_ln250_fu_1392_p2;
wire   [3:0] mul_ln253_fu_1412_p0;
wire   [5:0] mul_ln253_fu_1412_p1;
wire   [8:0] mul_ln253_fu_1412_p2;
wire  signed [9:0] trunc_ln257_fu_1426_p0;
wire   [7:0] m83_fu_1385_p1;
wire   [3:0] m91_fu_1418_p1;
wire   [13:0] mul_ln254_fu_1463_p2;
wire   [9:0] mul_ln260_fu_1486_p0;
wire   [9:0] mul_ln260_fu_1486_p1;
wire   [19:0] mul_ln260_fu_1486_p2;
wire   [9:0] mul_ln265_fu_1503_p0;
wire   [4:0] mul_ln265_fu_1503_p1;
wire   [10:0] mul_ln265_fu_1503_p2;
wire  signed [8:0] sext_ln258_1_fu_1524_p1;
wire  signed [8:0] sext_ln258_fu_1521_p1;
wire   [9:0] mul_ln262_fu_1539_p0;
wire   [9:0] mul_ln262_fu_1539_p1;
wire   [19:0] mul_ln262_fu_1539_p2;
wire   [9:0] mul_ln267_fu_1551_p0;
wire   [6:0] mul_ln267_fu_1551_p1;
wire   [14:0] mul_ln267_fu_1551_p2;
wire  signed [5:0] mul_ln275_fu_1565_p1;
wire   [9:0] mul_ln264_fu_1582_p0;
wire   [7:0] mul_ln264_fu_1582_p1;
wire   [16:0] mul_ln264_fu_1582_p2;
wire   [9:0] mul_ln266_fu_1592_p0;
wire   [9:0] mul_ln266_fu_1592_p1;
wire   [19:0] mul_ln266_fu_1592_p2;
wire   [9:0] mul_ln276_fu_1612_p0;
wire   [6:0] mul_ln276_fu_1612_p1;
wire   [14:0] mul_ln276_fu_1612_p2;
wire   [7:0] mul_ln271_fu_1640_p0;
wire   [8:0] mul_ln271_fu_1640_p1;
wire   [14:0] mul_ln271_fu_1640_p2;
wire   [9:0] mul_ln281_fu_1653_p0;
wire   [14:0] zext_ln281_fu_1650_p1;
wire   [9:0] mul_ln281_fu_1653_p1;
wire   [14:0] mul_ln281_fu_1653_p2;
wire   [6:0] m119_fu_1659_p1;
wire   [7:0] mul_ln272_fu_1677_p0;
wire   [4:0] mul_ln272_fu_1677_p1;
wire   [10:0] mul_ln272_fu_1677_p2;
wire   [6:0] mul_ln274_fu_1690_p0;
wire   [7:0] mul_ln274_fu_1690_p1;
wire   [14:0] mul_ln274_fu_1690_p2;
wire   [6:0] m112_fu_1696_p1;
wire   [4:0] mul_ln273_fu_1708_p0;
wire   [9:0] zext_ln273_fu_1705_p1;
wire   [4:0] mul_ln273_fu_1708_p1;
wire   [9:0] mul_ln273_fu_1708_p2;
wire  signed [6:0] mul_ln270_fu_1721_p0;
wire  signed [13:0] sext_ln270_fu_1718_p1;
wire  signed [6:0] mul_ln270_fu_1721_p1;
wire   [13:0] mul_ln270_fu_1721_p2;
wire   [9:0] mul_ln279_fu_1745_p0;
wire   [14:0] mul_ln279_fu_1745_p2;
wire   [9:0] mul_ln280_fu_1769_p0;
wire   [17:0] mul_ln280_fu_1769_p2;
wire   [7:0] mul_ln282_fu_1789_p0;
wire   [15:0] mul_ln282_fu_1789_p2;
wire   [9:0] mul_ln284_fu_1802_p0;
wire  signed [4:0] mul_ln284_fu_1802_p1;
wire   [14:0] mul_ln284_fu_1802_p2;
wire  signed [9:0] sext_ln287_fu_1811_p1;
wire   [9:0] mul_ln285_fu_1845_p0;
wire   [7:0] mul_ln285_fu_1845_p1;
wire   [16:0] mul_ln285_fu_1845_p2;
wire   [9:0] mul_ln289_fu_1865_p0;
wire   [16:0] mul_ln289_fu_1865_p2;
wire   [9:0] mul_ln295_fu_1896_p0;
wire   [16:0] mul_ln295_fu_1896_p2;
wire  signed [5:0] shl_ln_fu_1855_p3;
wire   [15:0] mul_ln298_fu_1910_p2;
wire   [5:0] m129_fu_1875_p2;
wire   [10:0] m136_fu_1916_p1;
wire   [9:0] mul_ln286_fu_1937_p0;
wire   [7:0] mul_ln286_fu_1937_p1;
wire   [16:0] mul_ln286_fu_1937_p2;
wire  signed [3:0] mul_ln299_fu_1956_p2;
wire   [9:0] mul_ln290_fu_1981_p0;
wire   [17:0] mul_ln290_fu_1981_p2;
wire   [6:0] mul_ln306_fu_1998_p2;
wire   [9:0] m140_fu_1991_p2;
wire   [7:0] m144_fu_2003_p3;
wire   [8:0] mul_ln303_fu_2027_p0;
wire   [12:0] mul_ln303_fu_2027_p2;
wire  signed [8:0] grp_fu_2065_p3;
wire   [8:0] m141_fu_2033_p1;
wire  signed [7:0] grp_fu_2071_p3;
(* use_dsp48 = "no" *) wire   [7:0] m142_fu_2049_p2;
wire  signed [4:0] grp_fu_2058_p2;
reg   [28:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire   [5:0] mul_ln182_fu_714_p00;
wire   [5:0] mul_ln182_fu_714_p10;
wire   [18:0] mul_ln184_fu_502_p00;
wire   [18:0] mul_ln184_fu_502_p10;
wire   [19:0] mul_ln188_fu_547_p00;
wire   [19:0] mul_ln188_fu_547_p10;
wire   [19:0] mul_ln195_fu_649_p00;
wire   [19:0] mul_ln195_fu_649_p10;
wire   [18:0] mul_ln196_fu_742_p00;
wire   [18:0] mul_ln197_fu_662_p00;
wire   [18:0] mul_ln197_fu_662_p10;
wire   [10:0] mul_ln198_fu_675_p00;
wire   [10:0] mul_ln198_fu_675_p10;
wire   [18:0] mul_ln199_fu_761_p00;
wire   [18:0] mul_ln199_fu_761_p10;
wire   [10:0] mul_ln200_fu_774_p00;
wire   [10:0] mul_ln200_fu_774_p10;
wire   [6:0] mul_ln201_fu_816_p00;
wire   [6:0] mul_ln203_fu_878_p00;
wire   [19:0] mul_ln205_fu_787_p00;
wire   [19:0] mul_ln205_fu_787_p10;
wire   [10:0] mul_ln206_fu_839_p00;
wire   [10:0] mul_ln206_fu_839_p10;
wire   [19:0] mul_ln213_fu_995_p00;
wire   [19:0] mul_ln213_fu_995_p10;
wire   [6:0] mul_ln225_fu_962_p10;
wire   [12:0] mul_ln228_fu_1087_p00;
wire   [8:0] mul_ln230_fu_1103_p00;
wire   [9:0] mul_ln232_fu_1177_p00;
wire   [6:0] mul_ln236_fu_1149_p00;
wire   [10:0] mul_ln239_fu_1221_p00;
wire   [10:0] mul_ln239_fu_1221_p10;
wire   [16:0] mul_ln245_fu_1379_p00;
wire   [16:0] mul_ln245_fu_1379_p10;
wire   [14:0] mul_ln246_fu_1301_p00;
wire   [9:0] mul_ln248_fu_1324_p00;
wire   [12:0] mul_ln250_fu_1392_p00;
wire   [8:0] mul_ln253_fu_1412_p00;
wire   [8:0] mul_ln253_fu_1412_p10;
wire   [19:0] mul_ln260_fu_1486_p00;
wire   [19:0] mul_ln260_fu_1486_p10;
wire   [19:0] mul_ln262_fu_1539_p00;
wire   [16:0] mul_ln264_fu_1582_p00;
wire   [16:0] mul_ln264_fu_1582_p10;
wire   [10:0] mul_ln265_fu_1503_p00;
wire   [10:0] mul_ln265_fu_1503_p10;
wire   [19:0] mul_ln266_fu_1592_p10;
wire   [14:0] mul_ln267_fu_1551_p00;
wire   [14:0] mul_ln267_fu_1551_p10;
wire   [14:0] mul_ln271_fu_1640_p00;
wire   [14:0] mul_ln271_fu_1640_p10;
wire   [10:0] mul_ln272_fu_1677_p00;
wire   [10:0] mul_ln272_fu_1677_p10;
wire   [14:0] mul_ln274_fu_1690_p00;
wire   [14:0] mul_ln274_fu_1690_p10;
wire   [14:0] mul_ln276_fu_1612_p00;
wire   [14:0] mul_ln276_fu_1612_p10;
wire   [14:0] mul_ln279_fu_1745_p00;
wire   [17:0] mul_ln280_fu_1769_p00;
wire   [15:0] mul_ln282_fu_1789_p00;
wire   [14:0] mul_ln284_fu_1802_p00;
wire   [16:0] mul_ln285_fu_1845_p10;
wire   [16:0] mul_ln286_fu_1937_p10;
wire   [17:0] mul_ln290_fu_1981_p00;
wire   [16:0] mul_ln295_fu_1896_p00;
wire   [12:0] mul_ln303_fu_2027_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'd1;
end

case_1_mul_10s_4s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
mul_10s_4s_10_1_1_U1(
    .din0(m19_fu_455_p0),
    .din1(in8_fu_443_p1),
    .dout(m19_fu_455_p2)
);

case_1_mul_10s_10s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10s_10s_20_1_1_U2(
    .din0(mul_ln183_fu_464_p0),
    .din1(mul_ln183_fu_464_p1),
    .dout(mul_ln183_fu_464_p2)
);

case_1_mul_16ns_9ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 19 ))
mul_16ns_9ns_19_1_1_U3(
    .din0(mul_ln184_fu_502_p0),
    .din1(mul_ln184_fu_502_p1),
    .dout(mul_ln184_fu_502_p2)
);

case_1_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U4(
    .din0(m24_fu_520_p0),
    .din1(m24_fu_520_p1),
    .dout(m24_fu_520_p2)
);

case_1_mul_10ns_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10ns_20_1_1_U5(
    .din0(mul_ln188_fu_547_p0),
    .din1(mul_ln188_fu_547_p1),
    .dout(mul_ln188_fu_547_p2)
);

case_1_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U6(
    .din0(m23_fu_600_p0),
    .din1(trunc_ln185_1_reg_2089),
    .dout(m23_fu_600_p2)
);

case_1_mul_10ns_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10ns_20_1_1_U7(
    .din0(mul_ln195_fu_649_p0),
    .din1(mul_ln195_fu_649_p1),
    .dout(mul_ln195_fu_649_p2)
);

case_1_mul_9ns_10ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 19 ))
mul_9ns_10ns_19_1_1_U8(
    .din0(mul_ln197_fu_662_p0),
    .din1(mul_ln197_fu_662_p1),
    .dout(mul_ln197_fu_662_p2)
);

case_1_mul_10ns_5ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
mul_10ns_5ns_11_1_1_U9(
    .din0(mul_ln198_fu_675_p0),
    .din1(mul_ln198_fu_675_p1),
    .dout(mul_ln198_fu_675_p2)
);

case_1_mul_3ns_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3ns_6_1_1_U10(
    .din0(mul_ln182_fu_714_p0),
    .din1(mul_ln182_fu_714_p1),
    .dout(mul_ln182_fu_714_p2)
);

case_1_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U11(
    .din0(trunc_ln190_1_reg_2110),
    .din1(trunc_ln190_reg_2135),
    .dout(m28_fu_727_p2)
);

case_1_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U12(
    .din0(m30_fu_731_p0),
    .din1(trunc_ln192_1_reg_2115),
    .dout(m30_fu_731_p2)
);

case_1_mul_10ns_9s_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 19 ))
mul_10ns_9s_19_1_1_U13(
    .din0(mul_ln196_fu_742_p0),
    .din1(in18_reg_2125),
    .dout(mul_ln196_fu_742_p2)
);

case_1_mul_9ns_10ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 19 ))
mul_9ns_10ns_19_1_1_U14(
    .din0(mul_ln199_fu_761_p0),
    .din1(mul_ln199_fu_761_p1),
    .dout(mul_ln199_fu_761_p2)
);

case_1_mul_10ns_10ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mul_10ns_10ns_11_1_1_U15(
    .din0(mul_ln200_fu_774_p0),
    .din1(mul_ln200_fu_774_p1),
    .dout(mul_ln200_fu_774_p2)
);

case_1_mul_10ns_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10ns_20_1_1_U16(
    .din0(mul_ln205_fu_787_p0),
    .din1(mul_ln205_fu_787_p1),
    .dout(mul_ln205_fu_787_p2)
);

case_1_mul_3ns_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_3ns_7s_7_1_1_U17(
    .din0(mul_ln201_fu_816_p0),
    .din1(m28_reg_2177),
    .dout(mul_ln201_fu_816_p2)
);

case_1_mul_10ns_5ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
mul_10ns_5ns_11_1_1_U18(
    .din0(mul_ln206_fu_839_p0),
    .din1(mul_ln206_fu_839_p1),
    .dout(mul_ln206_fu_839_p2)
);

case_1_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U19(
    .din0(trunc_ln207_reg_2212),
    .din1(add_ln207_fu_828_p2),
    .dout(m45_fu_849_p2)
);

case_1_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U20(
    .din0(m49_fu_858_p0),
    .din1(trunc_ln211_1_reg_2222),
    .dout(m49_fu_858_p2)
);

case_1_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U21(
    .din0(trunc_ln214_1_reg_2227),
    .din1(trunc_ln214_reg_2194),
    .dout(m52_fu_863_p2)
);

case_1_mul_3ns_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_3ns_7s_7_1_1_U22(
    .din0(mul_ln203_fu_878_p0),
    .din1(m28_reg_2177),
    .dout(mul_ln203_fu_878_p2)
);

case_1_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U23(
    .din0(m44_reg_2237),
    .din1(trunc_ln208_reg_2217),
    .dout(m46_fu_887_p2)
);

case_1_mul_8s_5s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
mul_8s_5s_8_1_1_U24(
    .din0(m45_reg_2245),
    .din1(m44_reg_2237),
    .dout(m47_fu_894_p2)
);

case_1_mul_7s_5s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_7s_5s_7_1_1_U25(
    .din0(m28_reg_2177),
    .din1(m44_reg_2237),
    .dout(mul_ln212_fu_902_p2)
);

case_1_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U26(
    .din0(mul_ln212_reg_2280),
    .din1(trunc_ln212_reg_2120),
    .dout(m50_fu_917_p2)
);

case_1_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U27(
    .din0(trunc_ln220_reg_2268),
    .din1(m41_reg_2273),
    .dout(m58_fu_933_p2)
);

case_1_mul_5s_3s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 5 ))
mul_5s_3s_5_1_1_U28(
    .din0(m44_reg_2237),
    .din1(m58_reg_2300),
    .dout(m59_fu_954_p2)
);

case_1_mul_7s_4ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 7 ))
mul_7s_4ns_7_1_1_U29(
    .din0(m50_reg_2285),
    .din1(mul_ln225_fu_962_p1),
    .dout(mul_ln225_fu_962_p2)
);

case_1_mul_10ns_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10ns_20_1_1_U30(
    .din0(mul_ln213_fu_995_p0),
    .din1(mul_ln213_fu_995_p1),
    .dout(mul_ln213_fu_995_p2)
);

case_1_mul_5s_3s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 5 ))
mul_5s_3s_5_1_1_U31(
    .din0(trunc_ln215_reg_2162),
    .din1(m41_reg_2273),
    .dout(m53_fu_1012_p2)
);

case_1_mul_8s_7s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
mul_8s_7s_15_1_1_U32(
    .din0(m45_reg_2245),
    .din1(m49_reg_2252),
    .dout(mul_ln224_fu_1047_p2)
);

case_1_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U33(
    .din0(m33_reg_2156),
    .din1(m43_reg_2204),
    .dout(mul_ln227_fu_1057_p2)
);

case_1_mul_8s_3s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mul_8s_3s_8_1_1_U34(
    .din0(m67_fu_1064_p0),
    .din1(m63_reg_2320),
    .dout(m67_fu_1064_p2)
);

case_1_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U35(
    .din0(trunc_ln218_reg_2340),
    .din1(m54_reg_2292),
    .dout(m56_fu_1074_p2)
);

case_1_mul_10ns_5s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
mul_10ns_5s_13_1_1_U36(
    .din0(mul_ln228_fu_1087_p0),
    .din1(m59_reg_2312),
    .dout(mul_ln228_fu_1087_p2)
);

case_1_mul_8ns_4s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 9 ))
mul_8ns_4s_9_1_1_U37(
    .din0(mul_ln230_fu_1103_p0),
    .din1(m54_reg_2292),
    .dout(mul_ln230_fu_1103_p2)
);

case_1_mul_9s_8s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_9s_8s_9_1_1_U38(
    .din0(m51_reg_2330),
    .din1(m67_reg_2366),
    .dout(m69_fu_1113_p2)
);

case_1_mul_4s_4s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
mul_4s_4s_8_1_1_U39(
    .din0(m56_fu_1074_p2),
    .din1(m54_reg_2292),
    .dout(mul_ln234_fu_1133_p2)
);

case_1_mul_4ns_3s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
mul_4ns_3s_7_1_1_U40(
    .din0(mul_ln236_fu_1149_p0),
    .din1(m58_reg_2300),
    .dout(mul_ln236_fu_1149_p2)
);

case_1_mul_5ns_5s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mul_5ns_5s_10_1_1_U41(
    .din0(mul_ln232_fu_1177_p0),
    .din1(m59_reg_2312),
    .dout(mul_ln232_fu_1177_p2)
);

case_1_mul_8s_5s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
mul_8s_5s_8_1_1_U42(
    .din0(trunc_ln237_reg_2407),
    .din1(m75_fu_1199_p1),
    .dout(m75_fu_1199_p2)
);

case_1_mul_5s_2s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 7 ))
mul_5s_2s_7_1_1_U43(
    .din0(m59_reg_2312),
    .din1(m60_reg_2307),
    .dout(m76_fu_1206_p2)
);

case_1_mul_10ns_9ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
mul_10ns_9ns_11_1_1_U44(
    .din0(mul_ln239_fu_1221_p0),
    .din1(mul_ln239_fu_1221_p1),
    .dout(mul_ln239_fu_1221_p2)
);

case_1_mul_9s_4s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 13 ))
mul_9s_4s_13_1_1_U45(
    .din0(mul_ln240_fu_1234_p0),
    .din1(m72_reg_2397),
    .dout(mul_ln240_fu_1234_p2)
);

case_1_mul_9s_4s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 13 ))
mul_9s_4s_13_1_1_U46(
    .din0(mul_ln241_fu_1247_p0),
    .din1(m74_reg_2402),
    .dout(mul_ln241_fu_1247_p2)
);

case_1_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U47(
    .din0(m78_reg_2435),
    .din1(m62_reg_2356),
    .dout(m80_fu_1275_p2)
);

case_1_mul_10s_9s_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 19 ))
mul_10s_9s_19_1_1_U48(
    .din0(add_ln235_reg_2417),
    .din1(m79_reg_2441),
    .dout(mul_ln243_fu_1285_p2)
);

case_1_mul_8ns_7s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
mul_8ns_7s_15_1_1_U49(
    .din0(mul_ln246_fu_1301_p0),
    .din1(m76_reg_2423),
    .dout(mul_ln246_fu_1301_p2)
);

case_1_mul_10s_8s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10s_8s_18_1_1_U50(
    .din0(m71_reg_2390),
    .din1(m67_reg_2366),
    .dout(mul_ln247_fu_1311_p2)
);

case_1_mul_5ns_5s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mul_5ns_5s_10_1_1_U51(
    .din0(mul_ln248_fu_1324_p0),
    .din1(mul_ln248_fu_1324_p1),
    .dout(mul_ln248_fu_1324_p2)
);

case_1_mul_10s_7s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 13 ))
mul_10s_7s_13_1_1_U52(
    .din0(add_ln235_reg_2417),
    .din1(m76_reg_2423),
    .dout(m87_fu_1340_p2)
);

case_1_mul_10ns_8ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
mul_10ns_8ns_17_1_1_U53(
    .din0(mul_ln245_fu_1379_p0),
    .din1(mul_ln245_fu_1379_p1),
    .dout(mul_ln245_fu_1379_p2)
);

case_1_mul_8ns_5s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
mul_8ns_5s_13_1_1_U54(
    .din0(mul_ln250_fu_1392_p0),
    .din1(m77_reg_2429),
    .dout(mul_ln250_fu_1392_p2)
);

case_1_mul_4ns_6ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 9 ))
mul_4ns_6ns_9_1_1_U55(
    .din0(mul_ln253_fu_1412_p0),
    .din1(mul_ln253_fu_1412_p1),
    .dout(mul_ln253_fu_1412_p2)
);

case_1_mul_10s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_10s_8s_16_1_1_U56(
    .din0(m85_reg_2472),
    .din1(m90_fu_1402_p2),
    .dout(mul_ln259_fu_1436_p2)
);

case_1_mul_8s_6s_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 14 ))
mul_8s_6s_14_1_1_U57(
    .din0(m90_reg_2525),
    .din1(m89_reg_2482),
    .dout(mul_ln254_fu_1463_p2)
);

case_1_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U58(
    .din0(trunc_ln256_reg_2520),
    .din1(trunc_ln256_1_reg_2504),
    .dout(m94_fu_1473_p2)
);

case_1_mul_10ns_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10ns_20_1_1_U59(
    .din0(mul_ln260_fu_1486_p0),
    .din1(mul_ln260_fu_1486_p1),
    .dout(mul_ln260_fu_1486_p2)
);

case_1_mul_10ns_5ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
mul_10ns_5ns_11_1_1_U60(
    .din0(mul_ln265_fu_1503_p0),
    .din1(mul_ln265_fu_1503_p1),
    .dout(mul_ln265_fu_1503_p2)
);

case_1_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U61(
    .din0(trunc_ln257_1_reg_2509),
    .din1(trunc_ln268_reg_2541),
    .dout(mul_ln268_fu_1513_p2)
);

case_1_mul_10ns_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10ns_20_1_1_U62(
    .din0(mul_ln262_fu_1539_p0),
    .din1(mul_ln262_fu_1539_p1),
    .dout(mul_ln262_fu_1539_p2)
);

case_1_mul_10ns_7ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
mul_10ns_7ns_15_1_1_U63(
    .din0(mul_ln267_fu_1551_p0),
    .din1(mul_ln267_fu_1551_p1),
    .dout(mul_ln267_fu_1551_p2)
);

case_1_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U64(
    .din0(mul_ln268_reg_2578),
    .din1(trunc_ln257_reg_2536),
    .dout(m106_fu_1561_p2)
);

case_1_mul_9s_6s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 9 ))
mul_9s_6s_9_1_1_U65(
    .din0(trunc_ln275_reg_2568),
    .din1(mul_ln275_fu_1565_p1),
    .dout(mul_ln275_fu_1565_p2)
);

case_1_mul_10ns_8ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
mul_10ns_8ns_17_1_1_U66(
    .din0(mul_ln264_fu_1582_p0),
    .din1(mul_ln264_fu_1582_p1),
    .dout(mul_ln264_fu_1582_p2)
);

case_1_mul_10ns_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10ns_20_1_1_U67(
    .din0(mul_ln266_fu_1592_p0),
    .din1(mul_ln266_fu_1592_p1),
    .dout(mul_ln266_fu_1592_p2)
);

case_1_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U68(
    .din0(mul_ln275_reg_2619),
    .din1(add_ln258_reg_2588),
    .dout(m113_fu_1605_p2)
);

case_1_mul_10ns_7ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
mul_10ns_7ns_15_1_1_U69(
    .din0(mul_ln276_fu_1612_p0),
    .din1(mul_ln276_fu_1612_p1),
    .dout(mul_ln276_fu_1612_p2)
);

case_1_mul_10s_9s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 10 ))
mul_10s_9s_10_1_1_U70(
    .din0(m82_reg_2514),
    .din1(add_ln258_reg_2588),
    .dout(m99_fu_1625_p2)
);

case_1_mul_8ns_9ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
mul_8ns_9ns_15_1_1_U71(
    .din0(mul_ln271_fu_1640_p0),
    .din1(mul_ln271_fu_1640_p1),
    .dout(mul_ln271_fu_1640_p2)
);

case_1_mul_10ns_10ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 15 ))
mul_10ns_10ns_15_1_1_U72(
    .din0(mul_ln281_fu_1653_p0),
    .din1(mul_ln281_fu_1653_p1),
    .dout(mul_ln281_fu_1653_p2)
);

case_1_mul_8ns_5ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
mul_8ns_5ns_11_1_1_U73(
    .din0(mul_ln272_fu_1677_p0),
    .din1(mul_ln272_fu_1677_p1),
    .dout(mul_ln272_fu_1677_p2)
);

case_1_mul_7ns_8ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 15 ))
mul_7ns_8ns_15_1_1_U74(
    .din0(mul_ln274_fu_1690_p0),
    .din1(mul_ln274_fu_1690_p1),
    .dout(mul_ln274_fu_1690_p2)
);

case_1_mul_5ns_5ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mul_5ns_5ns_10_1_1_U75(
    .din0(mul_ln273_fu_1708_p0),
    .din1(mul_ln273_fu_1708_p1),
    .dout(mul_ln273_fu_1708_p2)
);

case_1_mul_7s_7s_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 14 ))
mul_7s_7s_14_1_1_U76(
    .din0(mul_ln270_fu_1721_p0),
    .din1(mul_ln270_fu_1721_p1),
    .dout(mul_ln270_fu_1721_p2)
);

case_1_mul_8s_7s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
mul_8s_7s_8_1_1_U77(
    .din0(m102_reg_2624),
    .din1(m105_reg_2607),
    .dout(m115_fu_1734_p2)
);

case_1_mul_10ns_5s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 15 ))
mul_10ns_5s_15_1_1_U78(
    .din0(mul_ln279_fu_1745_p0),
    .din1(m111_reg_2672),
    .dout(mul_ln279_fu_1745_p2)
);

case_1_mul_10ns_8s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10ns_8s_18_1_1_U79(
    .din0(mul_ln280_fu_1769_p0),
    .din1(m108_reg_2678),
    .dout(mul_ln280_fu_1769_p2)
);

case_1_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U80(
    .din0(trunc_ln283_reg_2699),
    .din1(m106_reg_2613),
    .dout(m121_fu_1779_p2)
);

case_1_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U81(
    .din0(mul_ln282_fu_1789_p0),
    .din1(m108_reg_2678),
    .dout(mul_ln282_fu_1789_p2)
);

case_1_mul_10ns_5s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 15 ))
mul_10ns_5s_15_1_1_U82(
    .din0(mul_ln284_fu_1802_p0),
    .din1(mul_ln284_fu_1802_p1),
    .dout(mul_ln284_fu_1802_p2)
);

case_1_mul_10ns_8ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
mul_10ns_8ns_17_1_1_U83(
    .din0(mul_ln285_fu_1845_p0),
    .din1(mul_ln285_fu_1845_p1),
    .dout(mul_ln285_fu_1845_p2)
);

case_1_mul_10ns_7s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 17 ))
mul_10ns_7s_17_1_1_U84(
    .din0(mul_ln289_fu_1865_p0),
    .din1(m114_reg_2646),
    .dout(mul_ln289_fu_1865_p2)
);

case_1_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U85(
    .din0(trunc_ln291_reg_2738),
    .din1(trunc_ln291_1_reg_2743),
    .dout(m129_fu_1875_p2)
);

case_1_mul_10ns_8s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
mul_10ns_8s_17_1_1_U86(
    .din0(mul_ln295_fu_1896_p0),
    .din1(m120_reg_2722),
    .dout(mul_ln295_fu_1896_p2)
);

case_1_mul_10s_6s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mul_10s_6s_16_1_1_U87(
    .din0(m125_reg_2732),
    .din1(shl_ln_fu_1855_p3),
    .dout(mul_ln298_fu_1910_p2)
);

case_1_mul_10ns_8ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
mul_10ns_8ns_17_1_1_U88(
    .din0(mul_ln286_fu_1937_p0),
    .din1(mul_ln286_fu_1937_p1),
    .dout(mul_ln286_fu_1937_p2)
);

case_1_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U89(
    .din0(m127_reg_2773),
    .din1(m104_reg_2630),
    .dout(m130_fu_1946_p2)
);

case_1_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U90(
    .din0(trunc_ln299_reg_2758),
    .din1(trunc_ln294_1_reg_2783),
    .dout(mul_ln299_fu_1956_p2)
);

case_1_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U91(
    .din0(mul_ln299_fu_1956_p2),
    .din1(trunc_ln294_2_reg_2753),
    .dout(m137_fu_1960_p2)
);

case_1_mul_8s_7s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 10 ))
mul_8s_7s_10_1_1_U92(
    .din0(m133_reg_2788),
    .din1(m121_reg_2716),
    .dout(mul_ln302_fu_1969_p2)
);

case_1_mul_10ns_8s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10ns_8s_18_1_1_U93(
    .din0(mul_ln290_fu_1981_p0),
    .din1(m124_reg_2799),
    .dout(mul_ln290_fu_1981_p2)
);

case_1_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U94(
    .din0(mul_ln302_reg_2821),
    .din1(m130_reg_2805),
    .dout(m140_fu_1991_p2)
);

case_1_mul_7s_4s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 7 ))
mul_7s_4s_7_1_1_U95(
    .din0(trunc_ln306_reg_2794),
    .din1(m137_reg_2810),
    .dout(mul_ln306_fu_1998_p2)
);

case_1_mul_9ns_4s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 13 ))
mul_9ns_4s_13_1_1_U96(
    .din0(mul_ln303_fu_2027_p0),
    .din1(m137_reg_2810),
    .dout(mul_ln303_fu_2027_p2)
);

case_1_mac_muladd_10s_10s_5s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_5s_10_4_1_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln227_reg_2361),
    .din1(trunc_ln227_reg_2325),
    .din2(grp_fu_2058_p2),
    .ce(1'b1),
    .dout(grp_fu_2058_p3)
);

case_1_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln300_reg_2748),
    .din1(trunc_ln300_1_reg_2704),
    .din2(trunc_ln300_2_reg_2816),
    .ce(1'b1),
    .dout(grp_fu_2065_p3)
);

case_1_mac_muladd_8s_8s_7s_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
mac_muladd_8s_8s_7s_8_4_1_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(m124_reg_2799),
    .din1(trunc_ln294_reg_2778),
    .din2(m121_reg_2716),
    .ce(1'b1),
    .dout(grp_fu_2071_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln233_reg_2345 <= add_ln233_fu_1024_p2;
        m51_reg_2330 <= m51_fu_1005_p1;
        m53_reg_2335 <= m53_fu_1012_p2;
        m62_reg_2356 <= m62_fu_1053_p1;
        m67_reg_2366 <= m67_fu_1064_p2;
        mul_ln227_reg_2361 <= mul_ln227_fu_1057_p2;
        sext_ln223_1_reg_2351 <= sext_ln223_1_fu_1032_p1;
        trunc_ln218_reg_2340 <= trunc_ln218_fu_1017_p1;
        trunc_ln227_reg_2325 <= trunc_ln227_fu_1001_p1;
        trunc_ln236_reg_2373 <= trunc_ln236_fu_1070_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln235_reg_2417 <= add_ln235_fu_1193_p2;
        m70_reg_2412 <= m70_fu_1183_p1;
        m76_reg_2423 <= m76_fu_1206_p2;
        m77_reg_2429 <= m77_fu_1227_p1;
        m78_reg_2435 <= m78_fu_1240_p1;
        m79_reg_2441 <= m79_fu_1253_p1;
        trunc_ln252_1_reg_2446 <= trunc_ln252_1_fu_1257_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln255_reg_2530 <= add_ln255_fu_1422_p2;
        m82_reg_2514 <= grp_fu_2058_p3;
        m90_reg_2525 <= m90_fu_1402_p2;
        trunc_ln256_reg_2520 <= trunc_ln256_fu_1398_p1;
        trunc_ln257_reg_2536 <= trunc_ln257_fu_1426_p1;
        trunc_ln268_reg_2541 <= trunc_ln268_fu_1443_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln258_reg_2588 <= add_ln258_fu_1527_p2;
        m100_reg_2600 <= m100_fu_1544_p1;
        m105_reg_2607 <= m105_fu_1557_p1;
        m106_reg_2613 <= m106_fu_1561_p2;
        mul_ln275_reg_2619 <= mul_ln275_fu_1565_p2;
        zext_ln262_1_reg_2595[9 : 0] <= zext_ln262_1_fu_1536_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        in18_reg_2125 <= in18_fu_592_p1;
        m23_reg_2130 <= m23_fu_600_p2;
        m29_reg_2140 <= m29_fu_617_p2;
        m31_reg_2145 <= m31_fu_623_p2;
        m32_reg_2150 <= m32_fu_629_p2;
        m33_reg_2156 <= m33_fu_655_p1;
        trunc_ln190_reg_2135 <= trunc_ln190_fu_605_p1;
        trunc_ln200_reg_2167 <= trunc_ln200_fu_685_p1;
        trunc_ln204_reg_2172 <= trunc_ln204_fu_689_p1;
        trunc_ln215_reg_2162 <= trunc_ln215_fu_681_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        m102_reg_2624 <= m102_fu_1588_p1;
        m104_reg_2630 <= m104_fu_1597_p1;
        m113_reg_2641 <= m113_fu_1605_p2;
        m114_reg_2646 <= m114_fu_1618_p1;
        trunc_ln269_1_reg_2636 <= trunc_ln269_1_fu_1601_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        m103_reg_2573 <= m103_fu_1509_p1;
        m92_reg_2546 <= m92_fu_1469_p1;
        m94_reg_2551 <= m94_fu_1473_p2;
        m98_reg_2562 <= m98_fu_1492_p1;
        mul_ln268_reg_2578 <= mul_ln268_fu_1513_p2;
        trunc_ln269_reg_2583 <= trunc_ln269_fu_1517_p1;
        trunc_ln275_reg_2568 <= trunc_ln275_fu_1496_p1;
        zext_ln260_reg_2557[9 : 0] <= zext_ln260_fu_1477_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        m107_reg_2656 <= m107_fu_1630_p2;
        m109_reg_2662 <= m109_fu_1646_p1;
        m99_reg_2651 <= m99_fu_1625_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        m108_reg_2678 <= m108_fu_1727_p1;
        m115_reg_2684 <= m115_fu_1734_p2;
        m117_reg_2694 <= m117_fu_1751_p1;
        sext_ln279_reg_2689 <= sext_ln279_fu_1739_p1;
        trunc_ln283_reg_2699 <= trunc_ln283_fu_1755_p1;
        trunc_ln300_1_reg_2704 <= trunc_ln300_1_fu_1759_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        m110_reg_2667 <= m110_fu_1683_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        m111_reg_2672 <= m111_fu_1714_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        m118_reg_2709 <= m118_fu_1775_p1;
        m121_reg_2716 <= m121_fu_1779_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        m120_reg_2722 <= m120_fu_1795_p1;
        m122_reg_2727 <= m122_fu_1807_p1;
        m125_reg_2732 <= m125_fu_1814_p2;
        trunc_ln291_1_reg_2743 <= trunc_ln291_1_fu_1823_p1;
        trunc_ln291_reg_2738 <= trunc_ln291_fu_1819_p1;
        trunc_ln294_2_reg_2753 <= trunc_ln294_2_fu_1831_p1;
        trunc_ln299_reg_2758 <= trunc_ln299_fu_1835_p1;
        trunc_ln300_reg_2748 <= trunc_ln300_fu_1827_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        m123_reg_2768 <= m123_fu_1851_p1;
        m127_reg_2773 <= m127_fu_1871_p1;
        m133_reg_2788 <= m133_fu_1902_p1;
        trunc_ln294_1_reg_2783 <= trunc_ln294_1_fu_1883_p1;
        trunc_ln294_reg_2778 <= trunc_ln294_fu_1879_p1;
        trunc_ln306_reg_2794 <= trunc_ln306_fu_1920_p1;
        zext_ln285_reg_2763[9 : 0] <= zext_ln285_fu_1839_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        m124_reg_2799 <= m124_fu_1942_p1;
        m130_reg_2805 <= m130_fu_1946_p2;
        m137_reg_2810 <= m137_fu_1960_p2;
        mul_ln302_reg_2821 <= mul_ln302_fu_1969_p2;
        trunc_ln300_2_reg_2816 <= trunc_ln300_2_fu_1965_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        m128_reg_2826 <= m128_fu_1987_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        m19_reg_2078 <= m19_fu_455_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        m21_reg_2083 <= m21_fu_470_p1;
        trunc_ln185_1_reg_2089 <= trunc_ln185_1_fu_474_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        m22_reg_2094 <= m22_fu_508_p1;
        m25_reg_2099 <= m25_fu_534_p2;
        m26_reg_2104 <= m26_fu_553_p1;
        trunc_ln190_1_reg_2110 <= trunc_ln190_1_fu_567_p1;
        trunc_ln192_1_reg_2115 <= trunc_ln192_1_fu_571_p1;
        trunc_ln212_reg_2120 <= trunc_ln212_fu_575_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        m28_reg_2177 <= m28_fu_727_p2;
        m30_reg_2184 <= m30_fu_731_p2;
        m34_reg_2189 <= m34_fu_748_p1;
        m38_reg_2199 <= m38_fu_780_p1;
        m43_reg_2204 <= m43_fu_793_p1;
        trunc_ln207_reg_2212 <= trunc_ln207_fu_797_p1;
        trunc_ln208_reg_2217 <= trunc_ln208_fu_801_p1;
        trunc_ln211_1_reg_2222 <= trunc_ln211_1_fu_805_p1;
        trunc_ln214_1_reg_2227 <= trunc_ln214_1_fu_809_p1;
        trunc_ln214_reg_2194 <= trunc_ln214_fu_767_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        m39_reg_2232 <= m39_fu_821_p1;
        m44_reg_2237 <= m44_fu_845_p1;
        m45_reg_2245 <= m45_fu_849_p2;
        m49_reg_2252 <= m49_fu_858_p2;
        m52_reg_2258 <= m52_fu_863_p2;
        trunc_ln216_reg_2263 <= trunc_ln216_fu_867_p1;
        trunc_ln220_reg_2268 <= trunc_ln220_fu_871_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        m41_reg_2273 <= m41_fu_883_p1;
        mul_ln212_reg_2280 <= mul_ln212_fu_902_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        m50_reg_2285 <= m50_fu_917_p2;
        m54_reg_2292 <= m54_fu_924_p2;
        m58_reg_2300 <= m58_fu_933_p2;
        m60_reg_2307 <= m60_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        m59_reg_2312 <= m59_fu_954_p2;
        m63_reg_2320 <= m63_fu_967_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        m66_reg_2378 <= m66_fu_1093_p1;
        m69_reg_2383 <= m69_fu_1113_p2;
        m71_reg_2390 <= m71_fu_1121_p2;
        m72_reg_2397 <= m72_fu_1139_p1;
        m74_reg_2402 <= m74_fu_1155_p1;
        trunc_ln237_reg_2407 <= trunc_ln237_fu_1159_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        m80_reg_2451 <= m80_fu_1275_p2;
        m81_reg_2457 <= m81_fu_1291_p1;
        m84_reg_2467 <= m84_fu_1307_p1;
        m85_reg_2472 <= m85_fu_1317_p1;
        m86_reg_2477 <= m86_fu_1330_p1;
        m89_reg_2482 <= m89_fu_1346_p1;
        trunc_ln252_reg_2489 <= trunc_ln252_fu_1350_p1;
        trunc_ln253_reg_2494 <= trunc_ln253_fu_1354_p1;
        trunc_ln255_reg_2499 <= trunc_ln255_fu_1358_p1;
        trunc_ln256_1_reg_2504 <= trunc_ln256_1_fu_1362_p1;
        trunc_ln257_1_reg_2509 <= trunc_ln257_1_fu_1366_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        out_data_0_ap_vld = 1'b1;
    end else begin
        out_data_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        out_data_10_ap_vld = 1'b1;
    end else begin
        out_data_10_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        out_data_11_ap_vld = 1'b1;
    end else begin
        out_data_11_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        out_data_12_ap_vld = 1'b1;
    end else begin
        out_data_12_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        out_data_13_ap_vld = 1'b1;
    end else begin
        out_data_13_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        out_data_14_ap_vld = 1'b1;
    end else begin
        out_data_14_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        out_data_15_ap_vld = 1'b1;
    end else begin
        out_data_15_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        out_data_16_ap_vld = 1'b1;
    end else begin
        out_data_16_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        out_data_17_ap_vld = 1'b1;
    end else begin
        out_data_17_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        out_data_18_ap_vld = 1'b1;
    end else begin
        out_data_18_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_data_1_ap_vld = 1'b1;
    end else begin
        out_data_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        out_data_2_ap_vld = 1'b1;
    end else begin
        out_data_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        out_data_3_ap_vld = 1'b1;
    end else begin
        out_data_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        out_data_4_ap_vld = 1'b1;
    end else begin
        out_data_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        out_data_5_ap_vld = 1'b1;
    end else begin
        out_data_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        out_data_6_ap_vld = 1'b1;
    end else begin
        out_data_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        out_data_7_ap_vld = 1'b1;
    end else begin
        out_data_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        out_data_8_ap_vld = 1'b1;
    end else begin
        out_data_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        out_data_9_ap_vld = 1'b1;
    end else begin
        out_data_9_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln189_fu_561_p2 = ($signed(sext_ln187_fu_526_p1) + $signed(sext_ln189_fu_557_p1));

assign add_ln207_fu_828_p2 = ($signed(sext_ln204_fu_825_p1) + $signed(trunc_ln204_reg_2172));

assign add_ln226_fu_978_p2 = ($signed(sext_ln226_1_fu_975_p1) + $signed(sext_ln226_fu_971_p1));

assign add_ln233_fu_1024_p2 = ($signed(m43_reg_2204) + $signed(sext_ln219_fu_1021_p1));

assign add_ln235_fu_1193_p2 = ($signed(sext_ln235_fu_1187_p1) + $signed(sext_ln235_1_fu_1190_p1));

assign add_ln255_fu_1422_p2 = (trunc_ln255_reg_2499 + m81_reg_2457);

assign add_ln258_fu_1527_p2 = ($signed(sext_ln258_1_fu_1524_p1) + $signed(sext_ln258_fu_1521_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_2058_p2 = sext_ln244_fu_1295_p1;

assign in10_fu_698_p1 = in_data_9[2:0];

assign in11_fu_584_p1 = in_data_10[8:0];

assign in13_fu_482_p1 = in_data_12[4:0];

assign in14_fu_486_p1 = in_data_13[7:0];

assign in15_fu_490_p1 = in_data_14[9:0];

assign in17_fu_588_p1 = in_data_16[9:0];

assign in18_fu_592_p1 = in_data_17[8:0];

assign in7_fu_478_p1 = in_data_6[8:0];

assign in8_fu_443_p1 = in_data_7[3:0];

assign m100_fu_1544_p1 = mul_ln262_fu_1539_p2[9:0];

assign m102_fu_1588_p1 = mul_ln264_fu_1582_p2[7:0];

assign m103_fu_1509_p1 = mul_ln265_fu_1503_p2[4:0];

assign m104_fu_1597_p1 = mul_ln266_fu_1592_p2[9:0];

assign m105_fu_1557_p1 = mul_ln267_fu_1551_p2[6:0];

assign m107_fu_1630_p2 = (trunc_ln269_reg_2583 + trunc_ln269_1_reg_2636);

assign m108_fu_1727_p1 = mul_ln270_fu_1721_p2[7:0];

assign m109_fu_1646_p1 = mul_ln271_fu_1640_p2[6:0];

assign m110_fu_1683_p1 = mul_ln272_fu_1677_p2[4:0];

assign m111_fu_1714_p1 = mul_ln273_fu_1708_p2[4:0];

assign m112_fu_1696_p1 = mul_ln274_fu_1690_p2[6:0];

assign m114_fu_1618_p1 = mul_ln276_fu_1612_p2[6:0];

assign m117_fu_1751_p1 = mul_ln279_fu_1745_p2[9:0];

assign m118_fu_1775_p1 = mul_ln280_fu_1769_p2[9:0];

assign m119_fu_1659_p1 = mul_ln281_fu_1653_p2[6:0];

assign m120_fu_1795_p1 = mul_ln282_fu_1789_p2[7:0];

assign m122_fu_1807_p1 = mul_ln284_fu_1802_p2[9:0];

assign m123_fu_1851_p1 = mul_ln285_fu_1845_p2[7:0];

assign m124_fu_1942_p1 = mul_ln286_fu_1937_p2[7:0];

assign m125_fu_1814_p2 = ($signed(sext_ln287_fu_1811_p1) + $signed(m118_reg_2709));

assign m127_fu_1871_p1 = mul_ln289_fu_1865_p2[9:0];

assign m128_fu_1987_p1 = mul_ln290_fu_1981_p2[8:0];

assign m133_fu_1902_p1 = mul_ln295_fu_1896_p2[7:0];

assign m136_fu_1916_p1 = mul_ln298_fu_1910_p2[10:0];

assign m141_fu_2033_p1 = mul_ln303_fu_2027_p2[8:0];

assign m142_fu_2049_p2 = ($signed(grp_fu_2071_p3) + $signed(m133_reg_2788));

assign m144_fu_2003_p3 = {{mul_ln306_fu_1998_p2}, {1'd0}};

assign m19_fu_455_p0 = in_data_2[9:0];

assign m21_fu_470_p1 = mul_ln183_fu_464_p2[9:0];

assign m22_fu_508_p1 = mul_ln184_fu_502_p2[8:0];

assign m23_fu_600_p0 = in_data_4[8:0];

assign m24_fu_520_p0 = in_data_14[5:0];

assign m24_fu_520_p1 = in_data_6[5:0];

assign m25_fu_534_p2 = (trunc_ln187_fu_530_p1 + in13_fu_482_p1);

assign m26_fu_553_p1 = mul_ln188_fu_547_p2[9:0];

assign m29_fu_617_p2 = ($signed(sext_ln191_fu_609_p1) + $signed(sext_ln191_1_fu_613_p1));

assign m30_fu_731_p0 = mul_ln182_fu_714_p2[2:0];

assign m31_fu_623_p2 = (in17_fu_588_p1 + m29_fu_617_p2);

assign m32_fu_629_p2 = ($signed(in17_fu_588_p1) + $signed(sext_ln191_fu_609_p1));

assign m33_fu_655_p1 = mul_ln195_fu_649_p2[9:0];

assign m34_fu_748_p1 = mul_ln196_fu_742_p2[9:0];

assign m35_fu_668_p1 = mul_ln197_fu_662_p2[8:0];

assign m38_fu_780_p1 = mul_ln200_fu_774_p2[4:0];

assign m39_fu_821_p1 = mul_ln201_fu_816_p2[2:0];

assign m41_fu_883_p1 = mul_ln203_fu_878_p2[2:0];

assign m43_fu_793_p1 = mul_ln205_fu_787_p2[9:0];

assign m44_fu_845_p1 = mul_ln206_fu_839_p2[4:0];

assign m49_fu_858_p0 = add_ln207_fu_828_p2[6:0];

assign m51_fu_1005_p1 = mul_ln213_fu_995_p2[8:0];

assign m54_fu_924_p2 = ($signed(trunc_ln216_reg_2263) + $signed(sext_ln216_fu_921_p1));

assign m55_fu_947_p2 = ($signed(m50_reg_2285) + $signed(m49_reg_2252));

assign m60_fu_941_p2 = (trunc_ln222_1_fu_937_p1 + trunc_ln222_fu_929_p1);

assign m62_fu_1053_p1 = mul_ln224_fu_1047_p2[7:0];

assign m63_fu_967_p1 = mul_ln225_fu_962_p2[2:0];

assign m66_fu_1093_p1 = mul_ln228_fu_1087_p2[5:0];

assign m67_fu_1064_p0 = ($signed(sext_ln223_fu_1029_p1) + $signed(sext_ln223_1_fu_1032_p1));

assign m68_fu_1109_p1 = mul_ln230_fu_1103_p2[3:0];

assign m70_fu_1183_p1 = mul_ln232_fu_1177_p2[4:0];

assign m71_fu_1121_p2 = ($signed(add_ln233_reg_2345) + $signed(sext_ln233_fu_1118_p1));

assign m72_fu_1139_p1 = mul_ln234_fu_1133_p2[3:0];

assign m74_fu_1155_p1 = mul_ln236_fu_1149_p2[3:0];

assign m75_fu_1199_p1 = sext_ln223_1_reg_2351;

assign m77_fu_1227_p1 = mul_ln239_fu_1221_p2[4:0];

assign m78_fu_1240_p1 = mul_ln240_fu_1234_p2[7:0];

assign m79_fu_1253_p1 = mul_ln241_fu_1247_p2[8:0];

assign m81_fu_1291_p1 = mul_ln243_fu_1285_p2[9:0];

assign m83_fu_1385_p1 = mul_ln245_fu_1379_p2[7:0];

assign m84_fu_1307_p1 = mul_ln246_fu_1301_p2[7:0];

assign m85_fu_1317_p1 = mul_ln247_fu_1311_p2[9:0];

assign m86_fu_1330_p1 = mul_ln248_fu_1324_p2[4:0];

assign m89_fu_1346_p1 = mul_ln246_fu_1301_p2[5:0];

assign m90_fu_1402_p2 = (trunc_ln252_reg_2489 + trunc_ln252_1_reg_2446);

assign m91_fu_1418_p1 = mul_ln253_fu_1412_p2[3:0];

assign m92_fu_1469_p1 = mul_ln254_fu_1463_p2[6:0];

assign m98_fu_1492_p1 = mul_ln260_fu_1486_p2[9:0];

assign mul_ln182_fu_714_p0 = mul_ln182_fu_714_p00;

assign mul_ln182_fu_714_p00 = trunc_ln182_fu_702_p1;

assign mul_ln182_fu_714_p1 = mul_ln182_fu_714_p10;

assign mul_ln182_fu_714_p10 = in10_fu_698_p1;

assign mul_ln183_fu_464_p0 = sext_ln183_fu_461_p1;

assign mul_ln183_fu_464_p1 = sext_ln183_fu_461_p1;

assign mul_ln184_fu_502_p0 = mul_ln184_fu_502_p00;

assign mul_ln184_fu_502_p00 = in_data_5;

assign mul_ln184_fu_502_p1 = mul_ln184_fu_502_p10;

assign mul_ln184_fu_502_p10 = in7_fu_478_p1;

assign mul_ln188_fu_547_p0 = mul_ln188_fu_547_p00;

assign mul_ln188_fu_547_p00 = m21_reg_2083;

assign mul_ln188_fu_547_p1 = mul_ln188_fu_547_p10;

assign mul_ln188_fu_547_p10 = in15_fu_490_p1;

assign mul_ln195_fu_649_p0 = mul_ln195_fu_649_p00;

assign mul_ln195_fu_649_p00 = in17_fu_588_p1;

assign mul_ln195_fu_649_p1 = mul_ln195_fu_649_p10;

assign mul_ln195_fu_649_p10 = m26_reg_2104;

assign mul_ln196_fu_742_p0 = mul_ln196_fu_742_p00;

assign mul_ln196_fu_742_p00 = m31_reg_2145;

assign mul_ln197_fu_662_p0 = mul_ln197_fu_662_p00;

assign mul_ln197_fu_662_p00 = m22_reg_2094;

assign mul_ln197_fu_662_p1 = mul_ln197_fu_662_p10;

assign mul_ln197_fu_662_p10 = in17_fu_588_p1;

assign mul_ln198_fu_675_p0 = mul_ln198_fu_675_p00;

assign mul_ln198_fu_675_p00 = m26_reg_2104;

assign mul_ln198_fu_675_p1 = mul_ln198_fu_675_p10;

assign mul_ln198_fu_675_p10 = m25_reg_2099;

assign mul_ln199_fu_761_p0 = mul_ln199_fu_761_p00;

assign mul_ln199_fu_761_p00 = m23_reg_2130;

assign mul_ln199_fu_761_p1 = mul_ln199_fu_761_p10;

assign mul_ln199_fu_761_p10 = m32_reg_2150;

assign mul_ln200_fu_774_p0 = mul_ln200_fu_774_p00;

assign mul_ln200_fu_774_p00 = m21_reg_2083;

assign mul_ln200_fu_774_p1 = mul_ln200_fu_774_p10;

assign mul_ln200_fu_774_p10 = m29_reg_2140;

assign mul_ln201_fu_816_p0 = mul_ln201_fu_816_p00;

assign mul_ln201_fu_816_p00 = trunc_ln200_reg_2167;

assign mul_ln203_fu_878_p0 = mul_ln203_fu_878_p00;

assign mul_ln203_fu_878_p00 = m39_reg_2232;

assign mul_ln205_fu_787_p0 = mul_ln205_fu_787_p00;

assign mul_ln205_fu_787_p00 = $unsigned(m33_reg_2156);

assign mul_ln205_fu_787_p1 = mul_ln205_fu_787_p10;

assign mul_ln205_fu_787_p10 = m32_reg_2150;

assign mul_ln206_fu_839_p0 = mul_ln206_fu_839_p00;

assign mul_ln206_fu_839_p00 = $unsigned(m43_reg_2204);

assign mul_ln206_fu_839_p1 = mul_ln206_fu_839_p10;

assign mul_ln206_fu_839_p10 = m38_reg_2199;

assign mul_ln213_fu_995_p0 = mul_ln213_fu_995_p00;

assign mul_ln213_fu_995_p00 = m34_reg_2189;

assign mul_ln213_fu_995_p1 = mul_ln213_fu_995_p10;

assign mul_ln213_fu_995_p10 = $unsigned(m43_reg_2204);

assign mul_ln225_fu_962_p1 = mul_ln225_fu_962_p10;

assign mul_ln225_fu_962_p10 = $unsigned(m54_reg_2292);

assign mul_ln228_fu_1087_p0 = mul_ln228_fu_1087_p00;

assign mul_ln228_fu_1087_p00 = add_ln233_reg_2345;

assign mul_ln230_fu_1103_p0 = mul_ln230_fu_1103_p00;

assign mul_ln230_fu_1103_p00 = $unsigned(m67_reg_2366);

assign mul_ln232_fu_1177_p0 = mul_ln232_fu_1177_p00;

assign mul_ln232_fu_1177_p00 = m53_reg_2335;

assign mul_ln236_fu_1149_p0 = mul_ln236_fu_1149_p00;

assign mul_ln236_fu_1149_p00 = trunc_ln236_reg_2373;

assign mul_ln239_fu_1221_p0 = mul_ln239_fu_1221_p00;

assign mul_ln239_fu_1221_p00 = $unsigned(m71_reg_2390);

assign mul_ln239_fu_1221_p1 = mul_ln239_fu_1221_p10;

assign mul_ln239_fu_1221_p10 = $unsigned(m69_reg_2383);

assign mul_ln240_fu_1234_p0 = sext_ln239_fu_1212_p1;

assign mul_ln241_fu_1247_p0 = sext_ln239_fu_1212_p1;

assign mul_ln245_fu_1379_p0 = mul_ln245_fu_1379_p00;

assign mul_ln245_fu_1379_p00 = $unsigned(m71_reg_2390);

assign mul_ln245_fu_1379_p1 = mul_ln245_fu_1379_p10;

assign mul_ln245_fu_1379_p10 = m80_reg_2451;

assign mul_ln246_fu_1301_p0 = mul_ln246_fu_1301_p00;

assign mul_ln246_fu_1301_p00 = $unsigned(m78_reg_2435);

assign mul_ln248_fu_1324_p0 = mul_ln248_fu_1324_p00;

assign mul_ln248_fu_1324_p00 = m70_reg_2412;

assign mul_ln248_fu_1324_p1 = sext_ln244_fu_1295_p1;

assign mul_ln250_fu_1392_p0 = mul_ln250_fu_1392_p00;

assign mul_ln250_fu_1392_p00 = m80_reg_2451;

assign mul_ln253_fu_1412_p0 = mul_ln253_fu_1412_p00;

assign mul_ln253_fu_1412_p00 = trunc_ln253_reg_2494;

assign mul_ln253_fu_1412_p1 = mul_ln253_fu_1412_p10;

assign mul_ln253_fu_1412_p10 = $unsigned(m89_reg_2482);

assign mul_ln260_fu_1486_p0 = mul_ln260_fu_1486_p00;

assign mul_ln260_fu_1486_p00 = add_ln255_reg_2530;

assign mul_ln260_fu_1486_p1 = mul_ln260_fu_1486_p10;

assign mul_ln260_fu_1486_p10 = $unsigned(m82_reg_2514);

assign mul_ln262_fu_1539_p0 = mul_ln262_fu_1539_p00;

assign mul_ln262_fu_1539_p00 = m98_reg_2562;

assign mul_ln262_fu_1539_p1 = zext_ln260_reg_2557;

assign mul_ln264_fu_1582_p0 = mul_ln264_fu_1582_p00;

assign mul_ln264_fu_1582_p00 = m100_reg_2600;

assign mul_ln264_fu_1582_p1 = mul_ln264_fu_1582_p10;

assign mul_ln264_fu_1582_p10 = m94_reg_2551;

assign mul_ln265_fu_1503_p0 = mul_ln265_fu_1503_p00;

assign mul_ln265_fu_1503_p00 = add_ln255_reg_2530;

assign mul_ln265_fu_1503_p1 = mul_ln265_fu_1503_p10;

assign mul_ln265_fu_1503_p10 = m86_reg_2477;

assign mul_ln266_fu_1592_p0 = zext_ln262_1_reg_2595;

assign mul_ln266_fu_1592_p1 = mul_ln266_fu_1592_p10;

assign mul_ln266_fu_1592_p10 = m100_reg_2600;

assign mul_ln267_fu_1551_p0 = mul_ln267_fu_1551_p00;

assign mul_ln267_fu_1551_p00 = m98_reg_2562;

assign mul_ln267_fu_1551_p1 = mul_ln267_fu_1551_p10;

assign mul_ln267_fu_1551_p10 = m92_reg_2546;

assign mul_ln270_fu_1721_p0 = sext_ln270_fu_1718_p1;

assign mul_ln270_fu_1721_p1 = sext_ln270_fu_1718_p1;

assign mul_ln271_fu_1640_p0 = mul_ln271_fu_1640_p00;

assign mul_ln271_fu_1640_p00 = $unsigned(m102_reg_2624);

assign mul_ln271_fu_1640_p1 = mul_ln271_fu_1640_p10;

assign mul_ln271_fu_1640_p10 = $unsigned(add_ln258_reg_2588);

assign mul_ln272_fu_1677_p0 = mul_ln272_fu_1677_p00;

assign mul_ln272_fu_1677_p00 = m107_reg_2656;

assign mul_ln272_fu_1677_p1 = mul_ln272_fu_1677_p10;

assign mul_ln272_fu_1677_p10 = m103_reg_2573;

assign mul_ln273_fu_1708_p0 = zext_ln273_fu_1705_p1;

assign mul_ln273_fu_1708_p1 = zext_ln273_fu_1705_p1;

assign mul_ln274_fu_1690_p0 = mul_ln274_fu_1690_p00;

assign mul_ln274_fu_1690_p00 = m109_reg_2662;

assign mul_ln274_fu_1690_p1 = mul_ln274_fu_1690_p10;

assign mul_ln274_fu_1690_p10 = m94_reg_2551;

assign mul_ln275_fu_1565_p1 = sext_ln258_fu_1521_p1;

assign mul_ln276_fu_1612_p0 = mul_ln276_fu_1612_p00;

assign mul_ln276_fu_1612_p00 = m100_reg_2600;

assign mul_ln276_fu_1612_p1 = mul_ln276_fu_1612_p10;

assign mul_ln276_fu_1612_p10 = $unsigned(m106_reg_2613);

assign mul_ln279_fu_1745_p0 = mul_ln279_fu_1745_p00;

assign mul_ln279_fu_1745_p00 = m99_reg_2651;

assign mul_ln280_fu_1769_p0 = mul_ln280_fu_1769_p00;

assign mul_ln280_fu_1769_p00 = m117_reg_2694;

assign mul_ln281_fu_1653_p0 = zext_ln281_fu_1650_p1;

assign mul_ln281_fu_1653_p1 = zext_ln281_fu_1650_p1;

assign mul_ln282_fu_1789_p0 = mul_ln282_fu_1789_p00;

assign mul_ln282_fu_1789_p00 = m107_reg_2656;

assign mul_ln284_fu_1802_p0 = mul_ln284_fu_1802_p00;

assign mul_ln284_fu_1802_p00 = m118_reg_2709;

assign mul_ln284_fu_1802_p1 = sext_ln279_reg_2689;

assign mul_ln285_fu_1845_p0 = zext_ln285_fu_1839_p1;

assign mul_ln285_fu_1845_p1 = mul_ln285_fu_1845_p10;

assign mul_ln285_fu_1845_p10 = m115_reg_2684;

assign mul_ln286_fu_1937_p0 = zext_ln285_reg_2763;

assign mul_ln286_fu_1937_p1 = mul_ln286_fu_1937_p10;

assign mul_ln286_fu_1937_p10 = m123_reg_2768;

assign mul_ln289_fu_1865_p0 = zext_ln285_fu_1839_p1;

assign mul_ln290_fu_1981_p0 = mul_ln290_fu_1981_p00;

assign mul_ln290_fu_1981_p00 = m118_reg_2709;

assign mul_ln295_fu_1896_p0 = mul_ln295_fu_1896_p00;

assign mul_ln295_fu_1896_p00 = $unsigned(m125_reg_2732);

assign mul_ln303_fu_2027_p0 = mul_ln303_fu_2027_p00;

assign mul_ln303_fu_2027_p00 = m128_reg_2826;

assign out_data_0 = $signed(add_ln189_fu_561_p2);

assign out_data_1 = $signed(m35_fu_668_p1);

assign out_data_10 = $signed(m112_fu_1696_p1);

assign out_data_11 = $signed(m119_fu_1659_p1);

assign out_data_12 = $signed(m129_fu_1875_p2);

assign out_data_13 = $signed(m136_fu_1916_p1);

assign out_data_14 = $signed(grp_fu_2065_p3);

assign out_data_15 = $signed(m140_fu_1991_p2);

assign out_data_16 = $signed(m141_fu_2033_p1);

assign out_data_17 = $signed(m142_fu_2049_p2);

assign out_data_18 = $signed(m144_fu_2003_p3);

assign out_data_2 = $signed(m46_fu_887_p2);

assign out_data_3 = $signed(m47_fu_894_p2);

assign out_data_4 = $signed(add_ln226_fu_978_p2);

assign out_data_5 = $signed(m68_fu_1109_p1);

assign out_data_6 = $signed(m75_fu_1199_p2);

assign out_data_7 = $signed(m83_fu_1385_p1);

assign out_data_8 = $signed(m91_fu_1418_p1);

assign out_data_9 = mul_ln259_fu_1436_p2;

assign sext_ln183_fu_461_p1 = $signed(m19_reg_2078);

assign sext_ln187_fu_526_p1 = $signed(in14_fu_486_p1);

assign sext_ln189_fu_557_p1 = $signed(m24_fu_520_p2);

assign sext_ln191_1_fu_613_p1 = $signed(in11_fu_584_p1);

assign sext_ln191_fu_609_p1 = in18_fu_592_p1;

assign sext_ln204_fu_825_p1 = $signed(m30_reg_2184);

assign sext_ln216_fu_921_p1 = m41_reg_2273;

assign sext_ln219_fu_1021_p1 = m45_reg_2245;

assign sext_ln223_1_fu_1032_p1 = m59_reg_2312;

assign sext_ln223_fu_1029_p1 = m50_reg_2285;

assign sext_ln226_1_fu_975_p1 = $signed(m52_reg_2258);

assign sext_ln226_fu_971_p1 = $signed(m55_fu_947_p2);

assign sext_ln233_fu_1118_p1 = m58_reg_2300;

assign sext_ln235_1_fu_1190_p1 = $signed(m66_reg_2378);

assign sext_ln235_fu_1187_p1 = m69_reg_2383;

assign sext_ln239_fu_1212_p1 = m69_reg_2383;

assign sext_ln244_fu_1295_p1 = m77_reg_2429;

assign sext_ln258_1_fu_1524_p1 = $signed(m84_reg_2467);

assign sext_ln258_fu_1521_p1 = m89_reg_2482;

assign sext_ln270_fu_1718_p1 = m105_reg_2607;

assign sext_ln279_fu_1739_p1 = m111_reg_2672;

assign sext_ln287_fu_1811_p1 = $signed(m113_reg_2641);

assign shl_ln_fu_1855_p3 = {{m111_reg_2672}, {1'd0}};

assign trunc_ln182_fu_702_p1 = in_data_15[2:0];

assign trunc_ln185_1_fu_474_p1 = mul_ln183_fu_464_p2[8:0];

assign trunc_ln187_fu_530_p1 = in_data_13[4:0];

assign trunc_ln190_1_fu_567_p1 = in_data_13[6:0];

assign trunc_ln190_fu_605_p1 = m23_fu_600_p2[6:0];

assign trunc_ln192_1_fu_571_p1 = in_data_14[2:0];

assign trunc_ln200_fu_685_p1 = m29_fu_617_p2[2:0];

assign trunc_ln204_fu_689_p1 = m29_fu_617_p2[7:0];

assign trunc_ln207_fu_797_p1 = mul_ln196_fu_742_p2[7:0];

assign trunc_ln208_fu_801_p1 = m28_fu_727_p2[4:0];

assign trunc_ln211_1_fu_805_p1 = mul_ln205_fu_787_p2[6:0];

assign trunc_ln212_fu_575_p1 = mul_ln188_fu_547_p2[6:0];

assign trunc_ln214_1_fu_809_p1 = mul_ln205_fu_787_p2[8:0];

assign trunc_ln214_fu_767_p1 = mul_ln199_fu_761_p2[8:0];

assign trunc_ln215_fu_681_p1 = mul_ln198_fu_675_p2[4:0];

assign trunc_ln216_fu_867_p1 = m49_fu_858_p2[3:0];

assign trunc_ln218_fu_1017_p1 = m53_fu_1012_p2[3:0];

assign trunc_ln220_fu_871_p1 = mul_ln206_fu_839_p2[2:0];

assign trunc_ln222_1_fu_937_p1 = m54_fu_924_p2[1:0];

assign trunc_ln222_fu_929_p1 = m50_fu_917_p2[1:0];

assign trunc_ln227_fu_1001_p1 = mul_ln213_fu_995_p2[9:0];

assign trunc_ln236_fu_1070_p1 = add_ln233_fu_1024_p2[3:0];

assign trunc_ln237_fu_1159_p1 = m69_fu_1113_p2[7:0];

assign trunc_ln252_1_fu_1257_p1 = mul_ln241_fu_1247_p2[7:0];

assign trunc_ln252_fu_1350_p1 = mul_ln243_fu_1285_p2[7:0];

assign trunc_ln253_fu_1354_p1 = m87_fu_1340_p2[3:0];

assign trunc_ln255_fu_1358_p1 = m87_fu_1340_p2[9:0];

assign trunc_ln256_1_fu_1362_p1 = mul_ln247_fu_1311_p2[7:0];

assign trunc_ln256_fu_1398_p1 = mul_ln250_fu_1392_p2[7:0];

assign trunc_ln257_1_fu_1366_p1 = m80_fu_1275_p2[6:0];

assign trunc_ln257_fu_1426_p0 = grp_fu_2058_p3;

assign trunc_ln257_fu_1426_p1 = trunc_ln257_fu_1426_p0[6:0];

assign trunc_ln268_fu_1443_p1 = mul_ln250_fu_1392_p2[6:0];

assign trunc_ln269_1_fu_1601_p1 = mul_ln266_fu_1592_p2[7:0];

assign trunc_ln269_fu_1517_p1 = mul_ln260_fu_1486_p2[7:0];

assign trunc_ln275_fu_1496_p1 = mul_ln254_fu_1463_p2[8:0];

assign trunc_ln283_fu_1755_p1 = mul_ln279_fu_1745_p2[6:0];

assign trunc_ln291_1_fu_1823_p1 = mul_ln282_fu_1789_p2[5:0];

assign trunc_ln291_fu_1819_p1 = mul_ln284_fu_1802_p2[5:0];

assign trunc_ln294_1_fu_1883_p1 = mul_ln289_fu_1865_p2[3:0];

assign trunc_ln294_2_fu_1831_p1 = m125_fu_1814_p2[3:0];

assign trunc_ln294_fu_1879_p1 = mul_ln289_fu_1865_p2[7:0];

assign trunc_ln299_fu_1835_p1 = mul_ln282_fu_1789_p2[3:0];

assign trunc_ln300_1_fu_1759_p1 = mul_ln279_fu_1745_p2[8:0];

assign trunc_ln300_2_fu_1965_p1 = m130_fu_1946_p2[8:0];

assign trunc_ln300_fu_1827_p1 = mul_ln284_fu_1802_p2[8:0];

assign trunc_ln306_fu_1920_p1 = mul_ln295_fu_1896_p2[6:0];

assign zext_ln260_fu_1477_p1 = $unsigned(m82_reg_2514);

assign zext_ln262_1_fu_1536_p1 = m98_reg_2562;

assign zext_ln273_fu_1705_p1 = m110_reg_2667;

assign zext_ln281_fu_1650_p1 = $unsigned(m104_reg_2630);

assign zext_ln285_fu_1839_p1 = m122_reg_2727;

always @ (posedge ap_clk) begin
    zext_ln260_reg_2557[19:10] <= 10'b0000000000;
    zext_ln262_1_reg_2595[19:10] <= 10'b0000000000;
    zext_ln285_reg_2763[16:10] <= 7'b0000000;
end

endmodule //case_1
