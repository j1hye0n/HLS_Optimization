// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="case_1_case_1,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.275000,HLS_SYN_LAT=26,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=971,HLS_SYN_LUT=7768,HLS_VERSION=2024_2}" *)

module case_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_data_0,
        in_data_1,
        in_data_2,
        in_data_3,
        in_data_4,
        in_data_5,
        in_data_6,
        in_data_7,
        in_data_8,
        in_data_9,
        in_data_10,
        in_data_11,
        in_data_12,
        in_data_13,
        in_data_14,
        in_data_15,
        in_data_16,
        in_data_17,
        out_data_0,
        out_data_0_ap_vld,
        out_data_1,
        out_data_1_ap_vld,
        out_data_2,
        out_data_2_ap_vld,
        out_data_3,
        out_data_3_ap_vld,
        out_data_4,
        out_data_4_ap_vld,
        out_data_5,
        out_data_5_ap_vld,
        out_data_6,
        out_data_6_ap_vld,
        out_data_7,
        out_data_7_ap_vld,
        out_data_8,
        out_data_8_ap_vld,
        out_data_9,
        out_data_9_ap_vld,
        out_data_10,
        out_data_10_ap_vld,
        out_data_11,
        out_data_11_ap_vld,
        out_data_12,
        out_data_12_ap_vld,
        out_data_13,
        out_data_13_ap_vld,
        out_data_14,
        out_data_14_ap_vld,
        out_data_15,
        out_data_15_ap_vld,
        out_data_16,
        out_data_16_ap_vld,
        out_data_17,
        out_data_17_ap_vld,
        out_data_18,
        out_data_18_ap_vld
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_state17 = 27'd65536;
parameter    ap_ST_fsm_state18 = 27'd131072;
parameter    ap_ST_fsm_state19 = 27'd262144;
parameter    ap_ST_fsm_state20 = 27'd524288;
parameter    ap_ST_fsm_state21 = 27'd1048576;
parameter    ap_ST_fsm_state22 = 27'd2097152;
parameter    ap_ST_fsm_state23 = 27'd4194304;
parameter    ap_ST_fsm_state24 = 27'd8388608;
parameter    ap_ST_fsm_state25 = 27'd16777216;
parameter    ap_ST_fsm_state26 = 27'd33554432;
parameter    ap_ST_fsm_state27 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] in_data_0;
input  [15:0] in_data_1;
input  [15:0] in_data_2;
input  [15:0] in_data_3;
input  [15:0] in_data_4;
input  [15:0] in_data_5;
input  [15:0] in_data_6;
input  [15:0] in_data_7;
input  [15:0] in_data_8;
input  [15:0] in_data_9;
input  [15:0] in_data_10;
input  [15:0] in_data_11;
input  [15:0] in_data_12;
input  [15:0] in_data_13;
input  [15:0] in_data_14;
input  [15:0] in_data_15;
input  [15:0] in_data_16;
input  [15:0] in_data_17;
output  [15:0] out_data_0;
output   out_data_0_ap_vld;
output  [15:0] out_data_1;
output   out_data_1_ap_vld;
output  [15:0] out_data_2;
output   out_data_2_ap_vld;
output  [15:0] out_data_3;
output   out_data_3_ap_vld;
output  [15:0] out_data_4;
output   out_data_4_ap_vld;
output  [15:0] out_data_5;
output   out_data_5_ap_vld;
output  [15:0] out_data_6;
output   out_data_6_ap_vld;
output  [15:0] out_data_7;
output   out_data_7_ap_vld;
output  [15:0] out_data_8;
output   out_data_8_ap_vld;
output  [15:0] out_data_9;
output   out_data_9_ap_vld;
output  [15:0] out_data_10;
output   out_data_10_ap_vld;
output  [15:0] out_data_11;
output   out_data_11_ap_vld;
output  [15:0] out_data_12;
output   out_data_12_ap_vld;
output  [15:0] out_data_13;
output   out_data_13_ap_vld;
output  [15:0] out_data_14;
output   out_data_14_ap_vld;
output  [15:0] out_data_15;
output   out_data_15_ap_vld;
output  [15:0] out_data_16;
output   out_data_16_ap_vld;
output  [15:0] out_data_17;
output   out_data_17_ap_vld;
output  [15:0] out_data_18;
output   out_data_18_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_data_0_ap_vld;
reg out_data_1_ap_vld;
reg out_data_2_ap_vld;
reg out_data_3_ap_vld;
reg out_data_4_ap_vld;
reg out_data_5_ap_vld;
reg out_data_6_ap_vld;
reg out_data_7_ap_vld;
reg out_data_8_ap_vld;
reg out_data_9_ap_vld;
reg out_data_10_ap_vld;
reg out_data_11_ap_vld;
reg out_data_12_ap_vld;
reg out_data_13_ap_vld;
reg out_data_14_ap_vld;
reg out_data_15_ap_vld;
reg out_data_16_ap_vld;
reg out_data_17_ap_vld;
reg out_data_18_ap_vld;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] m19_fu_467_p2;
reg   [9:0] m19_reg_2172;
wire   [9:0] m21_fu_482_p1;
reg   [9:0] m21_reg_2177;
wire    ap_CS_fsm_state2;
wire  signed [4:0] trunc_ln200_fu_486_p1;
reg  signed [4:0] trunc_ln200_reg_2183;
wire   [8:0] m22_fu_512_p1;
reg   [8:0] m22_reg_2188;
wire    ap_CS_fsm_state3;
wire   [8:0] m23_fu_532_p1;
reg   [8:0] m23_reg_2193;
wire   [5:0] m24_fu_544_p2;
reg   [5:0] m24_reg_2199;
wire   [2:0] trunc_ln188_fu_550_p1;
reg   [2:0] trunc_ln188_reg_2204;
wire  signed [9:0] m26_fu_564_p1;
reg  signed [9:0] m26_reg_2209;
wire  signed [8:0] in18_fu_584_p1;
reg  signed [8:0] in18_reg_2216;
wire    ap_CS_fsm_state4;
wire   [4:0] m25_fu_596_p2;
reg   [4:0] m25_reg_2221;
wire  signed [6:0] m28_fu_624_p1;
reg  signed [6:0] m28_reg_2226;
wire   [9:0] m31_fu_646_p2;
reg   [9:0] m31_reg_2232;
wire   [9:0] m32_fu_652_p2;
reg   [9:0] m32_reg_2237;
wire   [9:0] m33_fu_658_p2;
reg   [9:0] m33_reg_2243;
wire   [4:0] m38_fu_684_p2;
reg   [4:0] m38_reg_2248;
wire  signed [2:0] trunc_ln201_fu_689_p1;
reg  signed [2:0] trunc_ln201_reg_2253;
wire  signed [2:0] trunc_ln201_1_fu_693_p1;
reg  signed [2:0] trunc_ln201_1_reg_2258;
wire   [7:0] trunc_ln204_fu_697_p1;
reg   [7:0] trunc_ln204_reg_2263;
wire  signed [4:0] trunc_ln208_fu_701_p1;
reg  signed [4:0] trunc_ln208_reg_2268;
wire   [2:0] m30_fu_745_p1;
reg   [2:0] m30_reg_2273;
wire    ap_CS_fsm_state5;
wire   [9:0] m34_fu_761_p1;
reg   [9:0] m34_reg_2278;
wire   [4:0] m36_fu_780_p1;
reg   [4:0] m36_reg_2283;
wire   [8:0] m37_fu_796_p1;
reg   [8:0] m37_reg_2288;
wire   [2:0] m39_fu_800_p2;
reg   [2:0] m39_reg_2293;
wire  signed [6:0] trunc_ln212_fu_813_p1;
reg  signed [6:0] trunc_ln212_reg_2298;
wire   [19:0] zext_ln205_fu_817_p1;
reg   [19:0] zext_ln205_reg_2303;
wire   [9:0] m43_fu_826_p1;
reg   [9:0] m43_reg_2308;
wire  signed [7:0] trunc_ln207_fu_830_p1;
reg  signed [7:0] trunc_ln207_reg_2317;
wire  signed [2:0] m41_fu_842_p1;
reg  signed [2:0] m41_reg_2322;
wire    ap_CS_fsm_state6;
wire   [6:0] m42_fu_854_p1;
reg   [6:0] m42_reg_2329;
wire  signed [4:0] m44_fu_876_p1;
reg  signed [4:0] m44_reg_2334;
wire  signed [7:0] m45_fu_880_p2;
reg  signed [7:0] m45_reg_2342;
wire  signed [9:0] trunc_ln227_fu_890_p1;
reg  signed [9:0] trunc_ln227_reg_2349;
wire  signed [9:0] trunc_ln227_1_fu_903_p1;
reg  signed [9:0] trunc_ln227_1_reg_2354;
wire   [8:0] m51_fu_907_p1;
reg   [8:0] m51_reg_2359;
wire   [8:0] m52_fu_920_p1;
reg   [8:0] m52_reg_2364;
wire  signed [6:0] m49_fu_943_p1;
reg  signed [6:0] m49_reg_2369;
wire    ap_CS_fsm_state7;
wire  signed [6:0] m50_fu_950_p2;
reg  signed [6:0] m50_reg_2375;
wire   [3:0] trunc_ln216_fu_958_p1;
reg   [3:0] trunc_ln216_reg_2381;
wire   [1:0] trunc_ln222_fu_962_p1;
reg   [1:0] trunc_ln222_reg_2386;
wire  signed [2:0] m58_fu_972_p1;
reg  signed [2:0] m58_reg_2391;
wire  signed [2:0] trunc_ln225_fu_976_p1;
reg  signed [2:0] trunc_ln225_reg_2398;
wire  signed [3:0] m54_fu_996_p2;
reg  signed [3:0] m54_reg_2403;
wire    ap_CS_fsm_state8;
wire   [9:0] add_ln233_fu_1008_p2;
reg   [9:0] add_ln233_reg_2410;
wire  signed [4:0] m59_fu_1022_p1;
reg  signed [4:0] m59_reg_2416;
wire   [1:0] m60_fu_1030_p2;
reg  signed [1:0] m60_reg_2424;
wire   [7:0] m61_fu_1042_p2;
reg  signed [7:0] m61_reg_2429;
wire   [7:0] m62_fu_1060_p1;
reg   [7:0] m62_reg_2434;
wire   [2:0] m63_fu_1068_p2;
reg  signed [2:0] m63_reg_2439;
wire   [3:0] m74_fu_1098_p2;
reg  signed [3:0] m74_reg_2444;
wire   [4:0] m53_fu_1121_p1;
reg   [4:0] m53_reg_2449;
wire    ap_CS_fsm_state9;
wire  signed [3:0] trunc_ln218_fu_1125_p1;
reg  signed [3:0] trunc_ln218_reg_2454;
wire  signed [7:0] m67_fu_1141_p1;
reg  signed [7:0] m67_reg_2459;
wire   [5:0] m66_fu_1161_p1;
reg   [5:0] m66_reg_2466;
wire    ap_CS_fsm_state10;
wire  signed [8:0] m69_fu_1193_p1;
reg  signed [8:0] m69_reg_2471;
wire  signed [9:0] m71_fu_1200_p2;
reg  signed [9:0] m71_reg_2479;
wire   [3:0] m72_fu_1218_p1;
reg  signed [3:0] m72_reg_2486;
wire  signed [4:0] trunc_ln248_fu_1245_p1;
reg  signed [4:0] trunc_ln248_reg_2491;
wire    ap_CS_fsm_state11;
wire  signed [9:0] add_ln235_fu_1255_p2;
reg  signed [9:0] add_ln235_reg_2496;
wire  signed [6:0] m76_fu_1283_p2;
reg  signed [6:0] m76_reg_2502;
wire  signed [4:0] m77_fu_1298_p1;
reg  signed [4:0] m77_reg_2508;
wire   [7:0] m78_fu_1311_p1;
reg   [7:0] m78_reg_2515;
wire   [8:0] m79_fu_1324_p1;
reg  signed [8:0] m79_reg_2521;
wire   [7:0] trunc_ln252_1_fu_1328_p1;
reg   [7:0] trunc_ln252_1_reg_2526;
wire   [7:0] m80_fu_1352_p1;
reg   [7:0] m80_reg_2531;
wire    ap_CS_fsm_state12;
wire   [7:0] m84_fu_1384_p1;
reg   [7:0] m84_reg_2543;
wire  signed [9:0] m85_fu_1391_p2;
reg  signed [9:0] m85_reg_2548;
wire   [4:0] m86_fu_1396_p2;
reg   [4:0] m86_reg_2553;
wire  signed [5:0] m89_fu_1412_p1;
reg  signed [5:0] m89_reg_2558;
wire  signed [7:0] m90_fu_1420_p2;
reg  signed [7:0] m90_reg_2565;
wire  signed [3:0] trunc_ln253_fu_1425_p1;
reg  signed [3:0] trunc_ln253_reg_2571;
wire  signed [3:0] trunc_ln253_1_fu_1429_p1;
reg  signed [3:0] trunc_ln253_1_reg_2576;
wire  signed [9:0] m93_fu_1437_p2;
reg  signed [9:0] m93_reg_2581;
wire  signed [7:0] trunc_ln256_1_fu_1443_p1;
reg  signed [7:0] trunc_ln256_1_reg_2587;
wire  signed [9:0] grp_fu_2152_p3;
reg  signed [9:0] m82_reg_2592;
wire    ap_CS_fsm_state13;
wire  signed [7:0] trunc_ln256_fu_1475_p1;
reg  signed [7:0] trunc_ln256_reg_2599;
wire   [12:0] m92_fu_1489_p2;
reg   [12:0] m92_reg_2604;
wire   [9:0] m98_fu_1508_p2;
reg   [9:0] m98_reg_2610;
wire   [4:0] m103_fu_1524_p1;
reg   [4:0] m103_reg_2616;
wire  signed [6:0] trunc_ln268_1_fu_1528_p1;
reg  signed [6:0] trunc_ln268_1_reg_2621;
wire   [7:0] trunc_ln269_fu_1532_p1;
reg   [7:0] trunc_ln269_reg_2626;
wire   [7:0] m94_fu_1552_p2;
reg   [7:0] m94_reg_2631;
wire    ap_CS_fsm_state14;
wire  signed [6:0] trunc_ln268_fu_1568_p1;
reg  signed [6:0] trunc_ln268_reg_2637;
wire   [19:0] zext_ln262_1_fu_1575_p1;
reg   [19:0] zext_ln262_1_reg_2642;
wire   [9:0] m100_fu_1584_p1;
reg   [9:0] m100_reg_2647;
wire  signed [8:0] trunc_ln275_fu_1600_p1;
reg  signed [8:0] trunc_ln275_reg_2654;
wire  signed [6:0] m105_fu_1610_p1;
reg  signed [6:0] m105_reg_2659;
wire   [9:0] m99_fu_1630_p2;
reg   [9:0] m99_reg_2665;
wire    ap_CS_fsm_state15;
wire  signed [7:0] m102_fu_1650_p1;
reg  signed [7:0] m102_reg_2670;
wire  signed [9:0] m104_fu_1659_p1;
reg  signed [9:0] m104_reg_2675;
wire   [6:0] m106_fu_1663_p2;
reg   [6:0] m106_reg_2681;
wire   [7:0] trunc_ln269_1_fu_1667_p1;
reg   [7:0] trunc_ln269_1_reg_2687;
wire  signed [6:0] trunc_ln271_fu_1671_p1;
reg  signed [6:0] trunc_ln271_reg_2692;
wire  signed [6:0] trunc_ln271_1_fu_1675_p1;
reg  signed [6:0] trunc_ln271_1_reg_2697;
wire   [8:0] m113_fu_1679_p2;
reg   [8:0] m113_reg_2702;
wire   [7:0] m107_fu_1687_p2;
reg   [7:0] m107_reg_2707;
wire    ap_CS_fsm_state16;
wire   [6:0] m109_fu_1691_p2;
reg   [6:0] m109_reg_2713;
wire   [6:0] m114_fu_1704_p1;
reg  signed [6:0] m114_reg_2718;
wire   [7:0] m115_fu_1711_p2;
reg   [7:0] m115_reg_2723;
wire   [4:0] m110_fu_1749_p1;
reg   [4:0] m110_reg_2728;
wire    ap_CS_fsm_state17;
wire  signed [4:0] m111_fu_1780_p1;
reg  signed [4:0] m111_reg_2733;
wire    ap_CS_fsm_state18;
wire  signed [7:0] m108_fu_1793_p1;
reg  signed [7:0] m108_reg_2739;
wire    ap_CS_fsm_state19;
wire  signed [14:0] sext_ln279_fu_1797_p1;
reg  signed [14:0] sext_ln279_reg_2745;
wire  signed [9:0] trunc_ln280_fu_1809_p1;
reg  signed [9:0] trunc_ln280_reg_2750;
wire   [6:0] m117_fu_1813_p1;
reg   [6:0] m117_reg_2755;
wire  signed [8:0] trunc_ln300_1_fu_1817_p1;
reg  signed [8:0] trunc_ln300_1_reg_2760;
wire   [9:0] m118_fu_1833_p2;
reg   [9:0] m118_reg_2765;
wire    ap_CS_fsm_state20;
wire  signed [7:0] m120_fu_1847_p1;
reg  signed [7:0] m120_reg_2771;
wire  signed [6:0] m121_fu_1857_p1;
reg  signed [6:0] m121_reg_2778;
wire  signed [9:0] m125_fu_1864_p2;
reg  signed [9:0] m125_reg_2784;
wire   [3:0] trunc_ln294_1_fu_1870_p1;
reg   [3:0] trunc_ln294_1_reg_2789;
wire  signed [7:0] trunc_ln295_fu_1874_p1;
reg  signed [7:0] trunc_ln295_reg_2794;
wire   [9:0] m122_fu_1886_p1;
reg   [9:0] m122_reg_2799;
wire    ap_CS_fsm_state21;
wire  signed [8:0] trunc_ln300_fu_1897_p1;
reg  signed [8:0] trunc_ln300_reg_2805;
wire   [16:0] zext_ln285_1_fu_1926_p1;
reg   [16:0] zext_ln285_1_reg_2810;
wire    ap_CS_fsm_state22;
wire   [7:0] m123_fu_1938_p1;
reg   [7:0] m123_reg_2815;
wire  signed [9:0] m127_fu_1951_p1;
reg  signed [9:0] m127_reg_2820;
wire   [3:0] trunc_ln294_fu_1968_p1;
reg   [3:0] trunc_ln294_reg_2825;
wire  signed [7:0] m133_fu_1972_p2;
reg  signed [7:0] m133_reg_2830;
wire  signed [7:0] trunc_ln297_fu_1976_p1;
reg  signed [7:0] trunc_ln297_reg_2836;
wire  signed [6:0] trunc_ln306_fu_1980_p1;
reg  signed [6:0] trunc_ln306_reg_2841;
wire  signed [7:0] m124_fu_1997_p1;
reg  signed [7:0] m124_reg_2846;
wire    ap_CS_fsm_state23;
wire   [9:0] m130_fu_2001_p2;
reg   [9:0] m130_reg_2852;
wire   [3:0] m132_fu_2017_p1;
reg   [3:0] m132_reg_2857;
wire   [9:0] m134_fu_2033_p1;
reg   [9:0] m134_reg_2862;
wire   [8:0] trunc_ln300_2_fu_2037_p1;
reg   [8:0] trunc_ln300_2_reg_2867;
wire   [8:0] m128_fu_2053_p1;
reg   [8:0] m128_reg_2872;
wire    ap_CS_fsm_state24;
wire  signed [3:0] m137_fu_2069_p1;
reg  signed [3:0] m137_reg_2877;
wire    ap_CS_fsm_state26;
wire   [15:0] mul_ln259_fu_1501_p2;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state27;
wire  signed [3:0] in8_fu_455_p1;
wire  signed [9:0] m19_fu_467_p0;
wire  signed [9:0] mul_ln183_fu_476_p0;
wire  signed [19:0] sext_ln183_fu_473_p1;
wire  signed [9:0] mul_ln183_fu_476_p1;
wire   [19:0] mul_ln183_fu_476_p2;
wire   [8:0] in7_fu_490_p1;
wire   [15:0] mul_ln184_fu_506_p0;
wire   [8:0] mul_ln184_fu_506_p1;
wire   [18:0] mul_ln184_fu_506_p2;
wire   [15:0] mul_ln185_fu_526_p0;
wire   [9:0] mul_ln185_fu_526_p1;
wire   [18:0] mul_ln185_fu_526_p2;
wire  signed [5:0] m24_fu_544_p0;
wire  signed [5:0] m24_fu_544_p1;
wire   [9:0] in15_fu_494_p1;
wire   [9:0] mul_ln188_fu_558_p0;
wire   [9:0] mul_ln188_fu_558_p1;
wire   [19:0] mul_ln188_fu_558_p2;
wire  signed [7:0] in14_fu_576_p1;
wire   [4:0] trunc_ln187_fu_592_p1;
wire   [4:0] in13_fu_572_p1;
wire  signed [8:0] sext_ln187_fu_588_p1;
wire  signed [8:0] sext_ln189_fu_602_p1;
wire   [8:0] mul_ln190_fu_618_p0;
wire   [7:0] mul_ln190_fu_618_p1;
wire   [14:0] mul_ln190_fu_618_p2;
wire   [8:0] in11_fu_568_p1;
wire  signed [9:0] sext_ln191_fu_628_p1;
wire  signed [9:0] sext_ln191_1_fu_632_p1;
wire  signed [9:0] trunc_ln195_fu_642_p1;
wire   [9:0] m29_fu_636_p2;
wire   [8:0] in17_fu_580_p1;
wire   [8:0] mul_ln197_fu_670_p0;
wire   [8:0] mul_ln197_fu_670_p1;
wire   [17:0] mul_ln197_fu_670_p2;
wire  signed [4:0] m38_fu_684_p1;
wire   [8:0] add_ln189_fu_605_p2;
wire   [8:0] m35_fu_676_p1;
wire  signed [2:0] m20_fu_723_p0;
wire  signed [2:0] m20_fu_723_p1;
wire   [2:0] m20_fu_723_p2;
wire   [2:0] mul_ln192_fu_739_p0;
wire   [2:0] mul_ln192_fu_739_p1;
wire   [5:0] mul_ln192_fu_739_p2;
wire   [9:0] mul_ln196_fu_755_p0;
wire   [18:0] mul_ln196_fu_755_p2;
wire   [9:0] mul_ln198_fu_774_p0;
wire   [4:0] mul_ln198_fu_774_p1;
wire   [10:0] mul_ln198_fu_774_p2;
wire   [8:0] mul_ln199_fu_790_p0;
wire   [9:0] mul_ln199_fu_790_p1;
wire   [18:0] mul_ln199_fu_790_p2;
wire   [9:0] mul_ln202_fu_807_p0;
wire   [14:0] mul_ln202_fu_807_p2;
wire   [9:0] mul_ln205_fu_820_p0;
wire   [9:0] mul_ln205_fu_820_p1;
wire   [19:0] mul_ln205_fu_820_p2;
wire   [2:0] mul_ln203_fu_837_p0;
wire   [6:0] mul_ln203_fu_837_p2;
wire  signed [7:0] sext_ln204_fu_846_p1;
wire  signed [7:0] add_ln207_fu_849_p2;
wire   [4:0] mul_ln206_fu_870_p0;
wire   [9:0] mul_ln206_fu_870_p1;
wire   [10:0] mul_ln206_fu_870_p2;
wire   [9:0] mul_ln210_fu_885_p0;
wire   [9:0] mul_ln210_fu_885_p1;
wire   [19:0] zext_ln206_2_fu_861_p1;
wire   [19:0] mul_ln210_fu_885_p2;
wire   [9:0] mul_ln213_fu_897_p0;
wire   [9:0] mul_ln213_fu_897_p1;
wire   [19:0] mul_ln213_fu_897_p2;
wire   [8:0] mul_ln214_fu_914_p0;
wire   [9:0] mul_ln214_fu_914_p1;
wire   [18:0] mul_ln214_fu_914_p2;
wire   [9:0] mul_ln211_fu_937_p0;
wire   [6:0] mul_ln211_fu_937_p1;
wire   [14:0] mul_ln211_fu_937_p2;
wire   [4:0] mul_ln220_fu_966_p0;
wire   [6:0] mul_ln220_fu_966_p2;
wire   [4:0] m46_fu_927_p2;
wire  signed [4:0] m47_fu_988_p1;
wire  signed [7:0] sext_ln209_fu_985_p1;
wire  signed [3:0] sext_ln216_1_fu_993_p1;
wire  signed [9:0] sext_ln219_fu_1005_p1;
wire  signed [4:0] mul_ln221_fu_1016_p0;
wire   [7:0] mul_ln221_fu_1016_p2;
wire   [1:0] trunc_ln222_1_fu_1026_p1;
wire  signed [7:0] sext_ln223_fu_1035_p1;
wire  signed [7:0] sext_ln223_1_fu_1038_p1;
wire   [14:0] mul_ln224_fu_1054_p2;
wire  signed [2:0] m63_fu_1068_p0;
wire   [6:0] m55_fu_1001_p2;
wire  signed [9:0] sext_ln226_1_fu_1077_p1;
wire  signed [9:0] sext_ln226_fu_1073_p1;
wire   [9:0] add_ln226_fu_1080_p2;
wire  signed [3:0] m74_fu_1098_p0;
wire   [7:0] m47_fu_988_p2;
wire   [4:0] mul_ln215_fu_1115_p0;
wire   [7:0] mul_ln215_fu_1115_p2;
wire   [10:0] mul_ln229_fu_1135_p2;
wire   [9:0] mul_ln228_fu_1155_p0;
wire   [12:0] mul_ln228_fu_1155_p2;
wire   [7:0] mul_ln230_fu_1174_p0;
wire   [8:0] mul_ln230_fu_1174_p2;
wire   [8:0] mul_ln231_fu_1187_p0;
wire   [16:0] mul_ln231_fu_1187_p2;
wire  signed [9:0] sext_ln233_fu_1197_p1;
wire  signed [3:0] m56_fu_1145_p2;
wire   [7:0] mul_ln234_fu_1212_p2;
wire   [3:0] m68_fu_1180_p1;
wire   [4:0] mul_ln232_fu_1239_p0;
wire   [9:0] mul_ln232_fu_1239_p2;
wire  signed [9:0] sext_ln235_fu_1249_p1;
wire  signed [9:0] sext_ln235_1_fu_1252_p1;
wire   [8:0] mul_ln237_fu_1270_p0;
wire   [13:0] mul_ln237_fu_1270_p2;
wire   [9:0] mul_ln239_fu_1292_p0;
wire   [8:0] mul_ln239_fu_1292_p1;
wire   [10:0] mul_ln239_fu_1292_p2;
wire  signed [8:0] mul_ln240_fu_1305_p0;
wire  signed [12:0] sext_ln237_fu_1261_p1;
wire   [12:0] mul_ln240_fu_1305_p2;
wire  signed [8:0] mul_ln241_fu_1318_p0;
wire   [12:0] mul_ln241_fu_1318_p2;
wire   [7:0] m75_fu_1276_p1;
wire   [7:0] mul_ln242_fu_1346_p0;
wire   [7:0] mul_ln242_fu_1346_p1;
wire   [15:0] mul_ln242_fu_1346_p2;
wire   [18:0] mul_ln243_fu_1362_p2;
wire   [7:0] mul_ln246_fu_1378_p0;
wire   [14:0] mul_ln246_fu_1378_p2;
wire   [7:0] trunc_ln252_fu_1416_p1;
wire   [12:0] m87_fu_1406_p2;
wire   [9:0] trunc_ln255_fu_1433_p1;
wire   [9:0] m81_fu_1368_p1;
wire   [9:0] mul_ln245_fu_1456_p0;
wire   [7:0] mul_ln245_fu_1456_p1;
wire   [16:0] mul_ln245_fu_1456_p2;
wire   [7:0] mul_ln250_fu_1469_p0;
wire   [12:0] mul_ln250_fu_1469_p2;
wire   [9:0] mul_ln265_fu_1518_p0;
wire   [4:0] mul_ln265_fu_1518_p1;
wire   [10:0] mul_ln265_fu_1518_p2;
wire   [7:0] m83_fu_1462_p1;
wire   [3:0] m91_fu_1479_p2;
wire   [9:0] mul_ln257_fu_1562_p0;
wire   [7:0] mul_ln257_fu_1562_p1;
wire   [14:0] mul_ln257_fu_1562_p2;
wire   [9:0] mul_ln262_fu_1578_p0;
wire   [9:0] mul_ln262_fu_1578_p1;
wire   [19:0] mul_ln262_fu_1578_p2;
wire   [12:0] mul_ln263_fu_1594_p0;
wire   [18:0] mul_ln263_fu_1594_p2;
wire   [9:0] mul_ln267_fu_1604_p0;
wire   [12:0] mul_ln267_fu_1604_p1;
wire   [14:0] mul_ln267_fu_1604_p2;
wire  signed [8:0] sext_ln258_1_fu_1617_p1;
wire  signed [8:0] sext_ln258_fu_1614_p1;
wire  signed [8:0] add_ln258_fu_1620_p2;
wire   [9:0] mul_ln264_fu_1644_p0;
wire   [7:0] mul_ln264_fu_1644_p1;
wire   [16:0] mul_ln264_fu_1644_p2;
wire   [9:0] mul_ln266_fu_1654_p0;
wire   [9:0] mul_ln266_fu_1654_p1;
wire   [19:0] mul_ln266_fu_1654_p2;
wire   [9:0] mul_ln276_fu_1698_p0;
wire   [6:0] mul_ln276_fu_1698_p1;
wire   [14:0] mul_ln276_fu_1698_p2;
wire   [9:0] mul_ln281_fu_1719_p0;
wire   [14:0] zext_ln281_fu_1716_p1;
wire   [9:0] mul_ln281_fu_1719_p1;
wire   [14:0] mul_ln281_fu_1719_p2;
wire   [6:0] m119_fu_1725_p1;
wire   [7:0] mul_ln272_fu_1743_p0;
wire   [4:0] mul_ln272_fu_1743_p1;
wire   [10:0] mul_ln272_fu_1743_p2;
wire   [6:0] mul_ln274_fu_1756_p0;
wire   [7:0] mul_ln274_fu_1756_p1;
wire   [14:0] mul_ln274_fu_1756_p2;
wire   [6:0] m112_fu_1762_p1;
wire   [4:0] mul_ln273_fu_1774_p0;
wire   [9:0] zext_ln273_fu_1771_p1;
wire   [4:0] mul_ln273_fu_1774_p1;
wire   [9:0] mul_ln273_fu_1774_p2;
wire  signed [6:0] mul_ln270_fu_1787_p0;
wire  signed [13:0] sext_ln270_fu_1784_p1;
wire  signed [6:0] mul_ln270_fu_1787_p1;
wire   [13:0] mul_ln270_fu_1787_p2;
wire   [9:0] mul_ln279_fu_1803_p0;
wire   [14:0] mul_ln279_fu_1803_p2;
wire   [7:0] mul_ln282_fu_1841_p0;
wire   [15:0] mul_ln282_fu_1841_p2;
wire   [6:0] mul_ln283_fu_1851_p0;
wire   [6:0] mul_ln283_fu_1851_p1;
wire   [13:0] mul_ln283_fu_1851_p2;
wire  signed [9:0] sext_ln287_fu_1861_p1;
wire   [9:0] mul_ln284_fu_1881_p0;
wire  signed [4:0] mul_ln284_fu_1881_p1;
wire   [14:0] mul_ln284_fu_1881_p2;
wire  signed [5:0] shl_ln_fu_1890_p3;
wire   [15:0] mul_ln298_fu_1908_p2;
wire   [10:0] m136_fu_1914_p1;
wire   [9:0] mul_ln285_fu_1932_p0;
wire   [7:0] mul_ln285_fu_1932_p1;
wire   [16:0] mul_ln285_fu_1932_p2;
wire   [9:0] mul_ln289_fu_1945_p0;
wire   [16:0] mul_ln289_fu_1945_p2;
wire   [9:0] mul_ln291_fu_1958_p0;
wire   [7:0] mul_ln291_fu_1958_p1;
wire   [12:0] mul_ln291_fu_1958_p2;
wire   [5:0] m129_fu_1964_p1;
wire   [9:0] mul_ln286_fu_1992_p0;
wire   [7:0] mul_ln286_fu_1992_p1;
wire   [16:0] mul_ln286_fu_1992_p2;
wire   [3:0] mul_ln294_fu_2011_p0;
wire   [3:0] mul_ln294_fu_2011_p1;
wire   [7:0] mul_ln294_fu_2011_p2;
wire   [14:0] mul_ln296_fu_2027_p2;
wire   [9:0] mul_ln290_fu_2047_p0;
wire   [17:0] mul_ln290_fu_2047_p2;
wire   [3:0] mul_ln299_fu_2063_p0;
wire   [7:0] mul_ln299_fu_2063_p1;
wire   [8:0] mul_ln299_fu_2063_p2;
wire   [9:0] mul_ln302_fu_2079_p0;
wire   [9:0] mul_ln302_fu_2079_p1;
wire   [19:0] mul_ln302_fu_2079_p2;
wire   [9:0] m140_fu_2085_p1;
wire   [8:0] mul_ln303_fu_2100_p0;
wire   [12:0] mul_ln303_fu_2100_p2;
wire   [6:0] mul_ln306_fu_2113_p2;
wire  signed [8:0] grp_fu_2159_p3;
wire   [8:0] m141_fu_2106_p1;
wire   [7:0] m144_fu_2118_p3;
wire  signed [7:0] grp_fu_2165_p3;
(* use_dsp48 = "no" *) wire   [7:0] m142_fu_2143_p2;
reg   [26:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire   [18:0] mul_ln184_fu_506_p00;
wire   [18:0] mul_ln184_fu_506_p10;
wire   [18:0] mul_ln185_fu_526_p00;
wire   [18:0] mul_ln185_fu_526_p10;
wire   [19:0] mul_ln188_fu_558_p00;
wire   [19:0] mul_ln188_fu_558_p10;
wire   [14:0] mul_ln190_fu_618_p00;
wire   [14:0] mul_ln190_fu_618_p10;
wire   [5:0] mul_ln192_fu_739_p00;
wire   [5:0] mul_ln192_fu_739_p10;
wire   [18:0] mul_ln196_fu_755_p00;
wire   [17:0] mul_ln197_fu_670_p00;
wire   [17:0] mul_ln197_fu_670_p10;
wire   [10:0] mul_ln198_fu_774_p00;
wire   [10:0] mul_ln198_fu_774_p10;
wire   [18:0] mul_ln199_fu_790_p00;
wire   [18:0] mul_ln199_fu_790_p10;
wire   [14:0] mul_ln202_fu_807_p00;
wire   [6:0] mul_ln203_fu_837_p00;
wire   [19:0] mul_ln205_fu_820_p00;
wire   [19:0] mul_ln205_fu_820_p10;
wire   [10:0] mul_ln206_fu_870_p00;
wire   [10:0] mul_ln206_fu_870_p10;
wire   [14:0] mul_ln211_fu_937_p00;
wire   [14:0] mul_ln211_fu_937_p10;
wire   [19:0] mul_ln213_fu_897_p00;
wire   [18:0] mul_ln214_fu_914_p00;
wire   [18:0] mul_ln214_fu_914_p10;
wire   [7:0] mul_ln215_fu_1115_p00;
wire   [6:0] mul_ln220_fu_966_p00;
wire   [12:0] mul_ln228_fu_1155_p00;
wire   [8:0] mul_ln230_fu_1174_p00;
wire   [16:0] mul_ln231_fu_1187_p00;
wire   [9:0] mul_ln232_fu_1239_p00;
wire   [13:0] mul_ln237_fu_1270_p00;
wire   [10:0] mul_ln239_fu_1292_p00;
wire   [10:0] mul_ln239_fu_1292_p10;
wire   [15:0] mul_ln242_fu_1346_p00;
wire   [15:0] mul_ln242_fu_1346_p10;
wire   [16:0] mul_ln245_fu_1456_p00;
wire   [16:0] mul_ln245_fu_1456_p10;
wire   [14:0] mul_ln246_fu_1378_p00;
wire   [12:0] mul_ln250_fu_1469_p00;
wire   [14:0] mul_ln257_fu_1562_p00;
wire   [14:0] mul_ln257_fu_1562_p10;
wire   [19:0] mul_ln262_fu_1578_p00;
wire   [19:0] mul_ln262_fu_1578_p10;
wire   [18:0] mul_ln263_fu_1594_p00;
wire   [16:0] mul_ln264_fu_1644_p00;
wire   [16:0] mul_ln264_fu_1644_p10;
wire   [10:0] mul_ln265_fu_1518_p00;
wire   [10:0] mul_ln265_fu_1518_p10;
wire   [19:0] mul_ln266_fu_1654_p10;
wire   [14:0] mul_ln267_fu_1604_p00;
wire   [14:0] mul_ln267_fu_1604_p10;
wire   [10:0] mul_ln272_fu_1743_p00;
wire   [10:0] mul_ln272_fu_1743_p10;
wire   [14:0] mul_ln274_fu_1756_p00;
wire   [14:0] mul_ln274_fu_1756_p10;
wire   [14:0] mul_ln276_fu_1698_p00;
wire   [14:0] mul_ln276_fu_1698_p10;
wire   [14:0] mul_ln279_fu_1803_p00;
wire   [15:0] mul_ln282_fu_1841_p00;
wire   [13:0] mul_ln283_fu_1851_p00;
wire   [13:0] mul_ln283_fu_1851_p10;
wire   [14:0] mul_ln284_fu_1881_p00;
wire   [16:0] mul_ln285_fu_1932_p10;
wire   [16:0] mul_ln286_fu_1992_p10;
wire   [17:0] mul_ln290_fu_2047_p00;
wire   [12:0] mul_ln291_fu_1958_p00;
wire   [12:0] mul_ln291_fu_1958_p10;
wire   [7:0] mul_ln294_fu_2011_p00;
wire   [7:0] mul_ln294_fu_2011_p10;
wire   [8:0] mul_ln299_fu_2063_p00;
wire   [8:0] mul_ln299_fu_2063_p10;
wire   [19:0] mul_ln302_fu_2079_p00;
wire   [19:0] mul_ln302_fu_2079_p10;
wire   [12:0] mul_ln303_fu_2100_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
end

case_1_mul_10s_4s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
mul_10s_4s_10_1_1_U1(
    .din0(m19_fu_467_p0),
    .din1(in8_fu_455_p1),
    .dout(m19_fu_467_p2)
);

case_1_mul_10s_10s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10s_10s_20_1_1_U2(
    .din0(mul_ln183_fu_476_p0),
    .din1(mul_ln183_fu_476_p1),
    .dout(mul_ln183_fu_476_p2)
);

case_1_mul_16ns_9ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 19 ))
mul_16ns_9ns_19_1_1_U3(
    .din0(mul_ln184_fu_506_p0),
    .din1(mul_ln184_fu_506_p1),
    .dout(mul_ln184_fu_506_p2)
);

case_1_mul_16ns_10ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 19 ))
mul_16ns_10ns_19_1_1_U4(
    .din0(mul_ln185_fu_526_p0),
    .din1(mul_ln185_fu_526_p1),
    .dout(mul_ln185_fu_526_p2)
);

case_1_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U5(
    .din0(m24_fu_544_p0),
    .din1(m24_fu_544_p1),
    .dout(m24_fu_544_p2)
);

case_1_mul_10ns_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10ns_20_1_1_U6(
    .din0(mul_ln188_fu_558_p0),
    .din1(mul_ln188_fu_558_p1),
    .dout(mul_ln188_fu_558_p2)
);

case_1_mul_9ns_8ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 15 ))
mul_9ns_8ns_15_1_1_U7(
    .din0(mul_ln190_fu_618_p0),
    .din1(mul_ln190_fu_618_p1),
    .dout(mul_ln190_fu_618_p2)
);

case_1_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U8(
    .din0(trunc_ln195_fu_642_p1),
    .din1(m26_reg_2209),
    .dout(m33_fu_658_p2)
);

case_1_mul_9ns_9ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9ns_9ns_18_1_1_U9(
    .din0(mul_ln197_fu_670_p0),
    .din1(mul_ln197_fu_670_p1),
    .dout(mul_ln197_fu_670_p2)
);

case_1_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U10(
    .din0(trunc_ln200_reg_2183),
    .din1(m38_fu_684_p1),
    .dout(m38_fu_684_p2)
);

case_1_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U11(
    .din0(m20_fu_723_p0),
    .din1(m20_fu_723_p1),
    .dout(m20_fu_723_p2)
);

case_1_mul_3ns_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3ns_6_1_1_U12(
    .din0(mul_ln192_fu_739_p0),
    .din1(mul_ln192_fu_739_p1),
    .dout(mul_ln192_fu_739_p2)
);

case_1_mul_10ns_9s_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 19 ))
mul_10ns_9s_19_1_1_U13(
    .din0(mul_ln196_fu_755_p0),
    .din1(in18_reg_2216),
    .dout(mul_ln196_fu_755_p2)
);

case_1_mul_10ns_5ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
mul_10ns_5ns_11_1_1_U14(
    .din0(mul_ln198_fu_774_p0),
    .din1(mul_ln198_fu_774_p1),
    .dout(mul_ln198_fu_774_p2)
);

case_1_mul_9ns_10ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 19 ))
mul_9ns_10ns_19_1_1_U15(
    .din0(mul_ln199_fu_790_p0),
    .din1(mul_ln199_fu_790_p1),
    .dout(mul_ln199_fu_790_p2)
);

case_1_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U16(
    .din0(trunc_ln201_reg_2253),
    .din1(trunc_ln201_1_reg_2258),
    .dout(m39_fu_800_p2)
);

case_1_mul_10ns_7s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
mul_10ns_7s_15_1_1_U17(
    .din0(mul_ln202_fu_807_p0),
    .din1(m28_reg_2226),
    .dout(mul_ln202_fu_807_p2)
);

case_1_mul_10ns_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10ns_20_1_1_U18(
    .din0(mul_ln205_fu_820_p0),
    .din1(mul_ln205_fu_820_p1),
    .dout(mul_ln205_fu_820_p2)
);

case_1_mul_3ns_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_3ns_7s_7_1_1_U19(
    .din0(mul_ln203_fu_837_p0),
    .din1(m28_reg_2226),
    .dout(mul_ln203_fu_837_p2)
);

case_1_mul_5ns_10ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mul_5ns_10ns_11_1_1_U20(
    .din0(mul_ln206_fu_870_p0),
    .din1(mul_ln206_fu_870_p1),
    .dout(mul_ln206_fu_870_p2)
);

case_1_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U21(
    .din0(trunc_ln207_reg_2317),
    .din1(add_ln207_fu_849_p2),
    .dout(m45_fu_880_p2)
);

case_1_mul_10ns_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10ns_20_1_1_U22(
    .din0(mul_ln210_fu_885_p0),
    .din1(mul_ln210_fu_885_p1),
    .dout(mul_ln210_fu_885_p2)
);

case_1_mul_10ns_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10ns_20_1_1_U23(
    .din0(mul_ln213_fu_897_p0),
    .din1(mul_ln213_fu_897_p1),
    .dout(mul_ln213_fu_897_p2)
);

case_1_mul_9ns_10ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 19 ))
mul_9ns_10ns_19_1_1_U24(
    .din0(mul_ln214_fu_914_p0),
    .din1(mul_ln214_fu_914_p1),
    .dout(mul_ln214_fu_914_p2)
);

case_1_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U25(
    .din0(m44_reg_2334),
    .din1(trunc_ln208_reg_2268),
    .dout(m46_fu_927_p2)
);

case_1_mul_10ns_7ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
mul_10ns_7ns_15_1_1_U26(
    .din0(mul_ln211_fu_937_p0),
    .din1(mul_ln211_fu_937_p1),
    .dout(mul_ln211_fu_937_p2)
);

case_1_mul_7s_5s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_7s_5s_7_1_1_U27(
    .din0(trunc_ln212_reg_2298),
    .din1(m44_reg_2334),
    .dout(m50_fu_950_p2)
);

case_1_mul_5ns_3s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 7 ))
mul_5ns_3s_7_1_1_U28(
    .din0(mul_ln220_fu_966_p0),
    .din1(m41_reg_2322),
    .dout(mul_ln220_fu_966_p2)
);

case_1_mul_8s_5s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
mul_8s_5s_8_1_1_U29(
    .din0(m45_reg_2342),
    .din1(m47_fu_988_p1),
    .dout(m47_fu_988_p2)
);

case_1_mul_5s_3s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mul_5s_3s_8_1_1_U30(
    .din0(mul_ln221_fu_1016_p0),
    .din1(m58_reg_2391),
    .dout(mul_ln221_fu_1016_p2)
);

case_1_mul_8s_7s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
mul_8s_7s_15_1_1_U31(
    .din0(m45_reg_2342),
    .din1(m49_reg_2369),
    .dout(mul_ln224_fu_1054_p2)
);

case_1_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U32(
    .din0(m63_fu_1068_p0),
    .din1(trunc_ln225_reg_2398),
    .dout(m63_fu_1068_p2)
);

case_1_mul_4s_3s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
mul_4s_3s_4_1_1_U33(
    .din0(m74_fu_1098_p0),
    .din1(m58_reg_2391),
    .dout(m74_fu_1098_p2)
);

case_1_mul_5ns_3s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
mul_5ns_3s_8_1_1_U34(
    .din0(mul_ln215_fu_1115_p0),
    .din1(m41_reg_2322),
    .dout(mul_ln215_fu_1115_p2)
);

case_1_mul_8s_3s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 11 ))
mul_8s_3s_11_1_1_U35(
    .din0(m61_reg_2429),
    .din1(m63_reg_2439),
    .dout(mul_ln229_fu_1135_p2)
);

case_1_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U36(
    .din0(m54_reg_2403),
    .din1(trunc_ln218_reg_2454),
    .dout(m56_fu_1145_p2)
);

case_1_mul_10ns_5s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
mul_10ns_5s_13_1_1_U37(
    .din0(mul_ln228_fu_1155_p0),
    .din1(m59_reg_2416),
    .dout(mul_ln228_fu_1155_p2)
);

case_1_mul_8ns_4s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 9 ))
mul_8ns_4s_9_1_1_U38(
    .din0(mul_ln230_fu_1174_p0),
    .din1(m54_reg_2403),
    .dout(mul_ln230_fu_1174_p2)
);

case_1_mul_9ns_8s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
mul_9ns_8s_17_1_1_U39(
    .din0(mul_ln231_fu_1187_p0),
    .din1(m67_reg_2459),
    .dout(mul_ln231_fu_1187_p2)
);

case_1_mul_4s_4s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
mul_4s_4s_8_1_1_U40(
    .din0(m56_fu_1145_p2),
    .din1(m54_reg_2403),
    .dout(mul_ln234_fu_1212_p2)
);

case_1_mul_5ns_5s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mul_5ns_5s_10_1_1_U41(
    .din0(mul_ln232_fu_1239_p0),
    .din1(m59_reg_2416),
    .dout(mul_ln232_fu_1239_p2)
);

case_1_mul_9ns_5s_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 14 ))
mul_9ns_5s_14_1_1_U42(
    .din0(mul_ln237_fu_1270_p0),
    .din1(m59_reg_2416),
    .dout(mul_ln237_fu_1270_p2)
);

case_1_mul_5s_2s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 7 ))
mul_5s_2s_7_1_1_U43(
    .din0(m59_reg_2416),
    .din1(m60_reg_2424),
    .dout(m76_fu_1283_p2)
);

case_1_mul_10ns_9ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
mul_10ns_9ns_11_1_1_U44(
    .din0(mul_ln239_fu_1292_p0),
    .din1(mul_ln239_fu_1292_p1),
    .dout(mul_ln239_fu_1292_p2)
);

case_1_mul_9s_4s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 13 ))
mul_9s_4s_13_1_1_U45(
    .din0(mul_ln240_fu_1305_p0),
    .din1(m72_reg_2486),
    .dout(mul_ln240_fu_1305_p2)
);

case_1_mul_9s_4s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 13 ))
mul_9s_4s_13_1_1_U46(
    .din0(mul_ln241_fu_1318_p0),
    .din1(m74_reg_2444),
    .dout(mul_ln241_fu_1318_p2)
);

case_1_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U47(
    .din0(mul_ln242_fu_1346_p0),
    .din1(mul_ln242_fu_1346_p1),
    .dout(mul_ln242_fu_1346_p2)
);

case_1_mul_10s_9s_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 19 ))
mul_10s_9s_19_1_1_U48(
    .din0(add_ln235_reg_2496),
    .din1(m79_reg_2521),
    .dout(mul_ln243_fu_1362_p2)
);

case_1_mul_8ns_7s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
mul_8ns_7s_15_1_1_U49(
    .din0(mul_ln246_fu_1378_p0),
    .din1(m76_reg_2502),
    .dout(mul_ln246_fu_1378_p2)
);

case_1_mul_10s_8s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
mul_10s_8s_10_1_1_U50(
    .din0(m71_reg_2479),
    .din1(m67_reg_2459),
    .dout(m85_fu_1391_p2)
);

case_1_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U51(
    .din0(trunc_ln248_reg_2491),
    .din1(m77_reg_2508),
    .dout(m86_fu_1396_p2)
);

case_1_mul_10s_7s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 13 ))
mul_10s_7s_13_1_1_U52(
    .din0(add_ln235_reg_2496),
    .din1(m76_reg_2502),
    .dout(m87_fu_1406_p2)
);

case_1_mul_10ns_8ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
mul_10ns_8ns_17_1_1_U53(
    .din0(mul_ln245_fu_1456_p0),
    .din1(mul_ln245_fu_1456_p1),
    .dout(mul_ln245_fu_1456_p2)
);

case_1_mul_8ns_5s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
mul_8ns_5s_13_1_1_U54(
    .din0(mul_ln250_fu_1469_p0),
    .din1(m77_reg_2508),
    .dout(mul_ln250_fu_1469_p2)
);

case_1_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U55(
    .din0(trunc_ln253_reg_2571),
    .din1(trunc_ln253_1_reg_2576),
    .dout(m91_fu_1479_p2)
);

case_1_mul_8s_6s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 13 ))
mul_8s_6s_13_1_1_U56(
    .din0(m90_reg_2565),
    .din1(m89_reg_2558),
    .dout(m92_fu_1489_p2)
);

case_1_mul_10s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_10s_8s_16_1_1_U57(
    .din0(m85_reg_2548),
    .din1(m90_reg_2565),
    .dout(mul_ln259_fu_1501_p2)
);

case_1_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U58(
    .din0(m93_reg_2581),
    .din1(grp_fu_2152_p3),
    .dout(m98_fu_1508_p2)
);

case_1_mul_10ns_5ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
mul_10ns_5ns_11_1_1_U59(
    .din0(mul_ln265_fu_1518_p0),
    .din1(mul_ln265_fu_1518_p1),
    .dout(mul_ln265_fu_1518_p2)
);

case_1_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U60(
    .din0(trunc_ln256_reg_2599),
    .din1(trunc_ln256_1_reg_2587),
    .dout(m94_fu_1552_p2)
);

case_1_mul_10ns_8ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 15 ))
mul_10ns_8ns_15_1_1_U61(
    .din0(mul_ln257_fu_1562_p0),
    .din1(mul_ln257_fu_1562_p1),
    .dout(mul_ln257_fu_1562_p2)
);

case_1_mul_10ns_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10ns_20_1_1_U62(
    .din0(mul_ln262_fu_1578_p0),
    .din1(mul_ln262_fu_1578_p1),
    .dout(mul_ln262_fu_1578_p2)
);

case_1_mul_13ns_6s_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 19 ))
mul_13ns_6s_19_1_1_U63(
    .din0(mul_ln263_fu_1594_p0),
    .din1(m89_reg_2558),
    .dout(mul_ln263_fu_1594_p2)
);

case_1_mul_10ns_13ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 15 ))
mul_10ns_13ns_15_1_1_U64(
    .din0(mul_ln267_fu_1604_p0),
    .din1(mul_ln267_fu_1604_p1),
    .dout(mul_ln267_fu_1604_p2)
);

case_1_mul_10s_9s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 10 ))
mul_10s_9s_10_1_1_U65(
    .din0(m82_reg_2592),
    .din1(add_ln258_fu_1620_p2),
    .dout(m99_fu_1630_p2)
);

case_1_mul_10ns_8ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
mul_10ns_8ns_17_1_1_U66(
    .din0(mul_ln264_fu_1644_p0),
    .din1(mul_ln264_fu_1644_p1),
    .dout(mul_ln264_fu_1644_p2)
);

case_1_mul_10ns_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10ns_20_1_1_U67(
    .din0(mul_ln266_fu_1654_p0),
    .din1(mul_ln266_fu_1654_p1),
    .dout(mul_ln266_fu_1654_p2)
);

case_1_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U68(
    .din0(trunc_ln268_reg_2637),
    .din1(trunc_ln268_1_reg_2621),
    .dout(m106_fu_1663_p2)
);

case_1_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U69(
    .din0(trunc_ln275_reg_2654),
    .din1(add_ln258_fu_1620_p2),
    .dout(m113_fu_1679_p2)
);

case_1_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U70(
    .din0(trunc_ln271_reg_2692),
    .din1(trunc_ln271_1_reg_2697),
    .dout(m109_fu_1691_p2)
);

case_1_mul_10ns_7ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
mul_10ns_7ns_15_1_1_U71(
    .din0(mul_ln276_fu_1698_p0),
    .din1(mul_ln276_fu_1698_p1),
    .dout(mul_ln276_fu_1698_p2)
);

case_1_mul_8s_7s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
mul_8s_7s_8_1_1_U72(
    .din0(m102_reg_2670),
    .din1(m105_reg_2659),
    .dout(m115_fu_1711_p2)
);

case_1_mul_10ns_10ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 15 ))
mul_10ns_10ns_15_1_1_U73(
    .din0(mul_ln281_fu_1719_p0),
    .din1(mul_ln281_fu_1719_p1),
    .dout(mul_ln281_fu_1719_p2)
);

case_1_mul_8ns_5ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 11 ))
mul_8ns_5ns_11_1_1_U74(
    .din0(mul_ln272_fu_1743_p0),
    .din1(mul_ln272_fu_1743_p1),
    .dout(mul_ln272_fu_1743_p2)
);

case_1_mul_7ns_8ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 15 ))
mul_7ns_8ns_15_1_1_U75(
    .din0(mul_ln274_fu_1756_p0),
    .din1(mul_ln274_fu_1756_p1),
    .dout(mul_ln274_fu_1756_p2)
);

case_1_mul_5ns_5ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mul_5ns_5ns_10_1_1_U76(
    .din0(mul_ln273_fu_1774_p0),
    .din1(mul_ln273_fu_1774_p1),
    .dout(mul_ln273_fu_1774_p2)
);

case_1_mul_7s_7s_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 14 ))
mul_7s_7s_14_1_1_U77(
    .din0(mul_ln270_fu_1787_p0),
    .din1(mul_ln270_fu_1787_p1),
    .dout(mul_ln270_fu_1787_p2)
);

case_1_mul_10ns_5s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 15 ))
mul_10ns_5s_15_1_1_U78(
    .din0(mul_ln279_fu_1803_p0),
    .din1(m111_reg_2733),
    .dout(mul_ln279_fu_1803_p2)
);

case_1_mul_10s_8s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
mul_10s_8s_10_1_1_U79(
    .din0(trunc_ln280_reg_2750),
    .din1(m108_reg_2739),
    .dout(m118_fu_1833_p2)
);

case_1_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U80(
    .din0(mul_ln282_fu_1841_p0),
    .din1(m108_reg_2739),
    .dout(mul_ln282_fu_1841_p2)
);

case_1_mul_7ns_7ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 14 ))
mul_7ns_7ns_14_1_1_U81(
    .din0(mul_ln283_fu_1851_p0),
    .din1(mul_ln283_fu_1851_p1),
    .dout(mul_ln283_fu_1851_p2)
);

case_1_mul_10ns_5s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 15 ))
mul_10ns_5s_15_1_1_U82(
    .din0(mul_ln284_fu_1881_p0),
    .din1(mul_ln284_fu_1881_p1),
    .dout(mul_ln284_fu_1881_p2)
);

case_1_mul_10s_6s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mul_10s_6s_16_1_1_U83(
    .din0(m125_reg_2784),
    .din1(shl_ln_fu_1890_p3),
    .dout(mul_ln298_fu_1908_p2)
);

case_1_mul_10ns_8ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
mul_10ns_8ns_17_1_1_U84(
    .din0(mul_ln285_fu_1932_p0),
    .din1(mul_ln285_fu_1932_p1),
    .dout(mul_ln285_fu_1932_p2)
);

case_1_mul_10ns_7s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 17 ))
mul_10ns_7s_17_1_1_U85(
    .din0(mul_ln289_fu_1945_p0),
    .din1(m114_reg_2718),
    .dout(mul_ln289_fu_1945_p2)
);

case_1_mul_10ns_8ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
mul_10ns_8ns_13_1_1_U86(
    .din0(mul_ln291_fu_1958_p0),
    .din1(mul_ln291_fu_1958_p1),
    .dout(mul_ln291_fu_1958_p2)
);

case_1_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U87(
    .din0(trunc_ln295_reg_2794),
    .din1(m120_reg_2771),
    .dout(m133_fu_1972_p2)
);

case_1_mul_10ns_8ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
mul_10ns_8ns_17_1_1_U88(
    .din0(mul_ln286_fu_1992_p0),
    .din1(mul_ln286_fu_1992_p1),
    .dout(mul_ln286_fu_1992_p2)
);

case_1_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U89(
    .din0(m127_reg_2820),
    .din1(m104_reg_2675),
    .dout(m130_fu_2001_p2)
);

case_1_mul_4ns_4ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
mul_4ns_4ns_8_1_1_U90(
    .din0(mul_ln294_fu_2011_p0),
    .din1(mul_ln294_fu_2011_p1),
    .dout(mul_ln294_fu_2011_p2)
);

case_1_mul_8s_7s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
mul_8s_7s_15_1_1_U91(
    .din0(m133_reg_2830),
    .din1(m121_reg_2778),
    .dout(mul_ln296_fu_2027_p2)
);

case_1_mul_10ns_8s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_10ns_8s_18_1_1_U92(
    .din0(mul_ln290_fu_2047_p0),
    .din1(m124_reg_2846),
    .dout(mul_ln290_fu_2047_p2)
);

case_1_mul_4ns_8ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_4ns_8ns_9_1_1_U93(
    .din0(mul_ln299_fu_2063_p0),
    .din1(mul_ln299_fu_2063_p1),
    .dout(mul_ln299_fu_2063_p2)
);

case_1_mul_10ns_10ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 20 ))
mul_10ns_10ns_20_1_1_U94(
    .din0(mul_ln302_fu_2079_p0),
    .din1(mul_ln302_fu_2079_p1),
    .dout(mul_ln302_fu_2079_p2)
);

case_1_mul_9ns_4s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 13 ))
mul_9ns_4s_13_1_1_U95(
    .din0(mul_ln303_fu_2100_p0),
    .din1(m137_reg_2877),
    .dout(mul_ln303_fu_2100_p2)
);

case_1_mul_7s_4s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 7 ))
mul_7s_4s_7_1_1_U96(
    .din0(trunc_ln306_reg_2841),
    .din1(m137_reg_2877),
    .dout(mul_ln306_fu_2113_p2)
);

case_1_mac_muladd_10s_10s_5s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_5s_10_4_1_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln227_1_reg_2354),
    .din1(trunc_ln227_reg_2349),
    .din2(m77_reg_2508),
    .ce(1'b1),
    .dout(grp_fu_2152_p3)
);

case_1_mac_muladd_9s_9s_9ns_9_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mac_muladd_9s_9s_9ns_9_4_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln300_reg_2805),
    .din1(trunc_ln300_1_reg_2760),
    .din2(trunc_ln300_2_reg_2867),
    .ce(1'b1),
    .dout(grp_fu_2159_p3)
);

case_1_mac_muladd_8s_8s_7s_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
mac_muladd_8s_8s_7s_8_4_1_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(m124_reg_2846),
    .din1(trunc_ln297_reg_2836),
    .din2(m121_reg_2778),
    .ce(1'b1),
    .dout(grp_fu_2165_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln233_reg_2410 <= add_ln233_fu_1008_p2;
        m54_reg_2403 <= m54_fu_996_p2;
        m59_reg_2416 <= m59_fu_1022_p1;
        m60_reg_2424 <= m60_fu_1030_p2;
        m61_reg_2429 <= m61_fu_1042_p2;
        m62_reg_2434 <= m62_fu_1060_p1;
        m63_reg_2439 <= m63_fu_1068_p2;
        m74_reg_2444 <= m74_fu_1098_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln235_reg_2496 <= add_ln235_fu_1255_p2;
        m76_reg_2502 <= m76_fu_1283_p2;
        m77_reg_2508 <= m77_fu_1298_p1;
        m78_reg_2515 <= m78_fu_1311_p1;
        m79_reg_2521 <= m79_fu_1324_p1;
        trunc_ln248_reg_2491 <= trunc_ln248_fu_1245_p1;
        trunc_ln252_1_reg_2526 <= trunc_ln252_1_fu_1328_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        in18_reg_2216 <= in18_fu_584_p1;
        m25_reg_2221 <= m25_fu_596_p2;
        m28_reg_2226 <= m28_fu_624_p1;
        m31_reg_2232 <= m31_fu_646_p2;
        m32_reg_2237 <= m32_fu_652_p2;
        m33_reg_2243 <= m33_fu_658_p2;
        m38_reg_2248 <= m38_fu_684_p2;
        trunc_ln201_1_reg_2258 <= trunc_ln201_1_fu_693_p1;
        trunc_ln201_reg_2253 <= trunc_ln201_fu_689_p1;
        trunc_ln204_reg_2263 <= trunc_ln204_fu_697_p1;
        trunc_ln208_reg_2268 <= trunc_ln208_fu_701_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        m100_reg_2647 <= m100_fu_1584_p1;
        m105_reg_2659 <= m105_fu_1610_p1;
        m94_reg_2631 <= m94_fu_1552_p2;
        trunc_ln268_reg_2637 <= trunc_ln268_fu_1568_p1;
        trunc_ln275_reg_2654 <= trunc_ln275_fu_1600_p1;
        zext_ln262_1_reg_2642[9 : 0] <= zext_ln262_1_fu_1575_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        m102_reg_2670 <= m102_fu_1650_p1;
        m104_reg_2675 <= m104_fu_1659_p1;
        m106_reg_2681 <= m106_fu_1663_p2;
        m113_reg_2702 <= m113_fu_1679_p2;
        m99_reg_2665 <= m99_fu_1630_p2;
        trunc_ln269_1_reg_2687 <= trunc_ln269_1_fu_1667_p1;
        trunc_ln271_1_reg_2697 <= trunc_ln271_1_fu_1675_p1;
        trunc_ln271_reg_2692 <= trunc_ln271_fu_1671_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        m103_reg_2616 <= m103_fu_1524_p1;
        m82_reg_2592 <= grp_fu_2152_p3;
        m92_reg_2604 <= m92_fu_1489_p2;
        m98_reg_2610 <= m98_fu_1508_p2;
        trunc_ln256_reg_2599 <= trunc_ln256_fu_1475_p1;
        trunc_ln268_1_reg_2621 <= trunc_ln268_1_fu_1528_p1;
        trunc_ln269_reg_2626 <= trunc_ln269_fu_1532_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        m107_reg_2707 <= m107_fu_1687_p2;
        m109_reg_2713 <= m109_fu_1691_p2;
        m114_reg_2718 <= m114_fu_1704_p1;
        m115_reg_2723 <= m115_fu_1711_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        m108_reg_2739 <= m108_fu_1793_p1;
        m117_reg_2755 <= m117_fu_1813_p1;
        sext_ln279_reg_2745 <= sext_ln279_fu_1797_p1;
        trunc_ln280_reg_2750 <= trunc_ln280_fu_1809_p1;
        trunc_ln300_1_reg_2760 <= trunc_ln300_1_fu_1817_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        m110_reg_2728 <= m110_fu_1749_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        m111_reg_2733 <= m111_fu_1780_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        m118_reg_2765 <= m118_fu_1833_p2;
        m120_reg_2771 <= m120_fu_1847_p1;
        m121_reg_2778 <= m121_fu_1857_p1;
        m125_reg_2784 <= m125_fu_1864_p2;
        trunc_ln294_1_reg_2789 <= trunc_ln294_1_fu_1870_p1;
        trunc_ln295_reg_2794 <= trunc_ln295_fu_1874_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        m122_reg_2799 <= m122_fu_1886_p1;
        trunc_ln300_reg_2805 <= trunc_ln300_fu_1897_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        m123_reg_2815 <= m123_fu_1938_p1;
        m127_reg_2820 <= m127_fu_1951_p1;
        m133_reg_2830 <= m133_fu_1972_p2;
        trunc_ln294_reg_2825 <= trunc_ln294_fu_1968_p1;
        trunc_ln297_reg_2836 <= trunc_ln297_fu_1976_p1;
        trunc_ln306_reg_2841 <= trunc_ln306_fu_1980_p1;
        zext_ln285_1_reg_2810[9 : 0] <= zext_ln285_1_fu_1926_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        m124_reg_2846 <= m124_fu_1997_p1;
        m130_reg_2852 <= m130_fu_2001_p2;
        m132_reg_2857 <= m132_fu_2017_p1;
        m134_reg_2862 <= m134_fu_2033_p1;
        trunc_ln300_2_reg_2867 <= trunc_ln300_2_fu_2037_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        m128_reg_2872 <= m128_fu_2053_p1;
        m137_reg_2877 <= m137_fu_2069_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        m19_reg_2172 <= m19_fu_467_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        m21_reg_2177 <= m21_fu_482_p1;
        trunc_ln200_reg_2183 <= trunc_ln200_fu_486_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        m22_reg_2188 <= m22_fu_512_p1;
        m23_reg_2193 <= m23_fu_532_p1;
        m24_reg_2199 <= m24_fu_544_p2;
        m26_reg_2209 <= m26_fu_564_p1;
        trunc_ln188_reg_2204 <= trunc_ln188_fu_550_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        m30_reg_2273 <= m30_fu_745_p1;
        m34_reg_2278 <= m34_fu_761_p1;
        m36_reg_2283 <= m36_fu_780_p1;
        m37_reg_2288 <= m37_fu_796_p1;
        m39_reg_2293 <= m39_fu_800_p2;
        m43_reg_2308 <= m43_fu_826_p1;
        trunc_ln207_reg_2317 <= trunc_ln207_fu_830_p1;
        trunc_ln212_reg_2298 <= trunc_ln212_fu_813_p1;
        zext_ln205_reg_2303[9 : 0] <= zext_ln205_fu_817_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        m41_reg_2322 <= m41_fu_842_p1;
        m42_reg_2329 <= m42_fu_854_p1;
        m44_reg_2334 <= m44_fu_876_p1;
        m45_reg_2342 <= m45_fu_880_p2;
        m51_reg_2359 <= m51_fu_907_p1;
        m52_reg_2364 <= m52_fu_920_p1;
        trunc_ln227_1_reg_2354 <= trunc_ln227_1_fu_903_p1;
        trunc_ln227_reg_2349 <= trunc_ln227_fu_890_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        m49_reg_2369 <= m49_fu_943_p1;
        m50_reg_2375 <= m50_fu_950_p2;
        m58_reg_2391 <= m58_fu_972_p1;
        trunc_ln216_reg_2381 <= trunc_ln216_fu_958_p1;
        trunc_ln222_reg_2386 <= trunc_ln222_fu_962_p1;
        trunc_ln225_reg_2398 <= trunc_ln225_fu_976_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        m53_reg_2449 <= m53_fu_1121_p1;
        m67_reg_2459 <= m67_fu_1141_p1;
        trunc_ln218_reg_2454 <= trunc_ln218_fu_1125_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        m66_reg_2466 <= m66_fu_1161_p1;
        m69_reg_2471 <= m69_fu_1193_p1;
        m71_reg_2479 <= m71_fu_1200_p2;
        m72_reg_2486 <= m72_fu_1218_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        m80_reg_2531 <= m80_fu_1352_p1;
        m84_reg_2543 <= m84_fu_1384_p1;
        m85_reg_2548 <= m85_fu_1391_p2;
        m86_reg_2553 <= m86_fu_1396_p2;
        m89_reg_2558 <= m89_fu_1412_p1;
        m90_reg_2565 <= m90_fu_1420_p2;
        m93_reg_2581 <= m93_fu_1437_p2;
        trunc_ln253_1_reg_2576 <= trunc_ln253_1_fu_1429_p1;
        trunc_ln253_reg_2571 <= trunc_ln253_fu_1425_p1;
        trunc_ln256_1_reg_2587 <= trunc_ln256_1_fu_1443_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_data_0_ap_vld = 1'b1;
    end else begin
        out_data_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        out_data_10_ap_vld = 1'b1;
    end else begin
        out_data_10_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        out_data_11_ap_vld = 1'b1;
    end else begin
        out_data_11_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        out_data_12_ap_vld = 1'b1;
    end else begin
        out_data_12_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        out_data_13_ap_vld = 1'b1;
    end else begin
        out_data_13_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        out_data_14_ap_vld = 1'b1;
    end else begin
        out_data_14_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        out_data_15_ap_vld = 1'b1;
    end else begin
        out_data_15_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        out_data_16_ap_vld = 1'b1;
    end else begin
        out_data_16_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        out_data_17_ap_vld = 1'b1;
    end else begin
        out_data_17_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        out_data_18_ap_vld = 1'b1;
    end else begin
        out_data_18_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_data_1_ap_vld = 1'b1;
    end else begin
        out_data_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        out_data_2_ap_vld = 1'b1;
    end else begin
        out_data_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_data_3_ap_vld = 1'b1;
    end else begin
        out_data_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_data_4_ap_vld = 1'b1;
    end else begin
        out_data_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        out_data_5_ap_vld = 1'b1;
    end else begin
        out_data_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        out_data_6_ap_vld = 1'b1;
    end else begin
        out_data_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        out_data_7_ap_vld = 1'b1;
    end else begin
        out_data_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        out_data_8_ap_vld = 1'b1;
    end else begin
        out_data_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        out_data_9_ap_vld = 1'b1;
    end else begin
        out_data_9_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln189_fu_605_p2 = ($signed(sext_ln187_fu_588_p1) + $signed(sext_ln189_fu_602_p1));

assign add_ln207_fu_849_p2 = ($signed(sext_ln204_fu_846_p1) + $signed(trunc_ln204_reg_2263));

assign add_ln226_fu_1080_p2 = ($signed(sext_ln226_1_fu_1077_p1) + $signed(sext_ln226_fu_1073_p1));

assign add_ln233_fu_1008_p2 = ($signed(m43_reg_2308) + $signed(sext_ln219_fu_1005_p1));

assign add_ln235_fu_1255_p2 = ($signed(sext_ln235_fu_1249_p1) + $signed(sext_ln235_1_fu_1252_p1));

assign add_ln258_fu_1620_p2 = ($signed(sext_ln258_1_fu_1617_p1) + $signed(sext_ln258_fu_1614_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign in11_fu_568_p1 = in_data_10[8:0];

assign in13_fu_572_p1 = in_data_12[4:0];

assign in14_fu_576_p1 = in_data_13[7:0];

assign in15_fu_494_p1 = in_data_14[9:0];

assign in17_fu_580_p1 = in_data_16[8:0];

assign in18_fu_584_p1 = in_data_17[8:0];

assign in7_fu_490_p1 = in_data_6[8:0];

assign in8_fu_455_p1 = in_data_7[3:0];

assign m100_fu_1584_p1 = mul_ln262_fu_1578_p2[9:0];

assign m102_fu_1650_p1 = mul_ln264_fu_1644_p2[7:0];

assign m103_fu_1524_p1 = mul_ln265_fu_1518_p2[4:0];

assign m104_fu_1659_p1 = mul_ln266_fu_1654_p2[9:0];

assign m105_fu_1610_p1 = mul_ln267_fu_1604_p2[6:0];

assign m107_fu_1687_p2 = (trunc_ln269_reg_2626 + trunc_ln269_1_reg_2687);

assign m108_fu_1793_p1 = mul_ln270_fu_1787_p2[7:0];

assign m110_fu_1749_p1 = mul_ln272_fu_1743_p2[4:0];

assign m111_fu_1780_p1 = mul_ln273_fu_1774_p2[4:0];

assign m112_fu_1762_p1 = mul_ln274_fu_1756_p2[6:0];

assign m114_fu_1704_p1 = mul_ln276_fu_1698_p2[6:0];

assign m117_fu_1813_p1 = mul_ln279_fu_1803_p2[6:0];

assign m119_fu_1725_p1 = mul_ln281_fu_1719_p2[6:0];

assign m120_fu_1847_p1 = mul_ln282_fu_1841_p2[7:0];

assign m121_fu_1857_p1 = mul_ln283_fu_1851_p2[6:0];

assign m122_fu_1886_p1 = mul_ln284_fu_1881_p2[9:0];

assign m123_fu_1938_p1 = mul_ln285_fu_1932_p2[7:0];

assign m124_fu_1997_p1 = mul_ln286_fu_1992_p2[7:0];

assign m125_fu_1864_p2 = ($signed(sext_ln287_fu_1861_p1) + $signed(m118_fu_1833_p2));

assign m127_fu_1951_p1 = mul_ln289_fu_1945_p2[9:0];

assign m128_fu_2053_p1 = mul_ln290_fu_2047_p2[8:0];

assign m129_fu_1964_p1 = mul_ln291_fu_1958_p2[5:0];

assign m132_fu_2017_p1 = mul_ln294_fu_2011_p2[3:0];

assign m134_fu_2033_p1 = mul_ln296_fu_2027_p2[9:0];

assign m136_fu_1914_p1 = mul_ln298_fu_1908_p2[10:0];

assign m137_fu_2069_p1 = mul_ln299_fu_2063_p2[3:0];

assign m140_fu_2085_p1 = mul_ln302_fu_2079_p2[9:0];

assign m141_fu_2106_p1 = mul_ln303_fu_2100_p2[8:0];

assign m142_fu_2143_p2 = ($signed(grp_fu_2165_p3) + $signed(m133_reg_2830));

assign m144_fu_2118_p3 = {{mul_ln306_fu_2113_p2}, {1'd0}};

assign m19_fu_467_p0 = in_data_2[9:0];

assign m20_fu_723_p0 = in_data_15[2:0];

assign m20_fu_723_p1 = in_data_9[2:0];

assign m21_fu_482_p1 = mul_ln183_fu_476_p2[9:0];

assign m22_fu_512_p1 = mul_ln184_fu_506_p2[8:0];

assign m23_fu_532_p1 = mul_ln185_fu_526_p2[8:0];

assign m24_fu_544_p0 = in_data_14[5:0];

assign m24_fu_544_p1 = in_data_6[5:0];

assign m25_fu_596_p2 = (trunc_ln187_fu_592_p1 + in13_fu_572_p1);

assign m26_fu_564_p1 = mul_ln188_fu_558_p2[9:0];

assign m28_fu_624_p1 = mul_ln190_fu_618_p2[6:0];

assign m29_fu_636_p2 = ($signed(sext_ln191_fu_628_p1) + $signed(sext_ln191_1_fu_632_p1));

assign m30_fu_745_p1 = mul_ln192_fu_739_p2[2:0];

assign m31_fu_646_p2 = ($signed(trunc_ln195_fu_642_p1) + $signed(m29_fu_636_p2));

assign m32_fu_652_p2 = ($signed(trunc_ln195_fu_642_p1) + $signed(sext_ln191_fu_628_p1));

assign m34_fu_761_p1 = mul_ln196_fu_755_p2[9:0];

assign m35_fu_676_p1 = mul_ln197_fu_670_p2[8:0];

assign m36_fu_780_p1 = mul_ln198_fu_774_p2[4:0];

assign m37_fu_796_p1 = mul_ln199_fu_790_p2[8:0];

assign m38_fu_684_p1 = m29_fu_636_p2[4:0];

assign m41_fu_842_p1 = mul_ln203_fu_837_p2[2:0];

assign m42_fu_854_p1 = add_ln207_fu_849_p2[6:0];

assign m43_fu_826_p1 = mul_ln205_fu_820_p2[9:0];

assign m44_fu_876_p1 = mul_ln206_fu_870_p2[4:0];

assign m47_fu_988_p1 = sext_ln209_fu_985_p1;

assign m49_fu_943_p1 = mul_ln211_fu_937_p2[6:0];

assign m51_fu_907_p1 = mul_ln213_fu_897_p2[8:0];

assign m52_fu_920_p1 = mul_ln214_fu_914_p2[8:0];

assign m53_fu_1121_p1 = mul_ln215_fu_1115_p2[4:0];

assign m54_fu_996_p2 = ($signed(trunc_ln216_reg_2381) + $signed(sext_ln216_1_fu_993_p1));

assign m55_fu_1001_p2 = ($signed(m49_reg_2369) + $signed(m50_reg_2375));

assign m58_fu_972_p1 = mul_ln220_fu_966_p2[2:0];

assign m59_fu_1022_p1 = mul_ln221_fu_1016_p2[4:0];

assign m60_fu_1030_p2 = (trunc_ln222_1_fu_1026_p1 + trunc_ln222_reg_2386);

assign m61_fu_1042_p2 = ($signed(sext_ln223_fu_1035_p1) + $signed(sext_ln223_1_fu_1038_p1));

assign m62_fu_1060_p1 = mul_ln224_fu_1054_p2[7:0];

assign m63_fu_1068_p0 = m54_fu_996_p2[2:0];

assign m66_fu_1161_p1 = mul_ln228_fu_1155_p2[5:0];

assign m67_fu_1141_p1 = mul_ln229_fu_1135_p2[7:0];

assign m68_fu_1180_p1 = mul_ln230_fu_1174_p2[3:0];

assign m69_fu_1193_p1 = mul_ln231_fu_1187_p2[8:0];

assign m71_fu_1200_p2 = ($signed(add_ln233_reg_2410) + $signed(sext_ln233_fu_1197_p1));

assign m72_fu_1218_p1 = mul_ln234_fu_1212_p2[3:0];

assign m74_fu_1098_p0 = add_ln233_fu_1008_p2[3:0];

assign m75_fu_1276_p1 = mul_ln237_fu_1270_p2[7:0];

assign m77_fu_1298_p1 = mul_ln239_fu_1292_p2[4:0];

assign m78_fu_1311_p1 = mul_ln240_fu_1305_p2[7:0];

assign m79_fu_1324_p1 = mul_ln241_fu_1318_p2[8:0];

assign m80_fu_1352_p1 = mul_ln242_fu_1346_p2[7:0];

assign m81_fu_1368_p1 = mul_ln243_fu_1362_p2[9:0];

assign m83_fu_1462_p1 = mul_ln245_fu_1456_p2[7:0];

assign m84_fu_1384_p1 = mul_ln246_fu_1378_p2[7:0];

assign m89_fu_1412_p1 = mul_ln246_fu_1378_p2[5:0];

assign m90_fu_1420_p2 = (trunc_ln252_fu_1416_p1 + trunc_ln252_1_reg_2526);

assign m93_fu_1437_p2 = (trunc_ln255_fu_1433_p1 + m81_fu_1368_p1);

assign mul_ln183_fu_476_p0 = sext_ln183_fu_473_p1;

assign mul_ln183_fu_476_p1 = sext_ln183_fu_473_p1;

assign mul_ln184_fu_506_p0 = mul_ln184_fu_506_p00;

assign mul_ln184_fu_506_p00 = in_data_5;

assign mul_ln184_fu_506_p1 = mul_ln184_fu_506_p10;

assign mul_ln184_fu_506_p10 = in7_fu_490_p1;

assign mul_ln185_fu_526_p0 = mul_ln185_fu_526_p00;

assign mul_ln185_fu_526_p00 = in_data_4;

assign mul_ln185_fu_526_p1 = mul_ln185_fu_526_p10;

assign mul_ln185_fu_526_p10 = m21_reg_2177;

assign mul_ln188_fu_558_p0 = mul_ln188_fu_558_p00;

assign mul_ln188_fu_558_p00 = m21_reg_2177;

assign mul_ln188_fu_558_p1 = mul_ln188_fu_558_p10;

assign mul_ln188_fu_558_p10 = in15_fu_494_p1;

assign mul_ln190_fu_618_p0 = mul_ln190_fu_618_p00;

assign mul_ln190_fu_618_p00 = m23_reg_2193;

assign mul_ln190_fu_618_p1 = mul_ln190_fu_618_p10;

assign mul_ln190_fu_618_p10 = $unsigned(in14_fu_576_p1);

assign mul_ln192_fu_739_p0 = mul_ln192_fu_739_p00;

assign mul_ln192_fu_739_p00 = trunc_ln188_reg_2204;

assign mul_ln192_fu_739_p1 = mul_ln192_fu_739_p10;

assign mul_ln192_fu_739_p10 = m20_fu_723_p2;

assign mul_ln196_fu_755_p0 = mul_ln196_fu_755_p00;

assign mul_ln196_fu_755_p00 = m31_reg_2232;

assign mul_ln197_fu_670_p0 = mul_ln197_fu_670_p00;

assign mul_ln197_fu_670_p00 = m22_reg_2188;

assign mul_ln197_fu_670_p1 = mul_ln197_fu_670_p10;

assign mul_ln197_fu_670_p10 = in17_fu_580_p1;

assign mul_ln198_fu_774_p0 = mul_ln198_fu_774_p00;

assign mul_ln198_fu_774_p00 = $unsigned(m26_reg_2209);

assign mul_ln198_fu_774_p1 = mul_ln198_fu_774_p10;

assign mul_ln198_fu_774_p10 = m25_reg_2221;

assign mul_ln199_fu_790_p0 = mul_ln199_fu_790_p00;

assign mul_ln199_fu_790_p00 = m23_reg_2193;

assign mul_ln199_fu_790_p1 = mul_ln199_fu_790_p10;

assign mul_ln199_fu_790_p10 = m32_reg_2237;

assign mul_ln202_fu_807_p0 = mul_ln202_fu_807_p00;

assign mul_ln202_fu_807_p00 = $unsigned(m26_reg_2209);

assign mul_ln203_fu_837_p0 = mul_ln203_fu_837_p00;

assign mul_ln203_fu_837_p00 = m39_reg_2293;

assign mul_ln205_fu_820_p0 = mul_ln205_fu_820_p00;

assign mul_ln205_fu_820_p00 = m33_reg_2243;

assign mul_ln205_fu_820_p1 = mul_ln205_fu_820_p10;

assign mul_ln205_fu_820_p10 = m32_reg_2237;

assign mul_ln206_fu_870_p0 = mul_ln206_fu_870_p00;

assign mul_ln206_fu_870_p00 = m38_reg_2248;

assign mul_ln206_fu_870_p1 = mul_ln206_fu_870_p10;

assign mul_ln206_fu_870_p10 = m43_reg_2308;

assign mul_ln210_fu_885_p0 = zext_ln205_reg_2303;

assign mul_ln210_fu_885_p1 = zext_ln206_2_fu_861_p1;

assign mul_ln211_fu_937_p0 = mul_ln211_fu_937_p00;

assign mul_ln211_fu_937_p00 = m43_reg_2308;

assign mul_ln211_fu_937_p1 = mul_ln211_fu_937_p10;

assign mul_ln211_fu_937_p10 = m42_reg_2329;

assign mul_ln213_fu_897_p0 = mul_ln213_fu_897_p00;

assign mul_ln213_fu_897_p00 = m34_reg_2278;

assign mul_ln213_fu_897_p1 = zext_ln206_2_fu_861_p1;

assign mul_ln214_fu_914_p0 = mul_ln214_fu_914_p00;

assign mul_ln214_fu_914_p00 = m37_reg_2288;

assign mul_ln214_fu_914_p1 = mul_ln214_fu_914_p10;

assign mul_ln214_fu_914_p10 = m43_reg_2308;

assign mul_ln215_fu_1115_p0 = mul_ln215_fu_1115_p00;

assign mul_ln215_fu_1115_p00 = m36_reg_2283;

assign mul_ln220_fu_966_p0 = mul_ln220_fu_966_p00;

assign mul_ln220_fu_966_p00 = $unsigned(m44_reg_2334);

assign mul_ln221_fu_1016_p0 = sext_ln209_fu_985_p1;

assign mul_ln228_fu_1155_p0 = mul_ln228_fu_1155_p00;

assign mul_ln228_fu_1155_p00 = add_ln233_reg_2410;

assign mul_ln230_fu_1174_p0 = mul_ln230_fu_1174_p00;

assign mul_ln230_fu_1174_p00 = $unsigned(m67_reg_2459);

assign mul_ln231_fu_1187_p0 = mul_ln231_fu_1187_p00;

assign mul_ln231_fu_1187_p00 = m51_reg_2359;

assign mul_ln232_fu_1239_p0 = mul_ln232_fu_1239_p00;

assign mul_ln232_fu_1239_p00 = m53_reg_2449;

assign mul_ln237_fu_1270_p0 = mul_ln237_fu_1270_p00;

assign mul_ln237_fu_1270_p00 = $unsigned(m69_reg_2471);

assign mul_ln239_fu_1292_p0 = mul_ln239_fu_1292_p00;

assign mul_ln239_fu_1292_p00 = $unsigned(m71_reg_2479);

assign mul_ln239_fu_1292_p1 = mul_ln239_fu_1292_p10;

assign mul_ln239_fu_1292_p10 = $unsigned(m69_reg_2471);

assign mul_ln240_fu_1305_p0 = sext_ln237_fu_1261_p1;

assign mul_ln241_fu_1318_p0 = sext_ln237_fu_1261_p1;

assign mul_ln242_fu_1346_p0 = mul_ln242_fu_1346_p00;

assign mul_ln242_fu_1346_p00 = m78_reg_2515;

assign mul_ln242_fu_1346_p1 = mul_ln242_fu_1346_p10;

assign mul_ln242_fu_1346_p10 = m62_reg_2434;

assign mul_ln245_fu_1456_p0 = mul_ln245_fu_1456_p00;

assign mul_ln245_fu_1456_p00 = $unsigned(m71_reg_2479);

assign mul_ln245_fu_1456_p1 = mul_ln245_fu_1456_p10;

assign mul_ln245_fu_1456_p10 = m80_reg_2531;

assign mul_ln246_fu_1378_p0 = mul_ln246_fu_1378_p00;

assign mul_ln246_fu_1378_p00 = m78_reg_2515;

assign mul_ln250_fu_1469_p0 = mul_ln250_fu_1469_p00;

assign mul_ln250_fu_1469_p00 = m80_reg_2531;

assign mul_ln257_fu_1562_p0 = mul_ln257_fu_1562_p00;

assign mul_ln257_fu_1562_p00 = $unsigned(m82_reg_2592);

assign mul_ln257_fu_1562_p1 = mul_ln257_fu_1562_p10;

assign mul_ln257_fu_1562_p10 = m80_reg_2531;

assign mul_ln262_fu_1578_p0 = mul_ln262_fu_1578_p00;

assign mul_ln262_fu_1578_p00 = m98_reg_2610;

assign mul_ln262_fu_1578_p1 = mul_ln262_fu_1578_p10;

assign mul_ln262_fu_1578_p10 = $unsigned(m82_reg_2592);

assign mul_ln263_fu_1594_p0 = mul_ln263_fu_1594_p00;

assign mul_ln263_fu_1594_p00 = m92_reg_2604;

assign mul_ln264_fu_1644_p0 = mul_ln264_fu_1644_p00;

assign mul_ln264_fu_1644_p00 = m100_reg_2647;

assign mul_ln264_fu_1644_p1 = mul_ln264_fu_1644_p10;

assign mul_ln264_fu_1644_p10 = m94_reg_2631;

assign mul_ln265_fu_1518_p0 = mul_ln265_fu_1518_p00;

assign mul_ln265_fu_1518_p00 = $unsigned(m93_reg_2581);

assign mul_ln265_fu_1518_p1 = mul_ln265_fu_1518_p10;

assign mul_ln265_fu_1518_p10 = m86_reg_2553;

assign mul_ln266_fu_1654_p0 = zext_ln262_1_reg_2642;

assign mul_ln266_fu_1654_p1 = mul_ln266_fu_1654_p10;

assign mul_ln266_fu_1654_p10 = m100_reg_2647;

assign mul_ln267_fu_1604_p0 = mul_ln267_fu_1604_p00;

assign mul_ln267_fu_1604_p00 = m98_reg_2610;

assign mul_ln267_fu_1604_p1 = mul_ln267_fu_1604_p10;

assign mul_ln267_fu_1604_p10 = m92_reg_2604;

assign mul_ln270_fu_1787_p0 = sext_ln270_fu_1784_p1;

assign mul_ln270_fu_1787_p1 = sext_ln270_fu_1784_p1;

assign mul_ln272_fu_1743_p0 = mul_ln272_fu_1743_p00;

assign mul_ln272_fu_1743_p00 = m107_reg_2707;

assign mul_ln272_fu_1743_p1 = mul_ln272_fu_1743_p10;

assign mul_ln272_fu_1743_p10 = m103_reg_2616;

assign mul_ln273_fu_1774_p0 = zext_ln273_fu_1771_p1;

assign mul_ln273_fu_1774_p1 = zext_ln273_fu_1771_p1;

assign mul_ln274_fu_1756_p0 = mul_ln274_fu_1756_p00;

assign mul_ln274_fu_1756_p00 = m109_reg_2713;

assign mul_ln274_fu_1756_p1 = mul_ln274_fu_1756_p10;

assign mul_ln274_fu_1756_p10 = m94_reg_2631;

assign mul_ln276_fu_1698_p0 = mul_ln276_fu_1698_p00;

assign mul_ln276_fu_1698_p00 = m100_reg_2647;

assign mul_ln276_fu_1698_p1 = mul_ln276_fu_1698_p10;

assign mul_ln276_fu_1698_p10 = m106_reg_2681;

assign mul_ln279_fu_1803_p0 = mul_ln279_fu_1803_p00;

assign mul_ln279_fu_1803_p00 = m99_reg_2665;

assign mul_ln281_fu_1719_p0 = zext_ln281_fu_1716_p1;

assign mul_ln281_fu_1719_p1 = zext_ln281_fu_1716_p1;

assign mul_ln282_fu_1841_p0 = mul_ln282_fu_1841_p00;

assign mul_ln282_fu_1841_p00 = m107_reg_2707;

assign mul_ln283_fu_1851_p0 = mul_ln283_fu_1851_p00;

assign mul_ln283_fu_1851_p00 = m117_reg_2755;

assign mul_ln283_fu_1851_p1 = mul_ln283_fu_1851_p10;

assign mul_ln283_fu_1851_p10 = m106_reg_2681;

assign mul_ln284_fu_1881_p0 = mul_ln284_fu_1881_p00;

assign mul_ln284_fu_1881_p00 = m118_reg_2765;

assign mul_ln284_fu_1881_p1 = sext_ln279_reg_2745;

assign mul_ln285_fu_1932_p0 = zext_ln285_1_fu_1926_p1;

assign mul_ln285_fu_1932_p1 = mul_ln285_fu_1932_p10;

assign mul_ln285_fu_1932_p10 = m115_reg_2723;

assign mul_ln286_fu_1992_p0 = zext_ln285_1_reg_2810;

assign mul_ln286_fu_1992_p1 = mul_ln286_fu_1992_p10;

assign mul_ln286_fu_1992_p10 = m123_reg_2815;

assign mul_ln289_fu_1945_p0 = zext_ln285_1_fu_1926_p1;

assign mul_ln290_fu_2047_p0 = mul_ln290_fu_2047_p00;

assign mul_ln290_fu_2047_p00 = m118_reg_2765;

assign mul_ln291_fu_1958_p0 = mul_ln291_fu_1958_p00;

assign mul_ln291_fu_1958_p00 = m122_reg_2799;

assign mul_ln291_fu_1958_p1 = mul_ln291_fu_1958_p10;

assign mul_ln291_fu_1958_p10 = $unsigned(m120_reg_2771);

assign mul_ln294_fu_2011_p0 = mul_ln294_fu_2011_p00;

assign mul_ln294_fu_2011_p00 = trunc_ln294_reg_2825;

assign mul_ln294_fu_2011_p1 = mul_ln294_fu_2011_p10;

assign mul_ln294_fu_2011_p10 = trunc_ln294_1_reg_2789;

assign mul_ln299_fu_2063_p0 = mul_ln299_fu_2063_p00;

assign mul_ln299_fu_2063_p00 = m132_reg_2857;

assign mul_ln299_fu_2063_p1 = mul_ln299_fu_2063_p10;

assign mul_ln299_fu_2063_p10 = $unsigned(m120_reg_2771);

assign mul_ln302_fu_2079_p0 = mul_ln302_fu_2079_p00;

assign mul_ln302_fu_2079_p00 = m130_reg_2852;

assign mul_ln302_fu_2079_p1 = mul_ln302_fu_2079_p10;

assign mul_ln302_fu_2079_p10 = m134_reg_2862;

assign mul_ln303_fu_2100_p0 = mul_ln303_fu_2100_p00;

assign mul_ln303_fu_2100_p00 = m128_reg_2872;

assign out_data_0 = $signed(add_ln189_fu_605_p2);

assign out_data_1 = $signed(m35_fu_676_p1);

assign out_data_10 = $signed(m112_fu_1762_p1);

assign out_data_11 = $signed(m119_fu_1725_p1);

assign out_data_12 = $signed(m129_fu_1964_p1);

assign out_data_13 = $signed(m136_fu_1914_p1);

assign out_data_14 = $signed(grp_fu_2159_p3);

assign out_data_15 = $signed(m140_fu_2085_p1);

assign out_data_16 = $signed(m141_fu_2106_p1);

assign out_data_17 = $signed(m142_fu_2143_p2);

assign out_data_18 = $signed(m144_fu_2118_p3);

assign out_data_2 = $signed(m46_fu_927_p2);

assign out_data_3 = $signed(m47_fu_988_p2);

assign out_data_4 = $signed(add_ln226_fu_1080_p2);

assign out_data_5 = $signed(m68_fu_1180_p1);

assign out_data_6 = $signed(m75_fu_1276_p1);

assign out_data_7 = $signed(m83_fu_1462_p1);

assign out_data_8 = $signed(m91_fu_1479_p2);

assign out_data_9 = mul_ln259_fu_1501_p2;

assign sext_ln183_fu_473_p1 = $signed(m19_reg_2172);

assign sext_ln187_fu_588_p1 = in14_fu_576_p1;

assign sext_ln189_fu_602_p1 = $signed(m24_reg_2199);

assign sext_ln191_1_fu_632_p1 = $signed(in11_fu_568_p1);

assign sext_ln191_fu_628_p1 = in18_fu_584_p1;

assign sext_ln204_fu_846_p1 = $signed(m30_reg_2273);

assign sext_ln209_fu_985_p1 = m44_reg_2334;

assign sext_ln216_1_fu_993_p1 = m41_reg_2322;

assign sext_ln219_fu_1005_p1 = m45_reg_2342;

assign sext_ln223_1_fu_1038_p1 = m59_fu_1022_p1;

assign sext_ln223_fu_1035_p1 = m50_reg_2375;

assign sext_ln226_1_fu_1077_p1 = $signed(m52_reg_2364);

assign sext_ln226_fu_1073_p1 = $signed(m55_fu_1001_p2);

assign sext_ln233_fu_1197_p1 = m58_reg_2391;

assign sext_ln235_1_fu_1252_p1 = $signed(m66_reg_2466);

assign sext_ln235_fu_1249_p1 = m69_reg_2471;

assign sext_ln237_fu_1261_p1 = m69_reg_2471;

assign sext_ln258_1_fu_1617_p1 = $signed(m84_reg_2543);

assign sext_ln258_fu_1614_p1 = m89_reg_2558;

assign sext_ln270_fu_1784_p1 = m105_reg_2659;

assign sext_ln279_fu_1797_p1 = m111_reg_2733;

assign sext_ln287_fu_1861_p1 = $signed(m113_reg_2702);

assign shl_ln_fu_1890_p3 = {{m111_reg_2733}, {1'd0}};

assign trunc_ln187_fu_592_p1 = in_data_13[4:0];

assign trunc_ln188_fu_550_p1 = in_data_14[2:0];

assign trunc_ln195_fu_642_p1 = in_data_16[9:0];

assign trunc_ln200_fu_486_p1 = mul_ln183_fu_476_p2[4:0];

assign trunc_ln201_1_fu_693_p1 = mul_ln190_fu_618_p2[2:0];

assign trunc_ln201_fu_689_p1 = m29_fu_636_p2[2:0];

assign trunc_ln204_fu_697_p1 = m29_fu_636_p2[7:0];

assign trunc_ln207_fu_830_p1 = mul_ln196_fu_755_p2[7:0];

assign trunc_ln208_fu_701_p1 = mul_ln190_fu_618_p2[4:0];

assign trunc_ln212_fu_813_p1 = mul_ln202_fu_807_p2[6:0];

assign trunc_ln216_fu_958_p1 = mul_ln211_fu_937_p2[3:0];

assign trunc_ln218_fu_1125_p1 = mul_ln215_fu_1115_p2[3:0];

assign trunc_ln222_1_fu_1026_p1 = m54_fu_996_p2[1:0];

assign trunc_ln222_fu_962_p1 = m50_fu_950_p2[1:0];

assign trunc_ln225_fu_976_p1 = m50_fu_950_p2[2:0];

assign trunc_ln227_1_fu_903_p1 = mul_ln213_fu_897_p2[9:0];

assign trunc_ln227_fu_890_p1 = mul_ln210_fu_885_p2[9:0];

assign trunc_ln248_fu_1245_p1 = mul_ln232_fu_1239_p2[4:0];

assign trunc_ln252_1_fu_1328_p1 = mul_ln241_fu_1318_p2[7:0];

assign trunc_ln252_fu_1416_p1 = mul_ln243_fu_1362_p2[7:0];

assign trunc_ln253_1_fu_1429_p1 = m87_fu_1406_p2[3:0];

assign trunc_ln253_fu_1425_p1 = mul_ln246_fu_1378_p2[3:0];

assign trunc_ln255_fu_1433_p1 = m87_fu_1406_p2[9:0];

assign trunc_ln256_1_fu_1443_p1 = m85_fu_1391_p2[7:0];

assign trunc_ln256_fu_1475_p1 = mul_ln250_fu_1469_p2[7:0];

assign trunc_ln268_1_fu_1528_p1 = mul_ln250_fu_1469_p2[6:0];

assign trunc_ln268_fu_1568_p1 = mul_ln257_fu_1562_p2[6:0];

assign trunc_ln269_1_fu_1667_p1 = mul_ln266_fu_1654_p2[7:0];

assign trunc_ln269_fu_1532_p1 = m98_fu_1508_p2[7:0];

assign trunc_ln271_1_fu_1675_p1 = add_ln258_fu_1620_p2[6:0];

assign trunc_ln271_fu_1671_p1 = mul_ln264_fu_1644_p2[6:0];

assign trunc_ln275_fu_1600_p1 = mul_ln263_fu_1594_p2[8:0];

assign trunc_ln280_fu_1809_p1 = mul_ln279_fu_1803_p2[9:0];

assign trunc_ln294_1_fu_1870_p1 = m125_fu_1864_p2[3:0];

assign trunc_ln294_fu_1968_p1 = mul_ln289_fu_1945_p2[3:0];

assign trunc_ln295_fu_1874_p1 = m125_fu_1864_p2[7:0];

assign trunc_ln297_fu_1976_p1 = mul_ln289_fu_1945_p2[7:0];

assign trunc_ln300_1_fu_1817_p1 = mul_ln279_fu_1803_p2[8:0];

assign trunc_ln300_2_fu_2037_p1 = m130_fu_2001_p2[8:0];

assign trunc_ln300_fu_1897_p1 = mul_ln284_fu_1881_p2[8:0];

assign trunc_ln306_fu_1980_p1 = m133_fu_1972_p2[6:0];

assign zext_ln205_fu_817_p1 = m33_reg_2243;

assign zext_ln206_2_fu_861_p1 = m43_reg_2308;

assign zext_ln262_1_fu_1575_p1 = m98_reg_2610;

assign zext_ln273_fu_1771_p1 = m110_reg_2728;

assign zext_ln281_fu_1716_p1 = $unsigned(m104_reg_2675);

assign zext_ln285_1_fu_1926_p1 = m122_reg_2799;

always @ (posedge ap_clk) begin
    zext_ln205_reg_2303[19:10] <= 10'b0000000000;
    zext_ln262_1_reg_2642[19:10] <= 10'b0000000000;
    zext_ln285_1_reg_2810[16:10] <= 7'b0000000;
end

endmodule //case_1
