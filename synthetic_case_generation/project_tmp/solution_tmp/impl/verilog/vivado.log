#-----------------------------------------------------------
# Vivado v2024.2 (64-bit)
# SW Build 5239630 on Fri Nov 08 22:34:34 MST 2024
# IP Build 5239520 on Sun Nov 10 16:12:51 MST 2024
# SharedData Build 5239561 on Fri Nov 08 14:39:27 MST 2024
# Start of session at: Tue Sep 16 17:31:32 2025
# Process ID         : 102880
# Current directory  : /home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog
# Command line       : vivado -mode batch -source run_vivado.tcl
# Log file           : /home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog/vivado.log
# Journal file       : /home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog/vivado.jou
# Running On         : DESKTOP-S15BKKL
# Platform           : Ubuntu
# Operating System   : Ubuntu 22.04.5 LTS
# Processor Detail   : Intel(R) Core(TM) i5-8400 CPU @ 2.80GHz
# CPU Frequency      : 2808.008 MHz
# CPU Physical cores : 6
# CPU Logical cores  : 6
# Host memory        : 4050 MB
# Swap memory        : 1073 MB
# Total Virtual      : 5124 MB
# Available Virtual  : 4176 MB
#-----------------------------------------------------------
source run_vivado.tcl
# source ./settings.tcl
## set top_module case_9
## set language verilog
## set family zynq
## set device xc7z020
## set package -clg484
## set speed -1
## set clock ap_clk
## set fsm_ext "off"
## set add_io_buffers false 
# source -notrace ./extraction.tcl
# set vivado_proj_name project
# set vivado_proj_dir .
# set target_device "${device}${package}${speed}"
# set target_clk_period_ns "10.000"
# set target_clk_freq_hz [expr {floor(1000 / $target_clk_period_ns) * 1000000}]
# set other_clks_freq_hz {}
# set ip_vlnv xilinx.com:hls:case_9:1.0
# set ip_repo_path ../ip
# set bd_design_name bd_0
# set bd_inst_name hls_inst
# set bd_props {}
# set has_synth true
# set synth_design_args {-directive sdx_optimization_effort_high}
# set synth_dcp ""
# set synth_props {}
# set has_impl 1
# set impl_props {}
# set report_options [dict create]
# dict set report_options report_level 2
# dict set report_options report_max_paths 10
# dict set report_options stdout_hls_reports 1
# dict set report_options stdout_vivado_reports 0
# dict set report_options hls_project project_tmp
# dict set report_options hls_solution solution_tmp
# dict set report_options has_synth $has_synth
# dict set report_options has_impl $has_impl
# dict set report_options vivado_reportbasename $top_module
# dict set report_options vivado_reportdir ./report
# dict set report_options hls_impl_dir ..
# dict set report_options hls_reportdir ../report/$language
# dict set report_options target_clk_period $target_clk_period_ns
# dict set report_options target_device $target_device
# dict set report_options language $language
# dict set report_options clock_name $clock
# dict set report_options error_if_impl_timing_fails false
# dict set report_options topmodule "case_9"
# dict set report_options funcmodules {}
# dict set report_options bindmodules {case_9_mul_6s_6s_6_1_1 case_9_mul_2s_2s_3_1_1 case_9_mul_8s_7s_10_1_1 case_9_mul_12s_8s_12_1_1 case_9_mul_3s_3s_3_1_1 case_9_mul_15s_12s_15_1_1 case_9_mul_2s_2s_2_1_1 case_9_mul_10s_3s_11_1_1 case_9_mul_5s_2s_5_1_1 case_9_mul_15s_10s_16_1_1 case_9_mul_13s_11s_13_1_1 case_9_mul_16s_13s_16_1_1 case_9_mul_5s_5s_5_1_1 case_9_mul_6s_5s_6_1_1 case_9_mul_7s_6s_7_1_1 case_9_mul_4s_4s_4_1_1 case_9_mul_7s_5s_7_1_1 case_9_mul_5s_4s_6_1_1 case_9_mul_7s_5s_8_1_1 case_9_mul_2s_2s_4_1_1 case_9_mul_4s_2s_6_1_1 case_9_mul_7s_4s_9_1_1 case_9_mul_4s_4s_5_1_1 case_9_mul_3s_2s_3_1_1 case_9_mul_6s_2s_6_1_1 case_9_mul_4s_2s_4_1_1 case_9_mul_9s_5s_10_1_1 case_9_mul_4s_3s_4_1_1 case_9_mul_4s_4s_8_1_1 case_9_mul_8s_6s_12_1_1 case_9_mul_4s_3s_7_1_1 case_9_mul_7s_3s_10_1_1 case_9_mul_7s_3s_7_1_1 case_9_mul_7s_7s_7_1_1 case_9_mul_6s_6s_7_1_1 case_9_mul_7s_7s_10_1_1 case_9_mul_6s_4s_8_1_1 case_9_mul_6s_3s_7_1_1 case_9_mul_8s_6s_8_1_1 case_9_mul_7s_6s_13_1_1 case_9_mul_7s_4s_7_1_1 case_9_mul_7s_4s_10_1_1 case_9_mul_10s_4s_10_1_1 case_9_mul_10s_7s_16_1_1 case_9_mul_12s_10s_12_1_1 case_9_mul_9s_6s_9_1_1 case_9_mul_10s_10s_10_1_1 case_9_mul_9s_4s_11_1_1 case_9_mul_10s_9s_10_1_1 case_9_mul_13s_9s_13_1_1 case_9_mul_10s_6s_10_1_1 case_9_mul_8s_8s_8_1_1 case_9_mul_13s_10s_13_1_1 case_9_mul_11s_7s_11_1_1 case_9_mul_14s_4s_14_1_1 case_9_mul_8s_7s_8_1_1 case_9_mul_9s_8s_9_1_1 case_9_mul_9s_8s_17_1_1 case_9_mul_7s_7s_12_1_1 case_9_mul_7s_6s_8_1_1 case_9_mul_11s_4s_11_1_1 case_9_mul_11s_11s_11_1_1 case_9_mul_9s_7s_9_1_1 case_9_mul_9s_6s_11_1_1 case_9_mul_11s_6s_11_1_1 case_9_mul_9s_9s_9_1_1 case_9_mul_9s_6s_10_1_1 case_9_mac_muladd_6s_6s_6s_6_4_1 case_9_mac_muladd_5s_5s_5s_5_4_1 case_9_am_addmul_6ns_6ns_6s_6_4_1 case_9_mac_muladd_6s_6s_4s_6_4_1}
# dict set report_options max_module_depth 5
# create_project $vivado_proj_name $vivado_proj_dir -part $target_device -force
# set_property target_language $language [current_project]
# if { ![file exists $ip_repo_path] } {
#   error "Cannot find packaged HLS IP"
# }
# set_property ip_repo_paths [file normalize $ip_repo_path] [current_project]
# update_ip_catalog
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/ip'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/xilinx/Vivado/2024.2/data/ip'.
# create_bd_design bd_0
Wrote  : </home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog/project.srcs/sources_1/bd/bd_0/bd_0.bd> 
# set cell_inst [create_bd_cell -type ip -vlnv $ip_vlnv $bd_inst_name]
# if { [llength $bd_props] } { 
#   set_property -dict $bd_props $cell_inst 
# }
# make_bd_pins_external $cell_inst
# make_bd_intf_pins_external $cell_inst
# set bd_clk_ports [get_bd_ports -filter {TYPE==clk}]
# if { $target_clk_freq_hz ne "" } { 
#   foreach bd_clk_port $bd_clk_ports {
#     # Remove "_0" suffix from BD ports & interfaces so they match IP ports 
#     set clk_name [regsub {_0$} [get_property name $bd_clk_port] {}]
#     set port_freq_hz $target_clk_freq_hz
#     if { [dict exists $other_clks_freq_hz $clk_name] } {
#         set port_freq_hz [dict get $other_clks_freq_hz $clk_name]
#     }
#     set_property CONFIG.FREQ_HZ $port_freq_hz $bd_clk_port
#   }
# }
# foreach bd_port [get_bd_intf_ports] {
#   set_property name [regsub {_0$} [get_property name $bd_port] {}] $bd_port
# }
# foreach bd_port [get_bd_ports -filter {INTF!=TRUE}] {
#   set_property name [regsub {_0$} [get_property name $bd_port] {}] $bd_port
# }
# set s_axi_addr_width_min 32
WARNING: [BD 5-233] No interface ports matched 'get_bd_intf_ports -filter {MODE == "Slave" && VLNV =~ "xilinx.com:interface:aximm_rtl:*"}'
# foreach bd_port [get_bd_intf_ports -filter {MODE == "Slave" && VLNV =~ "xilinx.com:interface:aximm_rtl:*"}] {
#   set bd_port_addr_width [get_property CONFIG.ADDR_WIDTH $bd_port]
#   if { $bd_port_addr_width < $s_axi_addr_width_min } {
#     puts "INFO: Updating $bd_port CONFIG.ADDR_WIDTH to $s_axi_addr_width_min"
#     set_property CONFIG.ADDR_WIDTH $s_axi_addr_width_min $bd_port
#   }
# }
# set_msg_config -id {[BD 41-1265]} -severity {CRITICAL WARNING} -new_severity {INFO}
# assign_bd_address
INFO: [BD 41-3093] Triggering Legacy Auto Assign Algorithm
Wrote  : </home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog/project.srcs/sources_1/bd/bd_0/bd_0.bd> 
Verilog Output written to : /home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog/project.gen/sources_1/bd/bd_0/synth/bd_0.v
Verilog Output written to : /home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog/project.gen/sources_1/bd/bd_0/sim/bd_0.v
Verilog Output written to : /home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog/project.gen/sources_1/bd/bd_0/hdl/bd_0_wrapper.v
# set toprtl [make_wrapper -files [get_files ${bd_design_name}.bd] -top]
# add_files -norecurse $toprtl
# set top_inst_name [file root [file tail $toprtl]]
# puts "Using BD top: $top_inst_name"
Using BD top: bd_0_wrapper
# set xdc_files [glob -nocomplain ./*.xdc]
# if { [llength $xdc_files] } {
#     add_files -fileset constrs_1 -norecurse $xdc_files
# }
# launch_runs synth_1 -scripts_only
INFO: [BD 41-1662] The design 'bd_0.bd' is already validated. Therefore parameter propagation will not be re-run.
Verilog Output written to : /home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog/project.gen/sources_1/bd/bd_0/synth/bd_0.v
Verilog Output written to : /home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog/project.gen/sources_1/bd/bd_0/sim/bd_0.v
Verilog Output written to : /home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog/project.gen/sources_1/bd/bd_0/hdl/bd_0_wrapper.v
INFO: [BD 41-1029] Generation completed for the IP Integrator block hls_inst .
Exporting to file /home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog/project.gen/sources_1/bd/bd_0/hw_handoff/bd_0.hwh
Generated Hardware Definition File /home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog/project.gen/sources_1/bd/bd_0/synth/bd_0.hwdef
INFO: [IP_Flow 19-6924] IPCACHE: Running cache check for IP inst: bd_0_hls_inst_0
WARNING: [Vivado 12-7122] Auto Incremental Compile:: No reference checkpoint was found in run synth_1. Auto-incremental flow will not be run, the standard flow will be run instead.
launch_runs: Time (s): cpu = 00:00:07 ; elapsed = 00:00:08 . Memory (MB): peak = 1582.777 ; gain = 88.043 ; free physical = 1300 ; free virtual = 3606
# foreach run [get_runs -filter {IS_SYNTHESIS == 1}] {
#   reset_run [get_runs $run]
# }
# set_property XPM_LIBRARIES {XPM_MEMORY XPM_FIFO} [current_project]
# hls_vivado_reports_setup $report_options
TIMESTAMP: HLS-REPORT: initialize report directories: 2025-09-16 17:31:50 KST
# if { $has_synth || $has_impl } {
#   # synth properties setting
#   set_property -name {STEPS.SYNTH_DESIGN.ARGS.MORE OPTIONS} -value {-mode out_of_context} -objects [get_runs synth_1]
#   set ip_inst [get_ips -quiet ${bd_design_name}*${bd_inst_name}*]
#   if { ![llength $ip_inst] } {
#       error "Cannot find HLS IP instance: ${bd_design_name}*${bd_inst_name}*"
#   }
#   set synth_run [get_runs -filter {IS_SYNTHESIS == 1} ${ip_inst}*]
#   if { ![llength $synth_run] } {
#       error "Cannot find synth run for HLS IP: ${ip_inst}*"
#   }
# 
#   if { [llength $synth_design_args] } {
#       set_property -name {STEPS.SYNTH_DESIGN.ARGS.MORE OPTIONS} -value $synth_design_args -objects $synth_run
#   }
# 
#   if { [llength $synth_props] } {
#     set_property -dict $synth_props $synth_run
#   }
# 
#   # launch run synth
#   launch_runs synth_1
#   wait_on_run synth_1
#   # synth reports
#   hls_vivado_reports_synth synth_1 $report_options
#   if { $synth_dcp ne "" } {
#     file mkdir [file dirname $synth_dcp]
#     set run_dcp [glob -nocomplain [get_property DIRECTORY $synth_run]/*.dcp]
#     if { [llength $run_dcp] != 1 } { error "Cannot find single dcp file for run $synth_run" }
#     file copy -force $run_dcp $synth_dcp
#   }
# }
INFO: [IP_Flow 19-6924] IPCACHE: Running cache check for IP inst: bd_0_hls_inst_0
WARNING: [Vivado 12-7122] Auto Incremental Compile:: No reference checkpoint was found in run synth_1. Auto-incremental flow will not be run, the standard flow will be run instead.
[Tue Sep 16 17:31:51 2025] Launched bd_0_hls_inst_0_synth_1...
Run output will be captured here: /home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog/project.runs/bd_0_hls_inst_0_synth_1/runme.log
[Tue Sep 16 17:31:51 2025] Launched synth_1...
Run output will be captured here: /home/hyeon/ironman/IronMan/synthetic_case_generation/project_tmp/solution_tmp/impl/verilog/project.runs/synth_1/runme.log
[Tue Sep 16 17:31:51 2025] Waiting for synth_1 to finish...
INFO: [Common 17-41] Interrupt caught. Command should exit soon.
INFO: [Common 17-41] Interrupt caught. Command should exit soon.
