// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="case_8_case_8,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.270000,HLS_SYN_LAT=13,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=665,HLS_SYN_LUT=1911,HLS_VERSION=2024_2}" *)

module case_8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_data_0,
        in_data_1,
        in_data_2,
        in_data_3,
        in_data_4,
        in_data_5,
        in_data_6,
        in_data_7,
        in_data_8,
        in_data_9,
        in_data_10,
        in_data_11,
        in_data_12,
        in_data_13,
        in_data_14,
        in_data_15,
        in_data_16,
        in_data_17,
        in_data_18,
        in_data_19,
        out_data_0,
        out_data_0_ap_vld,
        out_data_1,
        out_data_1_ap_vld,
        out_data_2,
        out_data_2_ap_vld,
        out_data_3,
        out_data_3_ap_vld,
        out_data_4,
        out_data_4_ap_vld,
        out_data_5,
        out_data_5_ap_vld,
        out_data_6,
        out_data_6_ap_vld,
        out_data_7,
        out_data_7_ap_vld,
        out_data_8,
        out_data_8_ap_vld,
        out_data_9,
        out_data_9_ap_vld,
        out_data_10,
        out_data_10_ap_vld,
        out_data_11,
        out_data_11_ap_vld,
        out_data_12,
        out_data_12_ap_vld,
        out_data_13,
        out_data_13_ap_vld,
        out_data_14,
        out_data_14_ap_vld,
        out_data_15,
        out_data_15_ap_vld
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] in_data_0;
input  [15:0] in_data_1;
input  [15:0] in_data_2;
input  [15:0] in_data_3;
input  [15:0] in_data_4;
input  [15:0] in_data_5;
input  [15:0] in_data_6;
input  [15:0] in_data_7;
input  [15:0] in_data_8;
input  [15:0] in_data_9;
input  [15:0] in_data_10;
input  [15:0] in_data_11;
input  [15:0] in_data_12;
input  [15:0] in_data_13;
input  [15:0] in_data_14;
input  [15:0] in_data_15;
input  [15:0] in_data_16;
input  [15:0] in_data_17;
input  [15:0] in_data_18;
input  [15:0] in_data_19;
output  [15:0] out_data_0;
output   out_data_0_ap_vld;
output  [15:0] out_data_1;
output   out_data_1_ap_vld;
output  [15:0] out_data_2;
output   out_data_2_ap_vld;
output  [15:0] out_data_3;
output   out_data_3_ap_vld;
output  [15:0] out_data_4;
output   out_data_4_ap_vld;
output  [15:0] out_data_5;
output   out_data_5_ap_vld;
output  [15:0] out_data_6;
output   out_data_6_ap_vld;
output  [15:0] out_data_7;
output   out_data_7_ap_vld;
output  [15:0] out_data_8;
output   out_data_8_ap_vld;
output  [15:0] out_data_9;
output   out_data_9_ap_vld;
output  [15:0] out_data_10;
output   out_data_10_ap_vld;
output  [15:0] out_data_11;
output   out_data_11_ap_vld;
output  [15:0] out_data_12;
output   out_data_12_ap_vld;
output  [15:0] out_data_13;
output   out_data_13_ap_vld;
output  [15:0] out_data_14;
output   out_data_14_ap_vld;
output  [15:0] out_data_15;
output   out_data_15_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_data_0_ap_vld;
reg out_data_1_ap_vld;
reg out_data_2_ap_vld;
reg out_data_3_ap_vld;
reg out_data_4_ap_vld;
reg out_data_5_ap_vld;
reg out_data_6_ap_vld;
reg out_data_7_ap_vld;
reg out_data_8_ap_vld;
reg out_data_9_ap_vld;
reg out_data_10_ap_vld;
reg out_data_11_ap_vld;
reg out_data_12_ap_vld;
reg out_data_13_ap_vld;
reg out_data_14_ap_vld;
reg out_data_15_ap_vld;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] in5_fu_286_p1;
reg   [6:0] in5_reg_1128;
wire  signed [6:0] in20_fu_290_p1;
reg  signed [6:0] in20_reg_1133;
wire  signed [5:0] m21_fu_302_p2;
reg  signed [5:0] m21_reg_1139;
wire   [4:0] trunc_ln162_1_fu_308_p1;
reg   [4:0] trunc_ln162_1_reg_1144;
wire  signed [7:0] in18_fu_316_p1;
reg  signed [7:0] in18_reg_1149;
wire    ap_CS_fsm_state2;
wire  signed [6:0] m22_fu_332_p2;
reg  signed [6:0] m22_reg_1156;
wire   [7:0] mul_ln147_fu_402_p2;
reg   [7:0] mul_ln147_reg_1161;
wire  signed [6:0] trunc_ln143_2_fu_408_p1;
reg  signed [6:0] trunc_ln143_2_reg_1166;
wire   [10:0] trunc_ln148_fu_434_p1;
reg   [10:0] trunc_ln148_reg_1171;
wire  signed [6:0] m38_fu_465_p2;
reg  signed [6:0] m38_reg_1176;
wire  signed [4:0] trunc_ln153_fu_470_p1;
reg  signed [4:0] trunc_ln153_reg_1183;
wire  signed [4:0] trunc_ln153_1_fu_474_p1;
reg  signed [4:0] trunc_ln153_1_reg_1188;
wire   [4:0] trunc_ln162_fu_478_p1;
reg   [4:0] trunc_ln162_reg_1193;
wire  signed [6:0] trunc_ln155_fu_482_p1;
reg  signed [6:0] trunc_ln155_reg_1198;
wire  signed [6:0] trunc_ln155_1_fu_486_p1;
reg  signed [6:0] trunc_ln155_1_reg_1203;
wire  signed [7:0] trunc_ln178_1_fu_490_p1;
reg  signed [7:0] trunc_ln178_1_reg_1208;
wire  signed [6:0] m30_fu_518_p2;
reg  signed [6:0] m30_reg_1213;
wire    ap_CS_fsm_state3;
wire  signed [7:0] m34_fu_531_p2;
reg  signed [7:0] m34_reg_1218;
wire   [4:0] m40_fu_536_p2;
reg  signed [4:0] m40_reg_1224;
wire  signed [6:0] m42_fu_540_p2;
reg  signed [6:0] m42_reg_1229;
wire  signed [3:0] m44_fu_552_p2;
reg  signed [3:0] m44_reg_1235;
wire  signed [5:0] trunc_ln160_fu_558_p1;
reg  signed [5:0] trunc_ln160_reg_1242;
wire  signed [10:0] m35_fu_588_p1;
reg  signed [10:0] m35_reg_1247;
wire    ap_CS_fsm_state4;
wire  signed [10:0] sext_ln159_1_fu_595_p1;
reg  signed [10:0] sext_ln159_1_reg_1254;
wire  signed [4:0] m57_fu_612_p1;
reg  signed [4:0] m57_reg_1259;
wire  signed [7:0] trunc_ln178_fu_616_p1;
reg  signed [7:0] trunc_ln178_reg_1266;
wire  signed [6:0] trunc_ln171_1_fu_620_p1;
reg  signed [6:0] trunc_ln171_1_reg_1271;
wire  signed [10:0] m43_fu_629_p2;
reg  signed [10:0] m43_reg_1276;
wire    ap_CS_fsm_state5;
wire  signed [10:0] m45_fu_636_p2;
reg  signed [10:0] m45_reg_1281;
wire  signed [7:0] mul_ln178_fu_641_p2;
reg  signed [7:0] mul_ln178_reg_1287;
wire  signed [9:0] trunc_ln168_fu_645_p1;
reg  signed [9:0] trunc_ln168_reg_1292;
wire  signed [6:0] trunc_ln171_fu_649_p1;
reg  signed [6:0] trunc_ln171_reg_1297;
wire  signed [2:0] trunc_ln200_fu_653_p1;
reg  signed [2:0] trunc_ln200_reg_1302;
wire  signed [10:0] m50_fu_680_p2;
reg  signed [10:0] m50_reg_1307;
wire    ap_CS_fsm_state6;
wire  signed [10:0] trunc_ln164_fu_685_p1;
reg  signed [10:0] trunc_ln164_reg_1312;
wire  signed [10:0] mul_ln183_fu_689_p2;
reg  signed [10:0] mul_ln183_reg_1317;
wire   [9:0] m55_fu_698_p2;
reg   [9:0] m55_reg_1322;
wire   [10:0] m56_fu_703_p2;
reg   [10:0] m56_reg_1327;
wire  signed [6:0] m58_fu_707_p2;
reg  signed [6:0] m58_reg_1332;
wire   [9:0] trunc_ln172_fu_711_p1;
reg   [9:0] trunc_ln172_reg_1339;
wire  signed [9:0] trunc_ln174_fu_715_p1;
reg  signed [9:0] trunc_ln174_reg_1344;
wire  signed [4:0] trunc_ln176_fu_719_p1;
reg  signed [4:0] trunc_ln176_reg_1349;
wire  signed [7:0] trunc_ln178_2_fu_723_p1;
reg  signed [7:0] trunc_ln178_2_reg_1354;
wire  signed [5:0] trunc_ln180_1_fu_727_p1;
reg  signed [5:0] trunc_ln180_1_reg_1359;
wire   [2:0] mul_ln200_fu_735_p2;
reg   [2:0] mul_ln200_reg_1364;
wire   [2:0] trunc_ln200_2_fu_740_p1;
reg   [2:0] trunc_ln200_2_reg_1369;
wire   [10:0] m51_fu_744_p2;
reg   [10:0] m51_reg_1374;
wire    ap_CS_fsm_state7;
wire  signed [8:0] m52_fu_754_p2;
reg  signed [8:0] m52_reg_1379;
wire  signed [7:0] trunc_ln186_fu_769_p1;
reg  signed [7:0] trunc_ln186_reg_1384;
wire  signed [7:0] trunc_ln186_1_fu_773_p1;
reg  signed [7:0] trunc_ln186_1_reg_1389;
wire  signed [4:0] m63_fu_780_p2;
reg  signed [4:0] m63_reg_1394;
wire  signed [6:0] trunc_ln179_fu_785_p1;
reg  signed [6:0] trunc_ln179_reg_1400;
wire   [5:0] m72_fu_808_p2;
reg  signed [5:0] m72_reg_1405;
wire  signed [9:0] m74_fu_817_p2;
reg  signed [9:0] m74_reg_1410;
wire  signed [6:0] trunc_ln189_fu_823_p1;
reg  signed [6:0] trunc_ln189_reg_1416;
wire  signed [10:0] trunc_ln190_fu_827_p1;
reg  signed [10:0] trunc_ln190_reg_1421;
wire  signed [4:0] trunc_ln195_fu_831_p1;
reg  signed [4:0] trunc_ln195_reg_1426;
wire  signed [8:0] trunc_ln173_fu_856_p1;
reg  signed [8:0] trunc_ln173_reg_1431;
wire    ap_CS_fsm_state8;
wire  signed [7:0] mul_ln186_fu_860_p2;
reg  signed [7:0] mul_ln186_reg_1436;
wire  signed [6:0] m62_fu_864_p1;
reg  signed [6:0] m62_reg_1441;
wire  signed [10:0] m69_fu_874_p2;
reg  signed [10:0] m69_reg_1446;
wire   [10:0] m70_fu_879_p2;
reg   [10:0] m70_reg_1451;
wire  signed [10:0] mul_ln190_fu_884_p2;
reg  signed [10:0] mul_ln190_reg_1456;
wire   [8:0] trunc_ln193_fu_889_p1;
reg   [8:0] trunc_ln193_reg_1461;
wire  signed [6:0] m66_fu_933_p2;
reg  signed [6:0] m66_reg_1466;
wire    ap_CS_fsm_state9;
wire  signed [5:0] trunc_ln180_fu_937_p1;
reg  signed [5:0] trunc_ln180_reg_1471;
wire  signed [7:0] sext_ln186_fu_941_p1;
reg  signed [7:0] sext_ln186_reg_1477;
wire  signed [7:0] m73_fu_944_p2;
reg  signed [7:0] m73_reg_1482;
wire  signed [5:0] trunc_ln203_fu_953_p1;
reg  signed [5:0] trunc_ln203_reg_1488;
wire   [8:0] m80_fu_957_p2;
reg  signed [8:0] m80_reg_1493;
wire  signed [10:0] m84_fu_962_p2;
reg  signed [10:0] m84_reg_1498;
wire  signed [9:0] trunc_ln199_fu_967_p1;
reg  signed [9:0] trunc_ln199_reg_1503;
wire   [4:0] trunc_ln204_fu_971_p1;
reg   [4:0] trunc_ln204_reg_1508;
wire  signed [4:0] trunc_ln206_1_fu_975_p1;
reg  signed [4:0] trunc_ln206_1_reg_1513;
wire  signed [6:0] m76_fu_979_p2;
reg  signed [6:0] m76_reg_1518;
wire    ap_CS_fsm_state10;
wire  signed [7:0] mul_ln198_fu_983_p2;
reg  signed [7:0] mul_ln198_reg_1523;
wire  signed [5:0] trunc_ln194_fu_987_p1;
reg  signed [5:0] trunc_ln194_reg_1528;
wire  signed [9:0] m86_fu_991_p2;
reg  signed [9:0] m86_reg_1533;
wire  signed [4:0] trunc_ln206_fu_1007_p1;
reg  signed [4:0] trunc_ln206_reg_1538;
wire  signed [7:0] mul_ln198_1_fu_1023_p2;
reg  signed [7:0] mul_ln198_1_reg_1548;
wire    ap_CS_fsm_state11;
wire  signed [5:0] mul_ln203_1_fu_1028_p2;
reg  signed [5:0] mul_ln203_1_reg_1553;
wire  signed [7:0] mul_ln198_2_fu_1076_p2;
reg  signed [7:0] mul_ln198_2_reg_1558;
wire    ap_CS_fsm_state12;
wire  signed [5:0] mul_ln203_fu_1080_p2;
reg  signed [5:0] mul_ln203_reg_1563;
wire  signed [5:0] mul_ln203_2_fu_1084_p2;
reg  signed [5:0] mul_ln203_2_reg_1568;
wire   [7:0] m85_fu_1088_p2;
reg  signed [7:0] m85_reg_1573;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire  signed [5:0] m21_fu_302_p0;
wire  signed [5:0] m21_fu_302_p1;
wire  signed [6:0] m22_fu_332_p0;
wire  signed [6:0] m22_fu_332_p1;
wire  signed [8:0] in10_fu_312_p1;
wire  signed [6:0] m23_fu_345_p1;
wire  signed [9:0] sext_ln136_1_fu_342_p1;
wire  signed [3:0] in19_fu_320_p1;
wire  signed [10:0] m24_fu_359_p0;
wire  signed [7:0] sext_ln138_fu_365_p1;
wire  signed [9:0] m26_fu_378_p0;
wire  signed [6:0] m26_fu_378_p1;
wire  signed [8:0] m27_fu_392_p0;
wire  signed [8:0] m27_fu_392_p1;
wire  signed [7:0] mul_ln147_fu_402_p0;
wire  signed [7:0] m25_fu_368_p2;
wire  signed [4:0] mul_ln145_fu_420_p0;
wire   [4:0] mul_ln145_fu_420_p2;
wire   [9:0] m26_fu_378_p2;
wire  signed [10:0] sext_ln149_1_fu_441_p1;
wire  signed [10:0] sext_ln149_fu_438_p1;
wire  signed [5:0] m32_fu_426_p3;
wire  signed [5:0] m37_fu_455_p0;
wire   [10:0] m37_fu_455_p2;
wire   [9:0] m23_fu_345_p2;
wire   [10:0] m24_fu_359_p2;
wire   [8:0] m27_fu_392_p2;
wire   [10:0] add_ln149_fu_445_p2;
wire   [2:0] in15_fu_514_p1;
wire  signed [7:0] sext_ln146_fu_522_p1;
wire   [7:0] add_ln147_fu_526_p2;
wire  signed [3:0] m44_fu_552_p0;
wire  signed [3:0] m44_fu_552_p1;
wire  signed [6:0] m48_fu_565_p0;
wire  signed [11:0] sext_ln161_fu_562_p1;
wire  signed [6:0] m48_fu_565_p1;
wire   [11:0] m48_fu_565_p2;
wire   [10:0] mul_ln148_fu_582_p0;
wire   [12:0] mul_ln148_fu_582_p2;
wire   [10:0] mul_ln159_fu_598_p2;
wire   [5:0] m47_fu_607_p2;
wire  signed [8:0] in12_fu_657_p1;
wire  signed [7:0] m39_fu_671_p0;
wire  signed [15:0] sext_ln152_fu_668_p1;
wire  signed [7:0] m39_fu_671_p1;
wire   [15:0] m39_fu_671_p2;
wire  signed [6:0] m56_fu_703_p1;
wire  signed [2:0] mul_ln200_fu_735_p1;
wire  signed [4:0] grp_fu_1114_p3;
wire  signed [9:0] m59_fu_760_p2;
wire  signed [5:0] m72_fu_808_p0;
wire  signed [4:0] m74_fu_817_p0;
wire  signed [9:0] sext_ln187_fu_814_p1;
wire  signed [4:0] m74_fu_817_p1;
wire   [15:0] m68_fu_795_p2;
wire   [9:0] m61_fu_764_p2;
wire   [12:0] m53_fu_846_p2;
wire  signed [10:0] sext_ln182_fu_871_p1;
wire   [10:0] trunc_ln90_fu_852_p1;
wire   [2:0] trunc_ln200_3_fu_893_p1;
wire   [2:0] add_ln200_fu_897_p2;
wire   [2:0] m87_fu_902_p2;
wire   [9:0] m92_fu_910_p2;
wire   [8:0] m60_fu_928_p2;
wire   [10:0] m77_fu_949_p2;
wire  signed [6:0] mul_ln198_fu_983_p1;
wire   [13:0] m89_fu_1001_p2;
wire   [4:0] trunc_ln204_1_fu_1032_p1;
wire   [4:0] m91_fu_1036_p2;
wire   [4:0] m93_fu_1041_p2;
wire  signed [4:0] grp_fu_1121_p3;
wire   [11:0] m95_fu_1051_p2;
wire   [5:0] m90_fu_1092_p2;
wire   [10:0] m88_fu_1104_p2;
wire  signed [4:0] grp_fu_1114_p2;
wire   [4:0] grp_fu_1121_p2;
reg   [13:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire   [12:0] mul_ln148_fu_582_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
end

case_8_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U1(
    .din0(m21_fu_302_p0),
    .din1(m21_fu_302_p1),
    .dout(m21_fu_302_p2)
);

case_8_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U2(
    .din0(m22_fu_332_p0),
    .din1(m22_fu_332_p1),
    .dout(m22_fu_332_p2)
);

case_8_mul_9s_7s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 10 ))
mul_9s_7s_10_1_1_U3(
    .din0(in10_fu_312_p1),
    .din1(m23_fu_345_p1),
    .dout(m23_fu_345_p2)
);

case_8_mul_11s_4s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
mul_11s_4s_11_1_1_U4(
    .din0(m24_fu_359_p0),
    .din1(in19_fu_320_p1),
    .dout(m24_fu_359_p2)
);

case_8_mul_10s_7s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 10 ))
mul_10s_7s_10_1_1_U5(
    .din0(m26_fu_378_p0),
    .din1(m26_fu_378_p1),
    .dout(m26_fu_378_p2)
);

case_8_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U6(
    .din0(m27_fu_392_p0),
    .din1(m27_fu_392_p1),
    .dout(m27_fu_392_p2)
);

case_8_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U7(
    .din0(mul_ln147_fu_402_p0),
    .din1(m25_fu_368_p2),
    .dout(mul_ln147_fu_402_p2)
);

case_8_mul_5s_4s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 5 ))
mul_5s_4s_5_1_1_U8(
    .din0(mul_ln145_fu_420_p0),
    .din1(in19_fu_320_p1),
    .dout(mul_ln145_fu_420_p2)
);

case_8_mul_6s_6s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 11 ))
mul_6s_6s_11_1_1_U9(
    .din0(m37_fu_455_p0),
    .din1(m32_fu_426_p3),
    .dout(m37_fu_455_p2)
);

case_8_mul_7s_4s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 7 ))
mul_7s_4s_7_1_1_U10(
    .din0(in20_reg_1133),
    .din1(in19_fu_320_p1),
    .dout(m38_fu_465_p2)
);

case_8_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U11(
    .din0(trunc_ln143_2_reg_1166),
    .din1(m22_reg_1156),
    .dout(m30_fu_518_p2)
);

case_8_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U12(
    .din0(trunc_ln153_1_reg_1188),
    .din1(trunc_ln153_reg_1183),
    .dout(m40_fu_536_p2)
);

case_8_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U13(
    .din0(trunc_ln155_1_reg_1203),
    .din1(trunc_ln155_reg_1198),
    .dout(m42_fu_540_p2)
);

case_8_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U14(
    .din0(m44_fu_552_p0),
    .din1(m44_fu_552_p1),
    .dout(m44_fu_552_p2)
);

case_8_mul_7s_7s_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 12 ))
mul_7s_7s_12_1_1_U15(
    .din0(m48_fu_565_p0),
    .din1(m48_fu_565_p1),
    .dout(m48_fu_565_p2)
);

case_8_mul_11ns_8s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
mul_11ns_8s_13_1_1_U16(
    .din0(mul_ln148_fu_582_p0),
    .din1(in18_reg_1149),
    .dout(mul_ln148_fu_582_p2)
);

case_8_mul_7s_4s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
mul_7s_4s_11_1_1_U17(
    .din0(m42_reg_1229),
    .din1(m44_reg_1235),
    .dout(mul_ln159_fu_598_p2)
);

case_8_mul_6s_4s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 6 ))
mul_6s_4s_6_1_1_U18(
    .din0(trunc_ln160_reg_1242),
    .din1(m44_reg_1235),
    .dout(m47_fu_607_p2)
);

case_8_mul_11s_11s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_11s_11s_11_1_1_U19(
    .din0(m35_reg_1247),
    .din1(m35_reg_1247),
    .dout(m43_fu_629_p2)
);

case_8_mul_11s_7s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 11 ))
mul_11s_7s_11_1_1_U20(
    .din0(m35_reg_1247),
    .din1(m38_reg_1176),
    .dout(m45_fu_636_p2)
);

case_8_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U21(
    .din0(trunc_ln178_reg_1266),
    .din1(trunc_ln178_1_reg_1208),
    .dout(mul_ln178_fu_641_p2)
);

case_8_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U22(
    .din0(m39_fu_671_p0),
    .din1(m39_fu_671_p1),
    .dout(m39_fu_671_p2)
);

case_8_mul_11s_7s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 11 ))
mul_11s_7s_11_1_1_U23(
    .din0(m43_reg_1276),
    .din1(m30_reg_1213),
    .dout(m50_fu_680_p2)
);

case_8_mul_9s_8s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_9s_8s_11_1_1_U24(
    .din0(in12_fu_657_p1),
    .din1(in18_reg_1149),
    .dout(mul_ln183_fu_689_p2)
);

case_8_mul_10s_5s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mul_10s_5s_10_1_1_U25(
    .din0(trunc_ln168_reg_1292),
    .din1(m40_reg_1224),
    .dout(m55_fu_698_p2)
);

case_8_mul_11s_7s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 11 ))
mul_11s_7s_11_1_1_U26(
    .din0(m45_reg_1281),
    .din1(m56_fu_703_p1),
    .dout(m56_fu_703_p2)
);

case_8_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U27(
    .din0(trunc_ln171_1_reg_1271),
    .din1(trunc_ln171_reg_1297),
    .dout(m58_fu_707_p2)
);

case_8_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U28(
    .din0(trunc_ln200_reg_1302),
    .din1(mul_ln200_fu_735_p1),
    .dout(mul_ln200_fu_735_p2)
);

case_8_mul_11s_11s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_11s_11s_11_1_1_U29(
    .din0(mul_ln183_reg_1317),
    .din1(trunc_ln164_reg_1312),
    .dout(m51_fu_744_p2)
);

case_8_mul_7s_5s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 9 ))
mul_7s_5s_9_1_1_U30(
    .din0(m38_reg_1176),
    .din1(grp_fu_1114_p3),
    .dout(m52_fu_754_p2)
);

case_8_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U31(
    .din0(trunc_ln174_reg_1344),
    .din1(m59_fu_760_p2),
    .dout(m61_fu_764_p2)
);

case_8_mul_5s_4s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 5 ))
mul_5s_4s_5_1_1_U32(
    .din0(trunc_ln176_reg_1349),
    .din1(m44_reg_1235),
    .dout(m63_fu_780_p2)
);

case_8_mul_11s_7s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 16 ))
mul_11s_7s_16_1_1_U33(
    .din0(m50_reg_1307),
    .din1(m58_reg_1332),
    .dout(m68_fu_795_p2)
);

case_8_mul_6s_5s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 6 ))
mul_6s_5s_6_1_1_U34(
    .din0(m72_fu_808_p0),
    .din1(m57_reg_1259),
    .dout(m72_fu_808_p2)
);

case_8_mul_5s_5s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mul_5s_5s_10_1_1_U35(
    .din0(m74_fu_817_p0),
    .din1(m74_fu_817_p1),
    .dout(m74_fu_817_p2)
);

case_8_mul_9s_8s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
mul_9s_8s_13_1_1_U36(
    .din0(m52_reg_1379),
    .din1(m34_reg_1218),
    .dout(m53_fu_846_p2)
);

case_8_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U37(
    .din0(trunc_ln186_reg_1384),
    .din1(trunc_ln186_1_reg_1389),
    .dout(mul_ln186_fu_860_p2)
);

case_8_mul_11s_7s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 11 ))
mul_11s_7s_11_1_1_U38(
    .din0(trunc_ln190_reg_1421),
    .din1(m58_reg_1332),
    .dout(mul_ln190_fu_884_p2)
);

case_8_mul_10s_6s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 10 ))
mul_10s_6s_10_1_1_U39(
    .din0(m74_reg_1410),
    .din1(m72_reg_1405),
    .dout(m92_fu_910_p2)
);

case_8_mul_9s_7s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 9 ))
mul_9s_7s_9_1_1_U40(
    .din0(trunc_ln173_reg_1431),
    .din1(m42_reg_1229),
    .dout(m60_fu_928_p2)
);

case_8_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U41(
    .din0(trunc_ln179_reg_1400),
    .din1(m62_reg_1441),
    .dout(m66_fu_933_p2)
);

case_8_mul_8s_7s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
mul_8s_7s_8_1_1_U42(
    .din0(mul_ln186_reg_1436),
    .din1(m58_reg_1332),
    .dout(m73_fu_944_p2)
);

case_8_mul_11s_11s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_11s_11s_11_1_1_U43(
    .din0(mul_ln190_reg_1456),
    .din1(m45_reg_1281),
    .dout(m77_fu_949_p2)
);

case_8_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U44(
    .din0(m66_reg_1466),
    .din1(trunc_ln189_reg_1416),
    .dout(m76_fu_979_p2)
);

case_8_mul_8s_7s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
mul_8s_7s_8_1_1_U45(
    .din0(m73_reg_1482),
    .din1(mul_ln198_fu_983_p1),
    .dout(mul_ln198_fu_983_p2)
);

case_8_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U46(
    .din0(trunc_ln199_reg_1503),
    .din1(m74_reg_1410),
    .dout(m86_fu_991_p2)
);

case_8_mul_11s_8s_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 14 ))
mul_11s_8s_14_1_1_U47(
    .din0(m84_reg_1498),
    .din1(m73_reg_1482),
    .dout(m89_fu_1001_p2)
);

case_8_mul_8s_7s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
mul_8s_7s_8_1_1_U48(
    .din0(mul_ln198_reg_1523),
    .din1(m76_reg_1518),
    .dout(mul_ln198_1_fu_1023_p2)
);

case_8_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U49(
    .din0(trunc_ln203_reg_1488),
    .din1(trunc_ln194_reg_1528),
    .dout(mul_ln203_1_fu_1028_p2)
);

case_8_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U50(
    .din0(trunc_ln206_reg_1538),
    .din1(trunc_ln206_1_reg_1513),
    .dout(m93_fu_1041_p2)
);

case_8_mul_10s_9s_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 12 ))
mul_10s_9s_12_1_1_U51(
    .din0(m86_reg_1533),
    .din1(m80_reg_1493),
    .dout(m95_fu_1051_p2)
);

case_8_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U52(
    .din0(trunc_ln178_2_reg_1354),
    .din1(mul_ln198_1_reg_1548),
    .dout(mul_ln198_2_fu_1076_p2)
);

case_8_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U53(
    .din0(trunc_ln180_reg_1471),
    .din1(trunc_ln180_1_reg_1359),
    .dout(mul_ln203_fu_1080_p2)
);

case_8_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U54(
    .din0(mul_ln203_1_reg_1553),
    .din1(trunc_ln180_reg_1471),
    .dout(mul_ln203_2_fu_1084_p2)
);

case_8_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U55(
    .din0(mul_ln198_2_reg_1558),
    .din1(mul_ln178_reg_1287),
    .dout(m85_fu_1088_p2)
);

case_8_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U56(
    .din0(mul_ln203_2_reg_1568),
    .din1(mul_ln203_reg_1563),
    .dout(m90_fu_1092_p2)
);

case_8_mul_11s_8s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mul_11s_8s_11_1_1_U57(
    .din0(m69_reg_1446),
    .din1(m85_reg_1573),
    .dout(m88_fu_1104_p2)
);

case_8_am_addmul_5ns_5ns_5s_5_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
am_addmul_5ns_5ns_5s_5_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln162_1_reg_1144),
    .din1(trunc_ln162_reg_1193),
    .din2(grp_fu_1114_p2),
    .ce(1'b1),
    .dout(grp_fu_1114_p3)
);

case_8_mac_muladd_5s_5s_5ns_5_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mac_muladd_5s_5s_5ns_5_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln195_reg_1426),
    .din1(m63_reg_1394),
    .din2(grp_fu_1121_p2),
    .ce(1'b1),
    .dout(grp_fu_1121_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in18_reg_1149 <= in18_fu_316_p1;
        m22_reg_1156 <= m22_fu_332_p2;
        m38_reg_1176 <= m38_fu_465_p2;
        mul_ln147_reg_1161 <= mul_ln147_fu_402_p2;
        trunc_ln143_2_reg_1166 <= trunc_ln143_2_fu_408_p1;
        trunc_ln148_reg_1171 <= trunc_ln148_fu_434_p1;
        trunc_ln153_1_reg_1188 <= trunc_ln153_1_fu_474_p1;
        trunc_ln153_reg_1183 <= trunc_ln153_fu_470_p1;
        trunc_ln155_1_reg_1203 <= trunc_ln155_1_fu_486_p1;
        trunc_ln155_reg_1198 <= trunc_ln155_fu_482_p1;
        trunc_ln162_reg_1193 <= trunc_ln162_fu_478_p1;
        trunc_ln178_1_reg_1208 <= trunc_ln178_1_fu_490_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        in20_reg_1133 <= in20_fu_290_p1;
        in5_reg_1128 <= in5_fu_286_p1;
        m21_reg_1139 <= m21_fu_302_p2;
        trunc_ln162_1_reg_1144 <= trunc_ln162_1_fu_308_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        m30_reg_1213 <= m30_fu_518_p2;
        m34_reg_1218 <= m34_fu_531_p2;
        m40_reg_1224 <= m40_fu_536_p2;
        m42_reg_1229 <= m42_fu_540_p2;
        m44_reg_1235 <= m44_fu_552_p2;
        trunc_ln160_reg_1242 <= trunc_ln160_fu_558_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        m35_reg_1247 <= m35_fu_588_p1;
        m57_reg_1259 <= m57_fu_612_p1;
        sext_ln159_1_reg_1254 <= sext_ln159_1_fu_595_p1;
        trunc_ln171_1_reg_1271 <= trunc_ln171_1_fu_620_p1;
        trunc_ln178_reg_1266 <= trunc_ln178_fu_616_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        m43_reg_1276 <= m43_fu_629_p2;
        m45_reg_1281 <= m45_fu_636_p2;
        mul_ln178_reg_1287 <= mul_ln178_fu_641_p2;
        trunc_ln168_reg_1292 <= trunc_ln168_fu_645_p1;
        trunc_ln171_reg_1297 <= trunc_ln171_fu_649_p1;
        trunc_ln200_reg_1302 <= trunc_ln200_fu_653_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        m50_reg_1307 <= m50_fu_680_p2;
        m55_reg_1322 <= m55_fu_698_p2;
        m56_reg_1327 <= m56_fu_703_p2;
        m58_reg_1332 <= m58_fu_707_p2;
        mul_ln183_reg_1317 <= mul_ln183_fu_689_p2;
        mul_ln200_reg_1364 <= mul_ln200_fu_735_p2;
        trunc_ln164_reg_1312 <= trunc_ln164_fu_685_p1;
        trunc_ln172_reg_1339 <= trunc_ln172_fu_711_p1;
        trunc_ln174_reg_1344 <= trunc_ln174_fu_715_p1;
        trunc_ln176_reg_1349 <= trunc_ln176_fu_719_p1;
        trunc_ln178_2_reg_1354 <= trunc_ln178_2_fu_723_p1;
        trunc_ln180_1_reg_1359 <= trunc_ln180_1_fu_727_p1;
        trunc_ln200_2_reg_1369 <= trunc_ln200_2_fu_740_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        m51_reg_1374 <= m51_fu_744_p2;
        m52_reg_1379 <= m52_fu_754_p2;
        m63_reg_1394 <= m63_fu_780_p2;
        m72_reg_1405 <= m72_fu_808_p2;
        m74_reg_1410 <= m74_fu_817_p2;
        trunc_ln179_reg_1400 <= trunc_ln179_fu_785_p1;
        trunc_ln186_1_reg_1389 <= trunc_ln186_1_fu_773_p1;
        trunc_ln186_reg_1384 <= trunc_ln186_fu_769_p1;
        trunc_ln189_reg_1416 <= trunc_ln189_fu_823_p1;
        trunc_ln190_reg_1421 <= trunc_ln190_fu_827_p1;
        trunc_ln195_reg_1426 <= trunc_ln195_fu_831_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        m62_reg_1441 <= m62_fu_864_p1;
        m69_reg_1446 <= m69_fu_874_p2;
        m70_reg_1451 <= m70_fu_879_p2;
        mul_ln186_reg_1436 <= mul_ln186_fu_860_p2;
        mul_ln190_reg_1456 <= mul_ln190_fu_884_p2;
        trunc_ln173_reg_1431 <= trunc_ln173_fu_856_p1;
        trunc_ln193_reg_1461 <= trunc_ln193_fu_889_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        m66_reg_1466 <= m66_fu_933_p2;
        m73_reg_1482 <= m73_fu_944_p2;
        m80_reg_1493 <= m80_fu_957_p2;
        m84_reg_1498 <= m84_fu_962_p2;
        sext_ln186_reg_1477 <= sext_ln186_fu_941_p1;
        trunc_ln180_reg_1471 <= trunc_ln180_fu_937_p1;
        trunc_ln199_reg_1503 <= trunc_ln199_fu_967_p1;
        trunc_ln203_reg_1488 <= trunc_ln203_fu_953_p1;
        trunc_ln204_reg_1508 <= trunc_ln204_fu_971_p1;
        trunc_ln206_1_reg_1513 <= trunc_ln206_1_fu_975_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        m76_reg_1518 <= m76_fu_979_p2;
        m86_reg_1533 <= m86_fu_991_p2;
        mul_ln198_reg_1523 <= mul_ln198_fu_983_p2;
        trunc_ln194_reg_1528 <= trunc_ln194_fu_987_p1;
        trunc_ln206_reg_1538 <= trunc_ln206_fu_1007_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        m85_reg_1573 <= m85_fu_1088_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mul_ln198_1_reg_1548 <= mul_ln198_1_fu_1023_p2;
        mul_ln203_1_reg_1553 <= mul_ln203_1_fu_1028_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        mul_ln198_2_reg_1558 <= mul_ln198_2_fu_1076_p2;
        mul_ln203_2_reg_1568 <= mul_ln203_2_fu_1084_p2;
        mul_ln203_reg_1563 <= mul_ln203_fu_1080_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_data_0_ap_vld = 1'b1;
    end else begin
        out_data_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        out_data_10_ap_vld = 1'b1;
    end else begin
        out_data_10_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        out_data_11_ap_vld = 1'b1;
    end else begin
        out_data_11_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_data_12_ap_vld = 1'b1;
    end else begin
        out_data_12_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        out_data_13_ap_vld = 1'b1;
    end else begin
        out_data_13_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        out_data_14_ap_vld = 1'b1;
    end else begin
        out_data_14_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        out_data_15_ap_vld = 1'b1;
    end else begin
        out_data_15_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_data_1_ap_vld = 1'b1;
    end else begin
        out_data_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_data_2_ap_vld = 1'b1;
    end else begin
        out_data_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_data_3_ap_vld = 1'b1;
    end else begin
        out_data_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_data_4_ap_vld = 1'b1;
    end else begin
        out_data_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        out_data_5_ap_vld = 1'b1;
    end else begin
        out_data_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        out_data_6_ap_vld = 1'b1;
    end else begin
        out_data_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_data_7_ap_vld = 1'b1;
    end else begin
        out_data_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        out_data_8_ap_vld = 1'b1;
    end else begin
        out_data_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        out_data_9_ap_vld = 1'b1;
    end else begin
        out_data_9_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln147_fu_526_p2 = ($signed(mul_ln147_reg_1161) + $signed(sext_ln146_fu_522_p1));

assign add_ln149_fu_445_p2 = ($signed(sext_ln149_1_fu_441_p1) + $signed(sext_ln149_fu_438_p1));

assign add_ln200_fu_897_p2 = (mul_ln200_reg_1364 + trunc_ln200_3_fu_893_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_1114_p2 = mul_ln159_fu_598_p2[4:0];

assign grp_fu_1121_p2 = m76_fu_979_p2[4:0];

assign in10_fu_312_p1 = in_data_9[8:0];

assign in12_fu_657_p1 = in_data_11[8:0];

assign in15_fu_514_p1 = in_data_14[2:0];

assign in18_fu_316_p1 = in_data_17[7:0];

assign in19_fu_320_p1 = in_data_18[3:0];

assign in20_fu_290_p1 = in_data_19[6:0];

assign in5_fu_286_p1 = in_data_4[6:0];

assign m21_fu_302_p0 = in_data_19[5:0];

assign m21_fu_302_p1 = in_data_4[5:0];

assign m22_fu_332_p0 = in_data_16[6:0];

assign m22_fu_332_p1 = in_data_7[6:0];

assign m23_fu_345_p1 = sext_ln136_1_fu_342_p1;

assign m24_fu_359_p0 = in_data_16[10:0];

assign m25_fu_368_p2 = ($signed(in18_fu_316_p1) + $signed(sext_ln138_fu_365_p1));

assign m26_fu_378_p0 = in_data_6[9:0];

assign m26_fu_378_p1 = sext_ln136_1_fu_342_p1;

assign m27_fu_392_p0 = in_data_15[8:0];

assign m27_fu_392_p1 = in_data_12[8:0];

assign m32_fu_426_p3 = {{mul_ln145_fu_420_p2}, {1'd0}};

assign m34_fu_531_p2 = ($signed(add_ln147_fu_526_p2) + $signed(in18_reg_1149));

assign m35_fu_588_p1 = mul_ln148_fu_582_p2[10:0];

assign m37_fu_455_p0 = sext_ln149_fu_438_p1;

assign m39_fu_671_p0 = sext_ln152_fu_668_p1;

assign m39_fu_671_p1 = sext_ln152_fu_668_p1;

assign m44_fu_552_p0 = m34_fu_531_p2[3:0];

assign m44_fu_552_p1 = m30_fu_518_p2[3:0];

assign m48_fu_565_p0 = sext_ln161_fu_562_p1;

assign m48_fu_565_p1 = sext_ln161_fu_562_p1;

assign m56_fu_703_p1 = sext_ln159_1_reg_1254;

assign m57_fu_612_p1 = mul_ln159_fu_598_p2[4:0];

assign m59_fu_760_p2 = (trunc_ln172_reg_1339 + m55_reg_1322);

assign m62_fu_864_p1 = mul_ln186_fu_860_p2[6:0];

assign m69_fu_874_p2 = ($signed(m56_reg_1327) + $signed(sext_ln182_fu_871_p1));

assign m70_fu_879_p2 = (trunc_ln90_fu_852_p1 + m51_reg_1374);

assign m72_fu_808_p0 = m59_fu_760_p2[5:0];

assign m74_fu_817_p0 = sext_ln187_fu_814_p1;

assign m74_fu_817_p1 = sext_ln187_fu_814_p1;

assign m80_fu_957_p2 = (m60_fu_928_p2 + trunc_ln193_reg_1461);

assign m84_fu_962_p2 = (m70_reg_1451 + m77_fu_949_p2);

assign m87_fu_902_p2 = (add_ln200_fu_897_p2 + trunc_ln200_2_reg_1369);

assign m91_fu_1036_p2 = (trunc_ln204_1_fu_1032_p1 + trunc_ln204_reg_1508);

assign mul_ln145_fu_420_p0 = in_data_10[4:0];

assign mul_ln147_fu_402_p0 = in_data_15[7:0];

assign mul_ln148_fu_582_p0 = mul_ln148_fu_582_p00;

assign mul_ln148_fu_582_p00 = trunc_ln148_reg_1171;

assign mul_ln198_fu_983_p1 = sext_ln186_reg_1477;

assign mul_ln200_fu_735_p1 = m55_fu_698_p2[2:0];

assign out_data_0 = $signed(m23_fu_345_p2);

assign out_data_1 = $signed(m24_fu_359_p2);

assign out_data_10 = $signed(m90_fu_1092_p2);

assign out_data_11 = $signed(m91_fu_1036_p2);

assign out_data_12 = $signed(m92_fu_910_p2);

assign out_data_13 = $signed(m93_fu_1041_p2);

assign out_data_14 = $signed(grp_fu_1121_p3);

assign out_data_15 = $signed(m95_fu_1051_p2);

assign out_data_2 = $signed(m27_fu_392_p2);

assign out_data_3 = $signed(add_ln149_fu_445_p2);

assign out_data_4 = $signed(m47_fu_607_p2);

assign out_data_5 = $signed(m48_fu_565_p2);

assign out_data_6 = $signed(m61_fu_764_p2);

assign out_data_7 = $signed(m87_fu_902_p2);

assign out_data_8 = $signed(m88_fu_1104_p2);

assign out_data_9 = $signed(m89_fu_1001_p2);

assign sext_ln136_1_fu_342_p1 = in20_reg_1133;

assign sext_ln138_fu_365_p1 = $signed(in5_reg_1128);

assign sext_ln146_fu_522_p1 = $signed(in15_fu_514_p1);

assign sext_ln149_1_fu_441_p1 = $signed(m26_fu_378_p2);

assign sext_ln149_fu_438_p1 = m21_reg_1139;

assign sext_ln152_fu_668_p1 = m34_reg_1218;

assign sext_ln159_1_fu_595_p1 = m42_reg_1229;

assign sext_ln161_fu_562_p1 = m38_reg_1176;

assign sext_ln182_fu_871_p1 = m63_reg_1394;

assign sext_ln186_fu_941_p1 = m58_reg_1332;

assign sext_ln187_fu_814_p1 = m57_reg_1259;

assign trunc_ln143_2_fu_408_p1 = in_data_17[6:0];

assign trunc_ln148_fu_434_p1 = in_data_15[10:0];

assign trunc_ln153_1_fu_474_p1 = mul_ln147_fu_402_p2[4:0];

assign trunc_ln153_fu_470_p1 = m25_fu_368_p2[4:0];

assign trunc_ln155_1_fu_486_p1 = m37_fu_455_p2[6:0];

assign trunc_ln155_fu_482_p1 = m25_fu_368_p2[6:0];

assign trunc_ln160_fu_558_p1 = m34_fu_531_p2[5:0];

assign trunc_ln162_1_fu_308_p1 = m21_fu_302_p2[4:0];

assign trunc_ln162_fu_478_p1 = m22_fu_332_p2[4:0];

assign trunc_ln164_fu_685_p1 = m39_fu_671_p2[10:0];

assign trunc_ln168_fu_645_p1 = m43_fu_629_p2[9:0];

assign trunc_ln171_1_fu_620_p1 = mul_ln159_fu_598_p2[6:0];

assign trunc_ln171_fu_649_p1 = m45_fu_636_p2[6:0];

assign trunc_ln172_fu_711_p1 = m39_fu_671_p2[9:0];

assign trunc_ln173_fu_856_p1 = m53_fu_846_p2[8:0];

assign trunc_ln174_fu_715_p1 = m56_fu_703_p2[9:0];

assign trunc_ln176_fu_719_p1 = m50_fu_680_p2[4:0];

assign trunc_ln178_1_fu_490_p1 = m37_fu_455_p2[7:0];

assign trunc_ln178_2_fu_723_p1 = m50_fu_680_p2[7:0];

assign trunc_ln178_fu_616_p1 = mul_ln148_fu_582_p2[7:0];

assign trunc_ln179_fu_785_p1 = m59_fu_760_p2[6:0];

assign trunc_ln180_1_fu_727_p1 = m50_fu_680_p2[5:0];

assign trunc_ln180_fu_937_p1 = m60_fu_928_p2[5:0];

assign trunc_ln186_1_fu_773_p1 = m52_fu_754_p2[7:0];

assign trunc_ln186_fu_769_p1 = m51_fu_744_p2[7:0];

assign trunc_ln189_fu_823_p1 = m68_fu_795_p2[6:0];

assign trunc_ln190_fu_827_p1 = m68_fu_795_p2[10:0];

assign trunc_ln193_fu_889_p1 = m70_fu_879_p2[8:0];

assign trunc_ln194_fu_987_p1 = m76_fu_979_p2[5:0];

assign trunc_ln195_fu_831_p1 = m68_fu_795_p2[4:0];

assign trunc_ln199_fu_967_p1 = m77_fu_949_p2[9:0];

assign trunc_ln200_2_fu_740_p1 = m58_fu_707_p2[2:0];

assign trunc_ln200_3_fu_893_p1 = m69_fu_874_p2[2:0];

assign trunc_ln200_fu_653_p1 = mul_ln178_fu_641_p2[2:0];

assign trunc_ln203_fu_953_p1 = m66_fu_933_p2[5:0];

assign trunc_ln204_1_fu_1032_p1 = mul_ln198_1_fu_1023_p2[4:0];

assign trunc_ln204_fu_971_p1 = m84_fu_962_p2[4:0];

assign trunc_ln206_1_fu_975_p1 = m73_fu_944_p2[4:0];

assign trunc_ln206_fu_1007_p1 = m86_fu_991_p2[4:0];

assign trunc_ln90_fu_852_p1 = m53_fu_846_p2[10:0];

endmodule //case_8
