// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="case_4_case_4,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.230000,HLS_SYN_LAT=11,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=585,HLS_SYN_LUT=1660,HLS_VERSION=2024_2}" *)

module case_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_data_0,
        in_data_1,
        in_data_2,
        in_data_3,
        in_data_4,
        in_data_5,
        in_data_6,
        in_data_7,
        in_data_8,
        in_data_9,
        in_data_10,
        in_data_11,
        in_data_12,
        in_data_13,
        in_data_14,
        in_data_15,
        in_data_16,
        in_data_17,
        in_data_18,
        in_data_19,
        in_data_20,
        in_data_21,
        in_data_22,
        in_data_23,
        in_data_24,
        in_data_25,
        in_data_26,
        in_data_27,
        in_data_28,
        in_data_29,
        out_data_0,
        out_data_0_ap_vld,
        out_data_1,
        out_data_1_ap_vld,
        out_data_2,
        out_data_2_ap_vld,
        out_data_3,
        out_data_3_ap_vld,
        out_data_4,
        out_data_4_ap_vld,
        out_data_5,
        out_data_5_ap_vld,
        out_data_6,
        out_data_6_ap_vld,
        out_data_7,
        out_data_7_ap_vld,
        out_data_8,
        out_data_8_ap_vld,
        out_data_9,
        out_data_9_ap_vld,
        out_data_10,
        out_data_10_ap_vld,
        out_data_11,
        out_data_11_ap_vld,
        out_data_12,
        out_data_12_ap_vld,
        out_data_13,
        out_data_13_ap_vld,
        out_data_14,
        out_data_14_ap_vld,
        out_data_15,
        out_data_15_ap_vld,
        out_data_16,
        out_data_16_ap_vld,
        out_data_17,
        out_data_17_ap_vld
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] in_data_0;
input  [15:0] in_data_1;
input  [15:0] in_data_2;
input  [15:0] in_data_3;
input  [15:0] in_data_4;
input  [15:0] in_data_5;
input  [15:0] in_data_6;
input  [15:0] in_data_7;
input  [15:0] in_data_8;
input  [15:0] in_data_9;
input  [15:0] in_data_10;
input  [15:0] in_data_11;
input  [15:0] in_data_12;
input  [15:0] in_data_13;
input  [15:0] in_data_14;
input  [15:0] in_data_15;
input  [15:0] in_data_16;
input  [15:0] in_data_17;
input  [15:0] in_data_18;
input  [15:0] in_data_19;
input  [15:0] in_data_20;
input  [15:0] in_data_21;
input  [15:0] in_data_22;
input  [15:0] in_data_23;
input  [15:0] in_data_24;
input  [15:0] in_data_25;
input  [15:0] in_data_26;
input  [15:0] in_data_27;
input  [15:0] in_data_28;
input  [15:0] in_data_29;
output  [15:0] out_data_0;
output   out_data_0_ap_vld;
output  [15:0] out_data_1;
output   out_data_1_ap_vld;
output  [15:0] out_data_2;
output   out_data_2_ap_vld;
output  [15:0] out_data_3;
output   out_data_3_ap_vld;
output  [15:0] out_data_4;
output   out_data_4_ap_vld;
output  [15:0] out_data_5;
output   out_data_5_ap_vld;
output  [15:0] out_data_6;
output   out_data_6_ap_vld;
output  [15:0] out_data_7;
output   out_data_7_ap_vld;
output  [15:0] out_data_8;
output   out_data_8_ap_vld;
output  [15:0] out_data_9;
output   out_data_9_ap_vld;
output  [15:0] out_data_10;
output   out_data_10_ap_vld;
output  [15:0] out_data_11;
output   out_data_11_ap_vld;
output  [15:0] out_data_12;
output   out_data_12_ap_vld;
output  [15:0] out_data_13;
output   out_data_13_ap_vld;
output  [15:0] out_data_14;
output   out_data_14_ap_vld;
output  [15:0] out_data_15;
output   out_data_15_ap_vld;
output  [15:0] out_data_16;
output   out_data_16_ap_vld;
output  [15:0] out_data_17;
output   out_data_17_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_data_0_ap_vld;
reg out_data_1_ap_vld;
reg out_data_2_ap_vld;
reg out_data_3_ap_vld;
reg out_data_4_ap_vld;
reg out_data_5_ap_vld;
reg out_data_6_ap_vld;
reg out_data_7_ap_vld;
reg out_data_8_ap_vld;
reg out_data_9_ap_vld;
reg out_data_10_ap_vld;
reg out_data_11_ap_vld;
reg out_data_12_ap_vld;
reg out_data_13_ap_vld;
reg out_data_14_ap_vld;
reg out_data_15_ap_vld;
reg out_data_16_ap_vld;
reg out_data_17_ap_vld;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire  signed [1:0] in18_fu_346_p1;
reg  signed [1:0] in18_reg_1287;
wire  signed [3:0] in19_fu_350_p1;
reg  signed [3:0] in19_reg_1292;
wire  signed [1:0] m31_fu_366_p2;
reg  signed [1:0] m31_reg_1297;
wire  signed [7:0] m34_fu_380_p2;
reg  signed [7:0] m34_reg_1304;
wire  signed [9:0] m42_fu_414_p1;
reg  signed [9:0] m42_reg_1309;
wire   [4:0] trunc_ln183_fu_418_p1;
reg   [4:0] trunc_ln183_reg_1314;
wire   [4:0] trunc_ln183_1_fu_422_p1;
reg   [4:0] trunc_ln183_1_reg_1320;
wire  signed [5:0] trunc_ln184_fu_426_p1;
reg  signed [5:0] trunc_ln184_reg_1325;
wire   [11:0] m48_fu_434_p2;
reg   [11:0] m48_reg_1330;
wire  signed [6:0] trunc_ln194_fu_440_p1;
reg  signed [6:0] trunc_ln194_reg_1335;
wire  signed [4:0] trunc_ln198_fu_444_p1;
reg  signed [4:0] trunc_ln198_reg_1341;
wire  signed [8:0] m35_fu_465_p1;
reg  signed [8:0] m35_reg_1346;
wire    ap_CS_fsm_state2;
wire  signed [4:0] sext_ln175_fu_488_p1;
reg  signed [4:0] sext_ln175_reg_1356;
wire    ap_CS_fsm_state3;
wire  signed [8:0] m39_fu_509_p2;
reg  signed [8:0] m39_reg_1361;
wire  signed [4:0] mul_ln189_1_fu_515_p2;
reg  signed [4:0] mul_ln189_1_reg_1366;
wire  signed [3:0] m44_fu_534_p2;
reg  signed [3:0] m44_reg_1372;
wire  signed [6:0] m45_fu_557_p1;
reg  signed [6:0] m45_reg_1378;
wire  signed [4:0] m46_fu_561_p2;
reg  signed [4:0] m46_reg_1383;
wire  signed [5:0] m47_fu_569_p2;
reg  signed [5:0] m47_reg_1388;
wire  signed [4:0] mul_ln189_fu_581_p2;
reg  signed [4:0] mul_ln189_reg_1395;
wire  signed [4:0] m53_fu_587_p2;
reg  signed [4:0] m53_reg_1400;
wire  signed [4:0] trunc_ln229_fu_596_p1;
reg  signed [4:0] trunc_ln229_reg_1410;
wire   [3:0] trunc_ln206_fu_600_p1;
reg   [3:0] trunc_ln206_reg_1415;
wire  signed [4:0] m43_fu_621_p2;
reg  signed [4:0] m43_reg_1420;
wire    ap_CS_fsm_state4;
wire  signed [8:0] m49_fu_629_p2;
reg  signed [8:0] m49_reg_1426;
wire  signed [4:0] mul_ln187_fu_634_p2;
reg  signed [4:0] mul_ln187_reg_1431;
wire  signed [4:0] m52_fu_640_p2;
reg  signed [4:0] m52_reg_1436;
wire  signed [9:0] m56_fu_648_p2;
reg  signed [9:0] m56_reg_1442;
wire  signed [7:0] trunc_ln195_fu_653_p1;
reg  signed [7:0] trunc_ln195_reg_1447;
wire  signed [4:0] mul_ln197_fu_660_p2;
reg  signed [4:0] mul_ln197_reg_1453;
wire  signed [2:0] trunc_ln203_fu_665_p1;
reg  signed [2:0] trunc_ln203_reg_1460;
wire  signed [4:0] trunc_ln217_fu_669_p1;
reg  signed [4:0] trunc_ln217_reg_1465;
wire  signed [8:0] m54_fu_677_p2;
reg  signed [8:0] m54_reg_1471;
wire    ap_CS_fsm_state5;
wire  signed [7:0] m58_fu_684_p2;
reg  signed [7:0] m58_reg_1476;
wire  signed [4:0] m62_fu_693_p2;
reg  signed [4:0] m62_reg_1481;
wire  signed [6:0] add_ln200_fu_703_p2;
reg  signed [6:0] add_ln200_reg_1487;
wire  signed [9:0] m64_fu_712_p2;
reg  signed [9:0] m64_reg_1492;
wire  signed [3:0] m65_fu_725_p2;
reg  signed [3:0] m65_reg_1497;
wire  signed [4:0] grp_fu_1246_p3;
reg  signed [4:0] m67_reg_1506;
wire  signed [10:0] trunc_ln210_fu_754_p1;
reg  signed [10:0] trunc_ln210_reg_1511;
wire  signed [6:0] trunc_ln212_fu_758_p1;
reg  signed [6:0] trunc_ln212_reg_1517;
wire  signed [3:0] add_ln214_fu_762_p2;
reg  signed [3:0] add_ln214_reg_1522;
wire  signed [2:0] m78_fu_774_p2;
reg  signed [2:0] m78_reg_1527;
wire   [2:0] m87_fu_788_p2;
reg  signed [2:0] m87_reg_1533;
wire  signed [3:0] trunc_ln225_fu_794_p1;
reg  signed [3:0] trunc_ln225_reg_1538;
wire  signed [4:0] trunc_ln226_fu_797_p1;
reg  signed [4:0] trunc_ln226_reg_1543;
wire   [6:0] trunc_ln227_1_fu_801_p1;
reg   [6:0] trunc_ln227_1_reg_1549;
wire  signed [6:0] grp_fu_1255_p3;
reg  signed [6:0] m57_reg_1554;
wire    ap_CS_fsm_state6;
wire  signed [7:0] m70_fu_813_p2;
reg  signed [7:0] m70_reg_1559;
wire  signed [12:0] mul_ln223_fu_824_p2;
reg  signed [12:0] mul_ln223_reg_1565;
wire  signed [10:0] m74_fu_841_p2;
reg  signed [10:0] m74_reg_1570;
wire   [6:0] m75_fu_846_p2;
reg   [6:0] m75_reg_1577;
wire  signed [7:0] mul_ln244_fu_853_p2;
reg  signed [7:0] mul_ln244_reg_1582;
wire  signed [4:0] m80_fu_858_p2;
reg  signed [4:0] m80_reg_1587;
wire  signed [4:0] sext_ln254_fu_862_p1;
reg  signed [4:0] sext_ln254_reg_1595;
wire  signed [4:0] m92_fu_873_p2;
wire  signed [2:0] m102_fu_881_p2;
reg  signed [2:0] m102_reg_1605;
wire  signed [5:0] trunc_ln242_fu_886_p1;
reg  signed [5:0] trunc_ln242_reg_1611;
wire  signed [4:0] trunc_ln245_fu_890_p1;
reg  signed [4:0] trunc_ln245_reg_1616;
wire  signed [12:0] m82_fu_910_p2;
reg  signed [12:0] m82_reg_1621;
wire    ap_CS_fsm_state7;
wire   [12:0] m83_fu_918_p2;
reg  signed [12:0] m83_reg_1627;
wire   [6:0] trunc_ln227_fu_924_p1;
reg   [6:0] trunc_ln227_reg_1632;
wire   [8:0] trunc_ln254_fu_928_p1;
reg   [8:0] trunc_ln254_reg_1637;
wire  signed [5:0] mul_ln248_fu_951_p2;
reg  signed [5:0] mul_ln248_reg_1642;
wire  signed [4:0] trunc_ln254_1_fu_956_p1;
reg  signed [4:0] trunc_ln254_1_reg_1648;
wire  signed [11:0] m76_fu_976_p2;
reg  signed [11:0] m76_reg_1653;
wire    ap_CS_fsm_state8;
wire  signed [12:0] m94_fu_1019_p2;
reg  signed [12:0] m94_reg_1658;
wire  signed [13:0] m95_fu_1027_p2;
reg  signed [13:0] m95_reg_1663;
wire   [10:0] trunc_ln234_fu_1041_p1;
reg  signed [10:0] trunc_ln234_reg_1668;
wire  signed [11:0] trunc_ln235_fu_1045_p1;
reg  signed [11:0] trunc_ln235_reg_1673;
wire  signed [6:0] sext_ln237_fu_1049_p1;
reg  signed [6:0] sext_ln237_reg_1678;
wire  signed [6:0] m100_fu_1053_p2;
reg  signed [6:0] m100_reg_1683;
wire  signed [6:0] trunc_ln238_fu_1059_p1;
reg  signed [6:0] trunc_ln238_reg_1688;
wire  signed [4:0] trunc_ln246_fu_1063_p1;
reg  signed [4:0] trunc_ln246_reg_1693;
wire  signed [4:0] trunc_ln246_1_fu_1067_p1;
reg  signed [4:0] trunc_ln246_1_reg_1698;
wire  signed [4:0] trunc_ln246_2_fu_1080_p1;
reg  signed [4:0] trunc_ln246_2_reg_1703;
wire  signed [5:0] trunc_ln253_fu_1088_p1;
reg  signed [5:0] trunc_ln253_reg_1708;
wire  signed [5:0] trunc_ln253_1_fu_1092_p1;
reg  signed [5:0] trunc_ln253_1_reg_1713;
wire  signed [4:0] mul_ln254_fu_1096_p2;
reg  signed [4:0] mul_ln254_reg_1718;
wire   [13:0] m110_fu_1139_p2;
reg  signed [13:0] m110_reg_1723;
wire    ap_CS_fsm_state9;
wire  signed [4:0] mul_ln254_1_fu_1151_p2;
reg  signed [4:0] mul_ln254_1_reg_1733;
wire  signed [4:0] mul_ln256_fu_1155_p2;
reg  signed [4:0] mul_ln256_reg_1738;
wire  signed [15:0] sext_ln250_fu_1177_p1;
reg  signed [15:0] sext_ln250_reg_1743;
wire    ap_CS_fsm_state10;
wire  signed [4:0] mul_ln256_1_fu_1203_p2;
reg  signed [4:0] mul_ln256_1_reg_1748;
wire   [15:0] mul_ln251_fu_1183_p2;
wire    ap_CS_fsm_state11;
wire   [15:0] mul_ln250_fu_1231_p2;
wire    ap_CS_fsm_state12;
wire  signed [1:0] m31_fu_366_p0;
wire  signed [1:0] m31_fu_366_p1;
wire  signed [7:0] m34_fu_380_p0;
wire  signed [6:0] mul_ln192_fu_394_p0;
wire   [4:0] in14_fu_342_p1;
wire   [11:0] in29_fu_358_p1;
wire  signed [11:0] sext_ln179_fu_404_p1;
wire  signed [11:0] add_ln185_fu_408_p2;
wire  signed [6:0] mul_ln192_fu_394_p2;
wire  signed [6:0] in23_fu_354_p1;
wire   [8:0] trunc_ln172_fu_451_p1;
wire   [8:0] mul_ln172_fu_459_p0;
wire   [9:0] mul_ln172_fu_459_p2;
wire   [2:0] in27_fu_477_p1;
wire  signed [4:0] sext_ln175_1_fu_492_p1;
wire  signed [4:0] m38_fu_495_p2;
wire  signed [8:0] m39_fu_509_p0;
wire  signed [4:0] mul_ln189_1_fu_515_p0;
wire   [3:0] trunc_ln178_fu_524_p1;
wire  signed [3:0] sext_ln178_fu_521_p1;
wire  signed [3:0] m44_fu_534_p0;
wire  signed [1:0] m44_fu_534_p1;
wire   [6:0] trunc_ln182_fu_540_p1;
wire   [6:0] mul_ln182_fu_551_p0;
wire   [8:0] mul_ln182_fu_551_p2;
wire  signed [5:0] m47_fu_569_p1;
wire  signed [4:0] mul_ln189_fu_581_p0;
wire   [3:0] m41_fu_528_p2;
wire  signed [4:0] trunc_ln180_fu_617_p1;
wire  signed [2:0] m43_fu_621_p1;
wire  signed [4:0] mul_ln187_fu_634_p0;
wire  signed [4:0] mul_ln187_fu_634_p1;
wire  signed [6:0] grp_fu_1237_p3;
wire  signed [6:0] sext_ln200_1_fu_700_p1;
wire  signed [6:0] sext_ln200_fu_697_p1;
wire  signed [3:0] trunc_ln202_1_fu_721_p1;
wire  signed [3:0] m65_fu_725_p1;
wire  signed [2:0] m66_fu_735_p0;
wire  signed [4:0] m60_fu_689_p2;
wire   [11:0] m68_fu_748_p2;
wire   [4:0] m50_fu_673_p2;
wire  signed [2:0] m78_fu_774_p0;
wire  signed [2:0] m78_fu_774_p1;
wire  signed [2:0] m87_fu_788_p0;
wire  signed [2:0] m87_fu_788_p1;
wire   [2:0] m66_fu_735_p2;
wire  signed [10:0] sext_ln210_fu_830_p1;
wire  signed [2:0] m102_fu_881_p0;
wire   [10:0] m73_fu_833_p2;
wire   [3:0] m88_fu_865_p2;
wire   [7:0] m107_fu_938_p2;
wire   [4:0] m108_fu_946_p2;
wire  signed [11:0] sext_ln213_1_fu_973_p1;
wire  signed [10:0] m85_fu_991_p0;
wire  signed [13:0] sext_ln222_1_fu_988_p1;
wire  signed [6:0] m93_fu_1010_p0;
wire  signed [6:0] m90_fu_1002_p2;
wire  signed [4:0] grp_fu_1262_p3;
wire  signed [10:0] m95_fu_1027_p1;
wire  signed [6:0] sext_ln233_fu_1033_p1;
wire  signed [3:0] m77_fu_981_p2;
wire  signed [6:0] m96_fu_1036_p2;
wire  signed [8:0] sext_ln243_fu_1071_p1;
wire   [13:0] m85_fu_991_p2;
wire   [12:0] m86_fu_997_p2;
wire   [6:0] m93_fu_1010_p2;
wire   [8:0] m106_fu_1075_p2;
wire   [5:0] m111_fu_1084_p2;
wire  signed [3:0] m101_fu_1132_p1;
wire  signed [4:0] grp_fu_1270_p3;
wire  signed [2:0] mul_ln254_1_fu_1151_p1;
wire   [11:0] m98_fu_1128_p2;
wire   [6:0] m101_fu_1132_p2;
wire   [5:0] m116_fu_1147_p2;
wire  signed [4:0] m117_fu_1190_p2;
wire  signed [2:0] m118_fu_1198_p0;
wire   [2:0] m118_fu_1198_p2;
wire  signed [4:0] mul_ln256_2_fu_1214_p2;
wire   [4:0] m119_fu_1218_p2;
wire  signed [10:0] grp_fu_1279_p3;
wire  signed [13:0] mul_ln250_fu_1231_p0;
wire  signed [6:0] grp_fu_1237_p2;
wire  signed [4:0] grp_fu_1246_p1;
wire  signed [4:0] m89_fu_869_p2;
reg   [11:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire   [9:0] mul_ln172_fu_459_p00;
wire   [8:0] mul_ln182_fu_551_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
end

case_4_mul_2s_2s_2_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 2 ))
mul_2s_2s_2_1_1_U1(
    .din0(m31_fu_366_p0),
    .din1(m31_fu_366_p1),
    .dout(m31_fu_366_p2)
);

case_4_mul_8s_2s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mul_8s_2s_8_1_1_U2(
    .din0(m34_fu_380_p0),
    .din1(m31_fu_366_p2),
    .dout(m34_fu_380_p2)
);

case_4_mul_7s_4s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 7 ))
mul_7s_4s_7_1_1_U3(
    .din0(mul_ln192_fu_394_p0),
    .din1(in19_fu_350_p1),
    .dout(mul_ln192_fu_394_p2)
);

case_4_mul_12s_7s_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 12 ))
mul_12s_7s_12_1_1_U4(
    .din0(add_ln185_fu_408_p2),
    .din1(in23_fu_354_p1),
    .dout(m48_fu_434_p2)
);

case_4_mul_9ns_8s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
mul_9ns_8s_10_1_1_U5(
    .din0(mul_ln172_fu_459_p0),
    .din1(m34_reg_1304),
    .dout(mul_ln172_fu_459_p2)
);

case_4_mul_9s_5s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 9 ))
mul_9s_5s_9_1_1_U6(
    .din0(m39_fu_509_p0),
    .din1(m38_fu_495_p2),
    .dout(m39_fu_509_p2)
);

case_4_mul_5s_2s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 5 ))
mul_5s_2s_5_1_1_U7(
    .din0(mul_ln189_1_fu_515_p0),
    .din1(in18_reg_1287),
    .dout(mul_ln189_1_fu_515_p2)
);

case_4_mul_4s_2s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
mul_4s_2s_4_1_1_U8(
    .din0(m44_fu_534_p0),
    .din1(m44_fu_534_p1),
    .dout(m44_fu_534_p2)
);

case_4_mul_7ns_2s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 9 ))
mul_7ns_2s_9_1_1_U9(
    .din0(mul_ln182_fu_551_p0),
    .din1(m31_reg_1297),
    .dout(mul_ln182_fu_551_p2)
);

case_4_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U10(
    .din0(trunc_ln184_reg_1325),
    .din1(m47_fu_569_p1),
    .dout(m47_fu_569_p2)
);

case_4_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U11(
    .din0(mul_ln189_fu_581_p0),
    .din1(mul_ln189_1_fu_515_p2),
    .dout(mul_ln189_fu_581_p2)
);

case_4_mul_5s_3s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 5 ))
mul_5s_3s_5_1_1_U12(
    .din0(trunc_ln180_fu_617_p1),
    .din1(m43_fu_621_p1),
    .dout(m43_fu_621_p2)
);

case_4_mul_9s_6s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 9 ))
mul_9s_6s_9_1_1_U13(
    .din0(m39_reg_1361),
    .din1(m47_reg_1388),
    .dout(m49_fu_629_p2)
);

case_4_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U14(
    .din0(mul_ln187_fu_634_p0),
    .din1(mul_ln187_fu_634_p1),
    .dout(mul_ln187_fu_634_p2)
);

case_4_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U15(
    .din0(mul_ln189_reg_1395),
    .din1(trunc_ln180_fu_617_p1),
    .dout(m52_fu_640_p2)
);

case_4_mul_10s_7s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 10 ))
mul_10s_7s_10_1_1_U16(
    .din0(m42_reg_1309),
    .din1(grp_fu_1237_p3),
    .dout(m56_fu_648_p2)
);

case_4_mul_5s_4s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 5 ))
mul_5s_4s_5_1_1_U17(
    .din0(m53_reg_1400),
    .din1(m44_reg_1372),
    .dout(mul_ln197_fu_660_p2)
);

case_4_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U18(
    .din0(mul_ln187_reg_1431),
    .din1(mul_ln189_1_reg_1366),
    .dout(m50_fu_673_p2)
);

case_4_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U19(
    .din0(m35_reg_1346),
    .din1(m49_reg_1426),
    .dout(m54_fu_677_p2)
);

case_4_mul_8s_4s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
mul_8s_4s_8_1_1_U20(
    .din0(trunc_ln195_reg_1447),
    .din1(m44_reg_1372),
    .dout(m58_fu_684_p2)
);

case_4_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U21(
    .din0(mul_ln197_reg_1453),
    .din1(mul_ln189_1_reg_1366),
    .dout(m60_fu_689_p2)
);

case_4_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U22(
    .din0(m52_reg_1436),
    .din1(trunc_ln229_reg_1410),
    .dout(m62_fu_693_p2)
);

case_4_mul_10s_6s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 10 ))
mul_10s_6s_10_1_1_U23(
    .din0(m56_reg_1442),
    .din1(m47_reg_1388),
    .dout(m64_fu_712_p2)
);

case_4_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U24(
    .din0(trunc_ln202_1_fu_721_p1),
    .din1(m65_fu_725_p1),
    .dout(m65_fu_725_p2)
);

case_4_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U25(
    .din0(m66_fu_735_p0),
    .din1(trunc_ln203_reg_1460),
    .dout(m66_fu_735_p2)
);

case_4_mul_7s_5s_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 12 ))
mul_7s_5s_12_1_1_U26(
    .din0(add_ln200_fu_703_p2),
    .din1(m60_fu_689_p2),
    .dout(m68_fu_748_p2)
);

case_4_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U27(
    .din0(m78_fu_774_p0),
    .din1(m78_fu_774_p1),
    .dout(m78_fu_774_p2)
);

case_4_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U28(
    .din0(m87_fu_788_p0),
    .din1(m87_fu_788_p1),
    .dout(m87_fu_788_p2)
);

case_4_mul_8s_5s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
mul_8s_5s_8_1_1_U29(
    .din0(m58_reg_1476),
    .din1(m43_reg_1420),
    .dout(m70_fu_813_p2)
);

case_4_mul_9s_7s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 13 ))
mul_9s_7s_13_1_1_U30(
    .din0(m54_reg_1471),
    .din1(add_ln200_reg_1487),
    .dout(mul_ln223_fu_824_p2)
);

case_4_mul_11s_4s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
mul_11s_4s_11_1_1_U31(
    .din0(trunc_ln210_reg_1511),
    .din1(m65_reg_1497),
    .dout(m74_fu_841_p2)
);

case_4_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U32(
    .din0(m45_reg_1378),
    .din1(trunc_ln212_reg_1517),
    .dout(m75_fu_846_p2)
);

case_4_mul_8s_4s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
mul_8s_4s_8_1_1_U33(
    .din0(trunc_ln195_reg_1447),
    .din1(m65_reg_1497),
    .dout(mul_ln244_fu_853_p2)
);

case_4_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U34(
    .din0(m67_reg_1506),
    .din1(trunc_ln217_reg_1465),
    .dout(m80_fu_858_p2)
);

case_4_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U35(
    .din0(trunc_ln225_reg_1538),
    .din1(m65_reg_1497),
    .dout(m88_fu_865_p2)
);

case_4_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U36(
    .din0(trunc_ln226_reg_1543),
    .din1(mul_ln197_reg_1453),
    .dout(m89_fu_869_p2)
);

case_4_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U37(
    .din0(trunc_ln226_reg_1543),
    .din1(m62_reg_1481),
    .dout(m92_fu_873_p2)
);

case_4_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U38(
    .din0(m102_fu_881_p0),
    .din1(m78_reg_1527),
    .dout(m102_fu_881_p2)
);

case_4_mul_13s_8s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
mul_13s_8s_13_1_1_U39(
    .din0(mul_ln223_reg_1565),
    .din1(m70_reg_1559),
    .dout(m82_fu_910_p2)
);

case_4_mul_11s_7s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 13 ))
mul_11s_7s_13_1_1_U40(
    .din0(m74_reg_1570),
    .din1(m57_reg_1554),
    .dout(m83_fu_918_p2)
);

case_4_mul_8s_5s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
mul_8s_5s_8_1_1_U41(
    .din0(mul_ln244_reg_1582),
    .din1(m80_reg_1587),
    .dout(m107_fu_938_p2)
);

case_4_mul_5s_3s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 5 ))
mul_5s_3s_5_1_1_U42(
    .din0(trunc_ln245_reg_1616),
    .din1(m87_reg_1533),
    .dout(m108_fu_946_p2)
);

case_4_mul_6s_5s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 6 ))
mul_6s_5s_6_1_1_U43(
    .din0(trunc_ln242_reg_1611),
    .din1(m80_reg_1587),
    .dout(mul_ln248_fu_951_p2)
);

case_4_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U44(
    .din0(add_ln214_reg_1522),
    .din1(m65_reg_1497),
    .dout(m77_fu_981_p2)
);

case_4_mul_11s_4s_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 14 ))
mul_11s_4s_14_1_1_U45(
    .din0(m85_fu_991_p0),
    .din1(m65_reg_1497),
    .dout(m85_fu_991_p2)
);

case_4_mul_13s_10s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 13 ))
mul_13s_10s_13_1_1_U46(
    .din0(m82_reg_1621),
    .din1(m64_reg_1492),
    .dout(m86_fu_997_p2)
);

case_4_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U47(
    .din0(m93_fu_1010_p0),
    .din1(m90_fu_1002_p2),
    .dout(m93_fu_1010_p2)
);

case_4_mul_13s_5s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
mul_13s_5s_13_1_1_U48(
    .din0(m82_reg_1621),
    .din1(grp_fu_1262_p3),
    .dout(m94_fu_1019_p2)
);

case_4_mul_13s_11s_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 14 ))
mul_13s_11s_14_1_1_U49(
    .din0(m83_reg_1627),
    .din1(m95_fu_1027_p1),
    .dout(m95_fu_1027_p2)
);

case_4_mul_7s_4s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 7 ))
mul_7s_4s_7_1_1_U50(
    .din0(m90_fu_1002_p2),
    .din1(m77_fu_981_p2),
    .dout(m100_fu_1053_p2)
);

case_4_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U51(
    .din0(mul_ln248_reg_1642),
    .din1(mul_ln248_reg_1642),
    .dout(m111_fu_1084_p2)
);

case_4_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U52(
    .din0(trunc_ln217_reg_1465),
    .din1(trunc_ln254_1_reg_1648),
    .dout(mul_ln254_fu_1096_p2)
);

case_4_mul_12s_12s_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
mul_12s_12s_12_1_1_U53(
    .din0(trunc_ln235_reg_1673),
    .din1(m76_reg_1653),
    .dout(m98_fu_1128_p2)
);

case_4_mul_7s_4s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 7 ))
mul_7s_4s_7_1_1_U54(
    .din0(trunc_ln238_reg_1688),
    .din1(m101_fu_1132_p1),
    .dout(m101_fu_1132_p2)
);

case_4_mul_14s_5s_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 14 ))
mul_14s_5s_14_1_1_U55(
    .din0(m95_reg_1663),
    .din1(m80_reg_1587),
    .dout(m110_fu_1139_p2)
);

case_4_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U56(
    .din0(trunc_ln253_reg_1708),
    .din1(trunc_ln253_1_reg_1713),
    .dout(m116_fu_1147_p2)
);

case_4_mul_5s_3s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 5 ))
mul_5s_3s_5_1_1_U57(
    .din0(grp_fu_1270_p3),
    .din1(mul_ln254_1_fu_1151_p1),
    .dout(mul_ln254_1_fu_1151_p2)
);

case_4_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U58(
    .din0(trunc_ln246_reg_1693),
    .din1(trunc_ln246_1_reg_1698),
    .dout(mul_ln256_fu_1155_p2)
);

case_4_mul_14s_13s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 16 ))
mul_14s_13s_16_1_1_U59(
    .din0(m110_reg_1723),
    .din1(m94_reg_1658),
    .dout(mul_ln251_fu_1183_p2)
);

case_4_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U60(
    .din0(mul_ln254_1_reg_1733),
    .din1(mul_ln254_reg_1718),
    .dout(m117_fu_1190_p2)
);

case_4_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U61(
    .din0(m118_fu_1198_p0),
    .din1(m102_reg_1605),
    .dout(m118_fu_1198_p2)
);

case_4_mul_5s_3s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 5 ))
mul_5s_3s_5_1_1_U62(
    .din0(m117_fu_1190_p2),
    .din1(m102_reg_1605),
    .dout(mul_ln256_1_fu_1203_p2)
);

case_4_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U63(
    .din0(mul_ln256_1_reg_1748),
    .din1(trunc_ln246_2_reg_1703),
    .dout(mul_ln256_2_fu_1214_p2)
);

case_4_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U64(
    .din0(mul_ln256_2_fu_1214_p2),
    .din1(mul_ln256_reg_1738),
    .dout(m119_fu_1218_p2)
);

case_4_mul_14s_11s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 16 ))
mul_14s_11s_16_1_1_U65(
    .din0(mul_ln250_fu_1231_p0),
    .din1(grp_fu_1279_p3),
    .dout(mul_ln250_fu_1231_p2)
);

case_4_am_addmul_7s_2s_7s_7_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
am_addmul_7s_2s_7s_7_4_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln192_fu_394_p2),
    .din1(in18_fu_346_p1),
    .din2(grp_fu_1237_p2),
    .ce(1'b1),
    .dout(grp_fu_1237_p3)
);

case_4_mac_muladd_5s_5s_5s_5_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mac_muladd_5s_5s_5s_5_4_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln198_reg_1341),
    .din1(grp_fu_1246_p1),
    .din2(mul_ln197_fu_660_p2),
    .ce(1'b1),
    .dout(grp_fu_1246_p3)
);

case_4_am_addmul_7s_2s_5s_7_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
am_addmul_7s_2s_5s_7_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln194_reg_1335),
    .din1(m31_reg_1297),
    .din2(m38_fu_495_p2),
    .ce(1'b1),
    .dout(grp_fu_1255_p3)
);

case_4_am_addmul_5s_5ns_5s_5_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
am_addmul_5s_5ns_5s_5_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(m52_reg_1436),
    .din1(m50_fu_673_p2),
    .din2(m62_fu_693_p2),
    .ce(1'b1),
    .dout(grp_fu_1262_p3)
);

case_4_am_addmul_5s_3s_5s_5_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
am_addmul_5s_3s_5s_5_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(m89_fu_869_p2),
    .din1(m78_reg_1527),
    .din2(m92_fu_873_p2),
    .ce(1'b1),
    .dout(grp_fu_1270_p3)
);

case_4_am_addmul_11s_8s_7s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 11 ))
am_addmul_11s_8s_7s_11_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln234_reg_1668),
    .din1(m70_reg_1559),
    .din2(m100_reg_1683),
    .ce(1'b1),
    .dout(grp_fu_1279_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln200_reg_1487 <= add_ln200_fu_703_p2;
        add_ln214_reg_1522 <= add_ln214_fu_762_p2;
        m54_reg_1471 <= m54_fu_677_p2;
        m58_reg_1476 <= m58_fu_684_p2;
        m62_reg_1481 <= m62_fu_693_p2;
        m64_reg_1492 <= m64_fu_712_p2;
        m65_reg_1497 <= m65_fu_725_p2;
        m67_reg_1506 <= grp_fu_1246_p3;
        m78_reg_1527 <= m78_fu_774_p2;
        m87_reg_1533 <= m87_fu_788_p2;
        trunc_ln210_reg_1511 <= trunc_ln210_fu_754_p1;
        trunc_ln212_reg_1517 <= trunc_ln212_fu_758_p1;
        trunc_ln225_reg_1538 <= trunc_ln225_fu_794_p1;
        trunc_ln226_reg_1543 <= trunc_ln226_fu_797_p1;
        trunc_ln227_1_reg_1549 <= trunc_ln227_1_fu_801_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        in18_reg_1287 <= in18_fu_346_p1;
        in19_reg_1292 <= in19_fu_350_p1;
        m31_reg_1297 <= m31_fu_366_p2;
        m34_reg_1304 <= m34_fu_380_p2;
        m42_reg_1309 <= m42_fu_414_p1;
        m48_reg_1330 <= m48_fu_434_p2;
        trunc_ln183_1_reg_1320 <= trunc_ln183_1_fu_422_p1;
        trunc_ln183_reg_1314 <= trunc_ln183_fu_418_p1;
        trunc_ln184_reg_1325 <= trunc_ln184_fu_426_p1;
        trunc_ln194_reg_1335 <= trunc_ln194_fu_440_p1;
        trunc_ln198_reg_1341 <= trunc_ln198_fu_444_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        m100_reg_1683 <= m100_fu_1053_p2;
        m76_reg_1653 <= m76_fu_976_p2;
        m94_reg_1658 <= m94_fu_1019_p2;
        m95_reg_1663 <= m95_fu_1027_p2;
        mul_ln254_reg_1718 <= mul_ln254_fu_1096_p2;
        sext_ln237_reg_1678 <= sext_ln237_fu_1049_p1;
        trunc_ln234_reg_1668 <= trunc_ln234_fu_1041_p1;
        trunc_ln235_reg_1673 <= trunc_ln235_fu_1045_p1;
        trunc_ln238_reg_1688 <= trunc_ln238_fu_1059_p1;
        trunc_ln246_1_reg_1698 <= trunc_ln246_1_fu_1067_p1;
        trunc_ln246_2_reg_1703 <= trunc_ln246_2_fu_1080_p1;
        trunc_ln246_reg_1693 <= trunc_ln246_fu_1063_p1;
        trunc_ln253_1_reg_1713 <= trunc_ln253_1_fu_1092_p1;
        trunc_ln253_reg_1708 <= trunc_ln253_fu_1088_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        m102_reg_1605 <= m102_fu_881_p2;
        m57_reg_1554 <= grp_fu_1255_p3;
        m70_reg_1559 <= m70_fu_813_p2;
        m74_reg_1570 <= m74_fu_841_p2;
        m75_reg_1577 <= m75_fu_846_p2;
        m80_reg_1587 <= m80_fu_858_p2;
        mul_ln223_reg_1565 <= mul_ln223_fu_824_p2;
        mul_ln244_reg_1582 <= mul_ln244_fu_853_p2;
        sext_ln254_reg_1595 <= sext_ln254_fu_862_p1;
        trunc_ln242_reg_1611 <= trunc_ln242_fu_886_p1;
        trunc_ln245_reg_1616 <= trunc_ln245_fu_890_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        m110_reg_1723 <= m110_fu_1139_p2;
        mul_ln254_1_reg_1733 <= mul_ln254_1_fu_1151_p2;
        mul_ln256_reg_1738 <= mul_ln256_fu_1155_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        m35_reg_1346 <= m35_fu_465_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        m39_reg_1361 <= m39_fu_509_p2;
        m44_reg_1372 <= m44_fu_534_p2;
        m45_reg_1378 <= m45_fu_557_p1;
        m46_reg_1383 <= m46_fu_561_p2;
        m47_reg_1388 <= m47_fu_569_p2;
        m53_reg_1400 <= m53_fu_587_p2;
        mul_ln189_1_reg_1366 <= mul_ln189_1_fu_515_p2;
        mul_ln189_reg_1395 <= mul_ln189_fu_581_p2;
        sext_ln175_reg_1356 <= sext_ln175_fu_488_p1;
        trunc_ln206_reg_1415 <= trunc_ln206_fu_600_p1;
        trunc_ln229_reg_1410 <= trunc_ln229_fu_596_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        m43_reg_1420 <= m43_fu_621_p2;
        m49_reg_1426 <= m49_fu_629_p2;
        m52_reg_1436 <= m52_fu_640_p2;
        m56_reg_1442 <= m56_fu_648_p2;
        mul_ln187_reg_1431 <= mul_ln187_fu_634_p2;
        mul_ln197_reg_1453 <= mul_ln197_fu_660_p2;
        trunc_ln195_reg_1447 <= trunc_ln195_fu_653_p1;
        trunc_ln203_reg_1460 <= trunc_ln203_fu_665_p1;
        trunc_ln217_reg_1465 <= trunc_ln217_fu_669_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        m82_reg_1621 <= m82_fu_910_p2;
        m83_reg_1627 <= m83_fu_918_p2;
        mul_ln248_reg_1642 <= mul_ln248_fu_951_p2;
        trunc_ln227_reg_1632 <= trunc_ln227_fu_924_p1;
        trunc_ln254_1_reg_1648 <= trunc_ln254_1_fu_956_p1;
        trunc_ln254_reg_1637 <= trunc_ln254_fu_928_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        mul_ln256_1_reg_1748 <= mul_ln256_1_fu_1203_p2;
        sext_ln250_reg_1743 <= sext_ln250_fu_1177_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        out_data_0_ap_vld = 1'b1;
    end else begin
        out_data_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        out_data_10_ap_vld = 1'b1;
    end else begin
        out_data_10_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        out_data_11_ap_vld = 1'b1;
    end else begin
        out_data_11_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_data_12_ap_vld = 1'b1;
    end else begin
        out_data_12_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        out_data_13_ap_vld = 1'b1;
    end else begin
        out_data_13_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        out_data_14_ap_vld = 1'b1;
    end else begin
        out_data_14_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        out_data_15_ap_vld = 1'b1;
    end else begin
        out_data_15_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        out_data_16_ap_vld = 1'b1;
    end else begin
        out_data_16_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        out_data_17_ap_vld = 1'b1;
    end else begin
        out_data_17_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        out_data_1_ap_vld = 1'b1;
    end else begin
        out_data_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_data_2_ap_vld = 1'b1;
    end else begin
        out_data_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_data_3_ap_vld = 1'b1;
    end else begin
        out_data_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_data_4_ap_vld = 1'b1;
    end else begin
        out_data_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_data_5_ap_vld = 1'b1;
    end else begin
        out_data_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_data_6_ap_vld = 1'b1;
    end else begin
        out_data_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        out_data_7_ap_vld = 1'b1;
    end else begin
        out_data_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        out_data_8_ap_vld = 1'b1;
    end else begin
        out_data_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_data_9_ap_vld = 1'b1;
    end else begin
        out_data_9_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln185_fu_408_p2 = ($signed(in29_fu_358_p1) + $signed(sext_ln179_fu_404_p1));

assign add_ln200_fu_703_p2 = ($signed(sext_ln200_1_fu_700_p1) + $signed(sext_ln200_fu_697_p1));

assign add_ln214_fu_762_p2 = ($signed(trunc_ln202_1_fu_721_p1) + $signed(trunc_ln206_reg_1415));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_1237_p2 = m34_fu_380_p2[6:0];

assign grp_fu_1246_p1 = mul_ln172_fu_459_p2[4:0];

assign in14_fu_342_p1 = in_data_13[4:0];

assign in18_fu_346_p1 = in_data_17[1:0];

assign in19_fu_350_p1 = in_data_18[3:0];

assign in23_fu_354_p1 = in_data_22[6:0];

assign in27_fu_477_p1 = in_data_26[2:0];

assign in29_fu_358_p1 = in_data_28[11:0];

assign m101_fu_1132_p1 = sext_ln237_reg_1678;

assign m102_fu_881_p0 = m92_fu_873_p2[2:0];

assign m106_fu_1075_p2 = ($signed(trunc_ln254_reg_1637) + $signed(sext_ln243_fu_1071_p1));

assign m118_fu_1198_p0 = m117_fu_1190_p2[2:0];

assign m31_fu_366_p0 = in_data_22[1:0];

assign m31_fu_366_p1 = in_data_9[1:0];

assign m34_fu_380_p0 = in_data_28[7:0];

assign m35_fu_465_p1 = mul_ln172_fu_459_p2[8:0];

assign m38_fu_495_p2 = ($signed(sext_ln175_1_fu_492_p1) + $signed(sext_ln175_fu_488_p1));

assign m39_fu_509_p0 = in_data_14[8:0];

assign m41_fu_528_p2 = ($signed(trunc_ln178_fu_524_p1) + $signed(sext_ln178_fu_521_p1));

assign m42_fu_414_p1 = add_ln185_fu_408_p2[9:0];

assign m43_fu_621_p1 = sext_ln175_reg_1356;

assign m44_fu_534_p0 = in_data_15[3:0];

assign m44_fu_534_p1 = sext_ln178_fu_521_p1;

assign m45_fu_557_p1 = mul_ln182_fu_551_p2[6:0];

assign m46_fu_561_p2 = (trunc_ln183_reg_1314 + trunc_ln183_1_reg_1320);

assign m47_fu_569_p1 = in_data_16[5:0];

assign m53_fu_587_p2 = ($signed(trunc_ln183_reg_1314) + $signed(m46_fu_561_p2));

assign m65_fu_725_p1 = m54_fu_677_p2[3:0];

assign m66_fu_735_p0 = add_ln200_fu_703_p2[2:0];

assign m73_fu_833_p2 = ($signed(trunc_ln210_reg_1511) + $signed(sext_ln210_fu_830_p1));

assign m76_fu_976_p2 = ($signed(m48_reg_1330) + $signed(sext_ln213_1_fu_973_p1));

assign m78_fu_774_p0 = grp_fu_1246_p3[2:0];

assign m78_fu_774_p1 = m50_fu_673_p2[2:0];

assign m85_fu_991_p0 = sext_ln222_1_fu_988_p1;

assign m87_fu_788_p0 = m60_fu_689_p2[2:0];

assign m87_fu_788_p1 = m58_fu_684_p2[2:0];

assign m90_fu_1002_p2 = (trunc_ln227_reg_1632 + trunc_ln227_1_reg_1549);

assign m93_fu_1010_p0 = m76_fu_976_p2[6:0];

assign m95_fu_1027_p1 = sext_ln222_1_fu_988_p1;

assign m96_fu_1036_p2 = ($signed(m75_reg_1577) + $signed(sext_ln233_fu_1033_p1));

assign mul_ln172_fu_459_p0 = mul_ln172_fu_459_p00;

assign mul_ln172_fu_459_p00 = trunc_ln172_fu_451_p1;

assign mul_ln182_fu_551_p0 = mul_ln182_fu_551_p00;

assign mul_ln182_fu_551_p00 = trunc_ln182_fu_540_p1;

assign mul_ln187_fu_634_p0 = in_data_2[4:0];

assign mul_ln187_fu_634_p1 = in_data_20[4:0];

assign mul_ln189_1_fu_515_p0 = in_data_14[4:0];

assign mul_ln189_fu_581_p0 = mul_ln182_fu_551_p2[4:0];

assign mul_ln192_fu_394_p0 = in_data_6[6:0];

assign mul_ln250_fu_1231_p0 = sext_ln250_reg_1743;

assign mul_ln254_1_fu_1151_p1 = sext_ln254_reg_1595;

assign out_data_0 = $signed(m41_fu_528_p2);

assign out_data_1 = $signed(m66_fu_735_p2);

assign out_data_10 = $signed(m107_fu_938_p2);

assign out_data_11 = $signed(m108_fu_946_p2);

assign out_data_12 = $signed(m111_fu_1084_p2);

assign out_data_13 = mul_ln250_fu_1231_p2;

assign out_data_14 = mul_ln251_fu_1183_p2;

assign out_data_15 = $signed(m116_fu_1147_p2);

assign out_data_16 = $signed(m118_fu_1198_p2);

assign out_data_17 = $signed(m119_fu_1218_p2);

assign out_data_2 = $signed(m73_fu_833_p2);

assign out_data_3 = $signed(m85_fu_991_p2);

assign out_data_4 = $signed(m86_fu_997_p2);

assign out_data_5 = $signed(m88_fu_865_p2);

assign out_data_6 = $signed(m93_fu_1010_p2);

assign out_data_7 = $signed(m98_fu_1128_p2);

assign out_data_8 = $signed(m101_fu_1132_p2);

assign out_data_9 = $signed(m106_fu_1075_p2);

assign sext_ln175_1_fu_492_p1 = in19_reg_1292;

assign sext_ln175_fu_488_p1 = $signed(in27_fu_477_p1);

assign sext_ln178_fu_521_p1 = m31_reg_1297;

assign sext_ln179_fu_404_p1 = $signed(in14_fu_342_p1);

assign sext_ln200_1_fu_700_p1 = m47_reg_1388;

assign sext_ln200_fu_697_p1 = m43_reg_1420;

assign sext_ln210_fu_830_p1 = m46_reg_1383;

assign sext_ln213_1_fu_973_p1 = m74_reg_1570;

assign sext_ln222_1_fu_988_p1 = m74_reg_1570;

assign sext_ln233_fu_1033_p1 = m80_reg_1587;

assign sext_ln237_fu_1049_p1 = m77_fu_981_p2;

assign sext_ln243_fu_1071_p1 = m96_fu_1036_p2;

assign sext_ln250_fu_1177_p1 = m110_reg_1723;

assign sext_ln254_fu_862_p1 = m78_reg_1527;

assign trunc_ln172_fu_451_p1 = in_data_10[8:0];

assign trunc_ln178_fu_524_p1 = m38_fu_495_p2[3:0];

assign trunc_ln180_fu_617_p1 = in_data_27[4:0];

assign trunc_ln182_fu_540_p1 = in_data_19[6:0];

assign trunc_ln183_1_fu_422_p1 = in_data_22[4:0];

assign trunc_ln183_fu_418_p1 = add_ln185_fu_408_p2[4:0];

assign trunc_ln184_fu_426_p1 = mul_ln192_fu_394_p2[5:0];

assign trunc_ln194_fu_440_p1 = m34_fu_380_p2[6:0];

assign trunc_ln195_fu_653_p1 = m49_fu_629_p2[7:0];

assign trunc_ln198_fu_444_p1 = m48_fu_434_p2[4:0];

assign trunc_ln202_1_fu_721_p1 = m64_fu_712_p2[3:0];

assign trunc_ln203_fu_665_p1 = m43_fu_621_p2[2:0];

assign trunc_ln206_fu_600_p1 = m53_fu_587_p2[3:0];

assign trunc_ln210_fu_754_p1 = m68_fu_748_p2[10:0];

assign trunc_ln212_fu_758_p1 = m64_fu_712_p2[6:0];

assign trunc_ln217_fu_669_p1 = m56_fu_648_p2[4:0];

assign trunc_ln225_fu_794_p1 = grp_fu_1246_p3[3:0];

assign trunc_ln226_fu_797_p1 = m68_fu_748_p2[4:0];

assign trunc_ln227_1_fu_801_p1 = m68_fu_748_p2[6:0];

assign trunc_ln227_fu_924_p1 = m82_fu_910_p2[6:0];

assign trunc_ln229_fu_596_p1 = m47_fu_569_p2[4:0];

assign trunc_ln234_fu_1041_p1 = m95_fu_1027_p2[10:0];

assign trunc_ln235_fu_1045_p1 = m95_fu_1027_p2[11:0];

assign trunc_ln238_fu_1059_p1 = m95_fu_1027_p2[6:0];

assign trunc_ln242_fu_886_p1 = m75_fu_846_p2[5:0];

assign trunc_ln245_fu_890_p1 = mul_ln244_fu_853_p2[4:0];

assign trunc_ln246_1_fu_1067_p1 = m94_fu_1019_p2[4:0];

assign trunc_ln246_2_fu_1080_p1 = m90_fu_1002_p2[4:0];

assign trunc_ln246_fu_1063_p1 = m96_fu_1036_p2[4:0];

assign trunc_ln253_1_fu_1092_p1 = m90_fu_1002_p2[5:0];

assign trunc_ln253_fu_1088_p1 = m100_fu_1053_p2[5:0];

assign trunc_ln254_1_fu_956_p1 = m82_fu_910_p2[4:0];

assign trunc_ln254_fu_928_p1 = m82_fu_910_p2[8:0];

endmodule //case_4
