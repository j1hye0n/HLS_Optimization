// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="case_6_case_6,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.289500,HLS_SYN_LAT=29,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=833,HLS_SYN_LUT=2440,HLS_VERSION=2024_2}" *)

module case_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_data_0,
        in_data_1,
        in_data_2,
        in_data_3,
        in_data_4,
        in_data_5,
        in_data_6,
        in_data_7,
        in_data_8,
        out_data_0,
        out_data_0_ap_vld,
        out_data_1,
        out_data_1_ap_vld,
        out_data_2,
        out_data_2_ap_vld,
        out_data_3,
        out_data_3_ap_vld,
        out_data_4,
        out_data_4_ap_vld,
        out_data_5,
        out_data_5_ap_vld,
        out_data_6,
        out_data_6_ap_vld,
        out_data_7,
        out_data_7_ap_vld,
        out_data_8,
        out_data_8_ap_vld,
        out_data_9,
        out_data_9_ap_vld,
        out_data_10,
        out_data_10_ap_vld,
        out_data_11,
        out_data_11_ap_vld,
        out_data_12,
        out_data_12_ap_vld,
        out_data_13,
        out_data_13_ap_vld,
        out_data_14,
        out_data_14_ap_vld,
        out_data_15,
        out_data_15_ap_vld,
        out_data_16,
        out_data_16_ap_vld,
        out_data_17,
        out_data_17_ap_vld,
        out_data_18,
        out_data_18_ap_vld,
        out_data_19,
        out_data_19_ap_vld,
        out_data_20,
        out_data_20_ap_vld,
        out_data_21,
        out_data_21_ap_vld
);

parameter    ap_ST_fsm_state1 = 30'd1;
parameter    ap_ST_fsm_state2 = 30'd2;
parameter    ap_ST_fsm_state3 = 30'd4;
parameter    ap_ST_fsm_state4 = 30'd8;
parameter    ap_ST_fsm_state5 = 30'd16;
parameter    ap_ST_fsm_state6 = 30'd32;
parameter    ap_ST_fsm_state7 = 30'd64;
parameter    ap_ST_fsm_state8 = 30'd128;
parameter    ap_ST_fsm_state9 = 30'd256;
parameter    ap_ST_fsm_state10 = 30'd512;
parameter    ap_ST_fsm_state11 = 30'd1024;
parameter    ap_ST_fsm_state12 = 30'd2048;
parameter    ap_ST_fsm_state13 = 30'd4096;
parameter    ap_ST_fsm_state14 = 30'd8192;
parameter    ap_ST_fsm_state15 = 30'd16384;
parameter    ap_ST_fsm_state16 = 30'd32768;
parameter    ap_ST_fsm_state17 = 30'd65536;
parameter    ap_ST_fsm_state18 = 30'd131072;
parameter    ap_ST_fsm_state19 = 30'd262144;
parameter    ap_ST_fsm_state20 = 30'd524288;
parameter    ap_ST_fsm_state21 = 30'd1048576;
parameter    ap_ST_fsm_state22 = 30'd2097152;
parameter    ap_ST_fsm_state23 = 30'd4194304;
parameter    ap_ST_fsm_state24 = 30'd8388608;
parameter    ap_ST_fsm_state25 = 30'd16777216;
parameter    ap_ST_fsm_state26 = 30'd33554432;
parameter    ap_ST_fsm_state27 = 30'd67108864;
parameter    ap_ST_fsm_state28 = 30'd134217728;
parameter    ap_ST_fsm_state29 = 30'd268435456;
parameter    ap_ST_fsm_state30 = 30'd536870912;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] in_data_0;
input  [15:0] in_data_1;
input  [15:0] in_data_2;
input  [15:0] in_data_3;
input  [15:0] in_data_4;
input  [15:0] in_data_5;
input  [15:0] in_data_6;
input  [15:0] in_data_7;
input  [15:0] in_data_8;
output  [15:0] out_data_0;
output   out_data_0_ap_vld;
output  [15:0] out_data_1;
output   out_data_1_ap_vld;
output  [15:0] out_data_2;
output   out_data_2_ap_vld;
output  [15:0] out_data_3;
output   out_data_3_ap_vld;
output  [15:0] out_data_4;
output   out_data_4_ap_vld;
output  [15:0] out_data_5;
output   out_data_5_ap_vld;
output  [15:0] out_data_6;
output   out_data_6_ap_vld;
output  [15:0] out_data_7;
output   out_data_7_ap_vld;
output  [15:0] out_data_8;
output   out_data_8_ap_vld;
output  [15:0] out_data_9;
output   out_data_9_ap_vld;
output  [15:0] out_data_10;
output   out_data_10_ap_vld;
output  [15:0] out_data_11;
output   out_data_11_ap_vld;
output  [15:0] out_data_12;
output   out_data_12_ap_vld;
output  [15:0] out_data_13;
output   out_data_13_ap_vld;
output  [15:0] out_data_14;
output   out_data_14_ap_vld;
output  [15:0] out_data_15;
output   out_data_15_ap_vld;
output  [15:0] out_data_16;
output   out_data_16_ap_vld;
output  [15:0] out_data_17;
output   out_data_17_ap_vld;
output  [15:0] out_data_18;
output   out_data_18_ap_vld;
output  [15:0] out_data_19;
output   out_data_19_ap_vld;
output  [15:0] out_data_20;
output   out_data_20_ap_vld;
output  [15:0] out_data_21;
output   out_data_21_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_data_0_ap_vld;
reg out_data_1_ap_vld;
reg out_data_2_ap_vld;
reg out_data_3_ap_vld;
reg out_data_4_ap_vld;
reg out_data_5_ap_vld;
reg out_data_6_ap_vld;
reg out_data_7_ap_vld;
reg out_data_8_ap_vld;
reg out_data_9_ap_vld;
reg out_data_10_ap_vld;
reg out_data_11_ap_vld;
reg out_data_12_ap_vld;
reg out_data_13_ap_vld;
reg out_data_14_ap_vld;
reg out_data_15_ap_vld;
reg out_data_16_ap_vld;
reg out_data_17_ap_vld;
reg out_data_18_ap_vld;
reg out_data_19_ap_vld;
reg out_data_20_ap_vld;
reg out_data_21_ap_vld;

(* fsm_encoding = "none" *) reg   [29:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire  signed [8:0] in9_fu_311_p1;
reg  signed [8:0] in9_reg_1375;
wire  signed [8:0] m12_fu_319_p2;
reg  signed [8:0] m12_reg_1380;
wire  signed [5:0] trunc_ln201_1_fu_325_p1;
reg  signed [5:0] trunc_ln201_1_reg_1385;
wire  signed [2:0] trunc_ln204_fu_329_p1;
reg  signed [2:0] trunc_ln204_reg_1390;
wire  signed [8:0] trunc_ln198_fu_341_p1;
reg  signed [8:0] trunc_ln198_reg_1395;
wire    ap_CS_fsm_state2;
wire  signed [5:0] m13_fu_363_p2;
reg  signed [5:0] m13_reg_1400;
wire  signed [2:0] m16_fu_390_p2;
reg  signed [2:0] m16_reg_1405;
wire  signed [10:0] trunc_ln206_fu_395_p1;
reg  signed [10:0] trunc_ln206_reg_1412;
wire  signed [8:0] trunc_ln207_fu_399_p1;
reg  signed [8:0] trunc_ln207_reg_1417;
wire  signed [8:0] trunc_ln208_fu_403_p1;
reg  signed [8:0] trunc_ln208_reg_1422;
wire  signed [5:0] trunc_ln216_fu_421_p1;
reg  signed [5:0] trunc_ln216_reg_1427;
wire   [8:0] m10_fu_443_p2;
reg  signed [8:0] m10_reg_1432;
wire    ap_CS_fsm_state3;
wire   [10:0] m18_fu_451_p2;
reg   [10:0] m18_reg_1437;
wire  signed [8:0] m19_fu_459_p2;
reg  signed [8:0] m19_reg_1442;
wire   [5:0] trunc_ln216_2_fu_468_p1;
reg   [5:0] trunc_ln216_2_reg_1452;
wire  signed [8:0] m20_fu_484_p2;
reg  signed [8:0] m20_reg_1457;
wire    ap_CS_fsm_state4;
wire  signed [7:0] trunc_ln209_1_fu_492_p1;
reg  signed [7:0] trunc_ln209_1_reg_1462;
wire  signed [7:0] m21_fu_496_p2;
reg  signed [7:0] m21_reg_1467;
wire  signed [10:0] trunc_ln214_fu_502_p1;
reg  signed [10:0] trunc_ln214_reg_1473;
wire  signed [10:0] m26_fu_513_p2;
reg  signed [10:0] m26_reg_1478;
wire    ap_CS_fsm_state5;
wire   [5:0] trunc_ln220_1_fu_523_p1;
reg   [5:0] trunc_ln220_1_reg_1484;
wire  signed [3:0] trunc_ln221_fu_527_p1;
reg  signed [3:0] trunc_ln221_reg_1489;
wire  signed [10:0] m27_fu_544_p2;
reg  signed [10:0] m27_reg_1494;
wire    ap_CS_fsm_state6;
wire  signed [4:0] trunc_ln217_fu_549_p1;
reg  signed [4:0] trunc_ln217_reg_1499;
wire  signed [4:0] trunc_ln217_1_fu_553_p1;
reg  signed [4:0] trunc_ln217_1_reg_1505;
wire  signed [5:0] m32_fu_560_p2;
reg  signed [5:0] m32_reg_1510;
wire  signed [3:0] m33_fu_569_p2;
reg  signed [3:0] m33_reg_1515;
wire  signed [4:0] trunc_ln226_fu_580_p1;
reg  signed [4:0] trunc_ln226_reg_1530;
wire  signed [2:0] trunc_ln229_2_fu_584_p1;
reg  signed [2:0] trunc_ln229_2_reg_1535;
wire  signed [4:0] m31_fu_592_p2;
reg  signed [4:0] m31_reg_1540;
wire    ap_CS_fsm_state7;
wire  signed [3:0] trunc_ln228_fu_597_p1;
reg  signed [3:0] trunc_ln228_reg_1545;
wire   [2:0] mul_ln229_1_fu_630_p2;
reg   [2:0] mul_ln229_1_reg_1550;
wire  signed [3:0] mul_ln228_fu_636_p2;
reg  signed [3:0] mul_ln228_reg_1555;
wire   [12:0] trunc_ln230_fu_641_p1;
reg   [12:0] trunc_ln230_reg_1560;
wire  signed [4:0] m38_fu_645_p2;
reg  signed [4:0] m38_reg_1565;
wire    ap_CS_fsm_state8;
wire   [3:0] m40_fu_649_p2;
reg   [3:0] m40_reg_1570;
wire  signed [2:0] m41_fu_657_p2;
reg  signed [2:0] m41_reg_1575;
wire  signed [12:0] grp_fu_1346_p3;
reg  signed [12:0] m42_reg_1581;
wire    ap_CS_fsm_state9;
wire  signed [5:0] trunc_ln231_fu_662_p1;
reg  signed [5:0] trunc_ln231_reg_1586;
wire  signed [5:0] m43_fu_668_p2;
reg  signed [5:0] m43_reg_1591;
wire  signed [2:0] trunc_ln233_fu_674_p1;
reg  signed [2:0] trunc_ln233_reg_1596;
wire  signed [4:0] trunc_ln236_fu_678_p1;
reg  signed [4:0] trunc_ln236_reg_1601;
wire  signed [4:0] trunc_ln236_1_fu_682_p1;
reg  signed [4:0] trunc_ln236_1_reg_1606;
wire  signed [9:0] trunc_ln235_1_fu_685_p1;
reg  signed [9:0] trunc_ln235_1_reg_1611;
wire   [7:0] trunc_ln238_fu_688_p1;
reg   [7:0] trunc_ln238_reg_1616;
wire  signed [12:0] m44_fu_694_p2;
reg  signed [12:0] m44_reg_1621;
wire    ap_CS_fsm_state10;
wire   [2:0] m45_fu_699_p2;
reg  signed [2:0] m45_reg_1626;
wire  signed [9:0] trunc_ln235_fu_707_p1;
reg  signed [9:0] trunc_ln235_reg_1631;
wire  signed [4:0] m48_fu_714_p2;
reg  signed [4:0] m48_reg_1636;
wire  signed [9:0] m47_fu_720_p2;
reg  signed [9:0] m47_reg_1643;
wire    ap_CS_fsm_state11;
wire   [12:0] m49_fu_727_p2;
reg  signed [12:0] m49_reg_1648;
wire  signed [6:0] m52_fu_742_p2;
reg  signed [6:0] m52_reg_1653;
wire  signed [5:0] trunc_ln242_fu_748_p1;
reg  signed [5:0] trunc_ln242_reg_1658;
wire  signed [5:0] trunc_ln252_fu_752_p1;
reg  signed [5:0] trunc_ln252_reg_1665;
wire  signed [9:0] m53_fu_779_p2;
reg  signed [9:0] m53_reg_1671;
wire    ap_CS_fsm_state12;
wire  signed [5:0] sext_ln242_fu_784_p1;
reg  signed [5:0] sext_ln242_reg_1676;
wire  signed [5:0] m54_fu_787_p2;
reg  signed [5:0] m54_reg_1681;
wire  signed [14:0] sext_ln245_fu_792_p1;
reg  signed [14:0] sext_ln245_reg_1687;
wire  signed [9:0] trunc_ln246_fu_805_p1;
reg  signed [9:0] trunc_ln246_reg_1692;
wire  signed [4:0] trunc_ln248_fu_809_p1;
reg  signed [4:0] trunc_ln248_reg_1697;
wire  signed [5:0] trunc_ln252_1_fu_813_p1;
reg  signed [5:0] trunc_ln252_1_reg_1702;
wire  signed [5:0] m56_fu_817_p2;
reg  signed [5:0] m56_reg_1707;
wire    ap_CS_fsm_state13;
wire  signed [9:0] m58_fu_821_p2;
reg  signed [9:0] m58_reg_1712;
wire  signed [4:0] m60_fu_837_p2;
reg  signed [4:0] m60_reg_1717;
wire  signed [5:0] mul_ln252_fu_842_p2;
wire  signed [3:0] trunc_ln254_fu_846_p1;
reg  signed [3:0] trunc_ln254_reg_1727;
wire  signed [7:0] trunc_ln255_fu_850_p1;
reg  signed [7:0] trunc_ln255_reg_1733;
wire    ap_CS_fsm_state14;
wire  signed [5:0] grp_fu_1357_p3;
reg  signed [5:0] m64_reg_1743;
wire    ap_CS_fsm_state16;
wire   [5:0] m65_fu_879_p2;
reg   [5:0] m65_reg_1748;
wire  signed [3:0] mul_ln254_fu_883_p2;
reg  signed [3:0] mul_ln254_reg_1754;
wire  signed [3:0] trunc_ln254_1_fu_887_p1;
reg  signed [3:0] trunc_ln254_1_reg_1759;
wire  signed [3:0] trunc_ln259_fu_894_p1;
reg  signed [3:0] trunc_ln259_reg_1770;
wire   [2:0] trunc_ln262_2_fu_897_p1;
reg   [2:0] trunc_ln262_2_reg_1775;
wire  signed [8:0] sext_ln258_fu_913_p1;
reg  signed [8:0] sext_ln258_reg_1780;
wire    ap_CS_fsm_state17;
wire  signed [8:0] m70_fu_919_p2;
reg  signed [8:0] m70_reg_1785;
wire   [3:0] m72_fu_930_p2;
reg   [3:0] m72_reg_1790;
wire  signed [3:0] trunc_ln262_fu_941_p1;
reg  signed [3:0] trunc_ln262_reg_1795;
wire   [5:0] m76_fu_945_p2;
reg   [5:0] m76_reg_1800;
wire   [5:0] trunc_ln269_fu_951_p1;
reg   [5:0] trunc_ln269_reg_1805;
wire  signed [3:0] trunc_ln268_1_fu_955_p1;
reg  signed [3:0] trunc_ln268_1_reg_1810;
wire   [2:0] trunc_ln268_2_fu_959_p1;
reg   [2:0] trunc_ln268_2_reg_1815;
wire  signed [3:0] m74_fu_973_p2;
reg  signed [3:0] m74_reg_1820;
wire    ap_CS_fsm_state18;
wire   [5:0] trunc_ln269_1_fu_992_p1;
reg   [5:0] trunc_ln269_1_reg_1825;
wire  signed [2:0] trunc_ln269_2_fu_996_p1;
reg  signed [2:0] trunc_ln269_2_reg_1830;
wire   [3:0] mul_ln276_fu_1017_p2;
reg   [3:0] mul_ln276_reg_1835;
wire  signed [2:0] m86_fu_1027_p2;
reg  signed [2:0] m86_reg_1840;
wire  signed [8:0] m75_fu_1033_p2;
reg  signed [8:0] m75_reg_1845;
wire    ap_CS_fsm_state19;
wire  signed [6:0] m82_fu_1059_p2;
reg  signed [6:0] m82_reg_1850;
wire  signed [2:0] mul_ln283_fu_1065_p2;
reg  signed [2:0] mul_ln283_reg_1856;
wire  signed [3:0] m88_fu_1081_p2;
reg  signed [3:0] m88_reg_1862;
wire  signed [7:0] m89_fu_1104_p2;
reg  signed [7:0] m89_reg_1871;
wire    ap_CS_fsm_state20;
wire  signed [3:0] mul_ln278_1_fu_1114_p2;
reg  signed [3:0] mul_ln278_1_reg_1877;
wire  signed [2:0] mul_ln291_fu_1123_p2;
reg  signed [2:0] mul_ln291_reg_1883;
wire  signed [11:0] m91_fu_1139_p2;
reg  signed [11:0] m91_reg_1888;
wire    ap_CS_fsm_state21;
wire  signed [7:0] trunc_ln285_fu_1148_p1;
reg  signed [7:0] trunc_ln285_reg_1894;
wire   [2:0] mul_ln283_3_fu_1160_p2;
reg   [2:0] mul_ln283_3_reg_1899;
wire  signed [7:0] mul_ln285_fu_1165_p2;
reg  signed [7:0] mul_ln285_reg_1904;
wire   [7:0] m97_fu_1184_p2;
reg   [7:0] m97_reg_1909;
wire    ap_CS_fsm_state22;
wire  signed [6:0] trunc_ln290_fu_1208_p1;
reg  signed [6:0] trunc_ln290_reg_1914;
wire  signed [12:0] trunc_ln293_fu_1212_p1;
reg  signed [12:0] trunc_ln293_reg_1920;
wire  signed [12:0] mul_ln293_fu_1216_p2;
reg  signed [12:0] mul_ln293_reg_1925;
wire  signed [7:0] m101_fu_1231_p1;
reg  signed [7:0] m101_reg_1930;
wire    ap_CS_fsm_state23;
wire   [6:0] m102_fu_1235_p2;
reg  signed [6:0] m102_reg_1936;
wire   [2:0] mul_ln291_1_fu_1243_p2;
reg   [2:0] mul_ln291_1_reg_1941;
wire  signed [12:0] m105_fu_1248_p2;
reg  signed [12:0] m105_reg_1946;
wire  signed [6:0] trunc_ln294_fu_1252_p1;
reg  signed [6:0] trunc_ln294_reg_1951;
wire  signed [7:0] trunc_ln301_fu_1256_p1;
reg  signed [7:0] trunc_ln301_reg_1956;
wire   [6:0] m106_fu_1271_p2;
reg  signed [6:0] m106_reg_1962;
wire    ap_CS_fsm_state24;
wire  signed [7:0] m107_fu_1276_p2;
reg  signed [7:0] m107_reg_1967;
wire  signed [12:0] m110_fu_1283_p2;
reg  signed [12:0] m110_reg_1972;
wire  signed [7:0] m113_fu_1288_p2;
reg  signed [7:0] m113_reg_1978;
wire    ap_CS_fsm_state25;
wire  signed [7:0] m114_fu_1295_p2;
reg  signed [7:0] m114_reg_1986;
wire  signed [7:0] m118_fu_1309_p2;
reg  signed [7:0] m118_reg_1991;
wire    ap_CS_fsm_state26;
wire  signed [7:0] m115_fu_1313_p2;
reg  signed [7:0] m115_reg_1996;
wire    ap_CS_fsm_state27;
wire  signed [7:0] m120_fu_1317_p2;
reg  signed [7:0] m120_reg_2002;
wire  signed [7:0] mul_ln312_2_fu_1321_p2;
reg  signed [7:0] mul_ln312_2_reg_2007;
wire    ap_CS_fsm_state28;
wire  signed [7:0] mul_ln312_fu_1325_p2;
reg  signed [7:0] mul_ln312_reg_2012;
wire    ap_CS_fsm_state29;
wire   [15:0] mul_ln239_fu_769_p2;
wire    ap_CS_fsm_state30;
wire  signed [3:0] in7_fu_307_p1;
wire  signed [8:0] m12_fu_319_p0;
wire   [2:0] in5_fu_333_p1;
wire   [12:0] trunc_ln199_fu_349_p1;
wire  signed [12:0] sext_ln199_fu_345_p1;
wire  signed [5:0] m13_fu_363_p1;
wire  signed [12:0] m11_fu_353_p2;
wire  signed [12:0] m14_fu_368_p1;
wire  signed [2:0] m16_fu_390_p0;
wire   [9:0] m15_fu_380_p2;
wire  signed [3:0] m22_fu_415_p0;
wire  signed [3:0] m22_fu_415_p1;
wire   [12:0] m14_fu_368_p2;
wire   [3:0] m22_fu_415_p2;
wire  signed [7:0] in2_fu_435_p1;
wire   [11:0] m17_fu_478_p2;
wire   [7:0] trunc_ln209_fu_488_p1;
wire   [7:0] mul_ln218_fu_506_p2;
wire   [7:0] m30_fu_518_p2;
wire  signed [10:0] sext_ln205_2_fu_536_p1;
wire  signed [10:0] add_ln215_fu_539_p2;
wire  signed [5:0] grp_fu_1338_p3;
wire   [5:0] trunc_ln220_fu_556_p1;
wire  signed [3:0] m33_fu_569_p1;
wire  signed [4:0] m29_fu_588_p2;
wire   [14:0] m36_fu_611_p2;
wire  signed [2:0] mul_ln229_fu_625_p0;
wire  signed [2:0] mul_ln229_fu_625_p2;
wire  signed [2:0] mul_ln229_1_fu_630_p1;
wire  signed [3:0] mul_ln228_fu_636_p0;
wire   [2:0] trunc_ln229_3_fu_653_p1;
wire  signed [5:0] m43_fu_668_p0;
wire   [4:0] mul_ln236_fu_703_p2;
wire  signed [4:0] sext_ln236_fu_711_p1;
wire  signed [6:0] m52_fu_742_p0;
wire  signed [8:0] m50_fu_756_p3;
wire   [14:0] m57_fu_799_p2;
wire  signed [8:0] m59_fu_828_p0;
wire  signed [4:0] m60_fu_837_p1;
wire  signed [4:0] mul_ln252_fu_842_p1;
wire   [14:0] m59_fu_828_p2;
wire   [13:0] m62_fu_865_p2;
wire  signed [3:0] m66_fu_901_p2;
wire  signed [7:0] grp_fu_1366_p3;
wire  signed [3:0] m71_fu_925_p2;
wire  signed [3:0] m68_fu_905_p2;
wire   [5:0] trunc_ln95_fu_910_p1;
wire   [5:0] shl_ln261_fu_936_p2;
wire  signed [3:0] m74_fu_973_p1;
wire   [5:0] mul_ln269_fu_986_p0;
wire   [5:0] mul_ln269_fu_986_p1;
wire   [6:0] mul_ln269_fu_986_p2;
wire   [1:0] trunc_ln268_fu_1000_p1;
wire   [2:0] tmp_fu_1004_p3;
wire  signed [3:0] add_ln274_fu_978_p2;
wire  signed [2:0] m86_fu_1027_p0;
wire  signed [2:0] m86_fu_1027_p1;
wire  signed [7:0] m75_fu_1033_p1;
wire   [5:0] mul_ln270_fu_1043_p0;
wire   [5:0] mul_ln270_fu_1043_p1;
wire   [6:0] mul_ln270_fu_1043_p2;
wire   [6:0] m81_fu_1049_p2;
wire   [6:0] trunc_ln270_fu_1055_p1;
wire   [2:0] trunc_ln276_fu_1069_p1;
wire   [3:0] trunc_ln1_fu_1073_p3;
wire  signed [3:0] mul_ln278_fu_1110_p2;
wire  signed [2:0] mul_ln291_fu_1123_p1;
wire   [12:0] m83_fu_1092_p2;
wire   [3:0] mul_ln283_1_fu_1152_p2;
wire  signed [2:0] mul_ln283_3_fu_1160_p1;
wire  signed [4:0] m90_fu_1170_p3;
wire  signed [4:0] m95_fu_1177_p3;
wire   [13:0] m99_fu_1202_p2;
wire   [7:0] mul_ln289_fu_1225_p0;
wire   [14:0] zext_ln289_fu_1222_p1;
wire   [7:0] mul_ln289_fu_1225_p1;
wire   [14:0] mul_ln289_fu_1225_p2;
wire  signed [2:0] mul_ln291_1_fu_1243_p1;
wire  signed [4:0] m103_fu_1260_p3;
wire   [12:0] m119_fu_1300_p2;
wire   [7:0] m133_fu_1329_p2;
wire  signed [5:0] grp_fu_1338_p0;
reg   [29:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire   [6:0] mul_ln269_fu_986_p00;
wire   [6:0] mul_ln269_fu_986_p10;
wire   [6:0] mul_ln270_fu_1043_p00;
wire   [6:0] mul_ln270_fu_1043_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 30'd1;
end

case_6_mul_9s_4s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 9 ))
mul_9s_4s_9_1_1_U1(
    .din0(m12_fu_319_p0),
    .din1(in7_fu_307_p1),
    .dout(m12_fu_319_p2)
);

case_6_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U2(
    .din0(trunc_ln201_1_reg_1385),
    .din1(m13_fu_363_p1),
    .dout(m13_fu_363_p2)
);

case_6_mul_13s_13s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_13s_13s_13_1_1_U3(
    .din0(m11_fu_353_p2),
    .din1(m14_fu_368_p1),
    .dout(m14_fu_368_p2)
);

case_6_mul_9s_9s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 10 ))
mul_9s_9s_10_1_1_U4(
    .din0(m12_reg_1380),
    .din1(in9_reg_1375),
    .dout(m15_fu_380_p2)
);

case_6_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U5(
    .din0(m16_fu_390_p0),
    .din1(trunc_ln204_reg_1390),
    .dout(m16_fu_390_p2)
);

case_6_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U6(
    .din0(m22_fu_415_p0),
    .din1(m22_fu_415_p1),
    .dout(m22_fu_415_p2)
);

case_6_mul_9s_8s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_9s_8s_9_1_1_U7(
    .din0(trunc_ln198_reg_1395),
    .din1(in2_fu_435_p1),
    .dout(m10_fu_443_p2)
);

case_6_mul_11s_6s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 11 ))
mul_11s_6s_11_1_1_U8(
    .din0(trunc_ln206_reg_1412),
    .din1(m13_reg_1400),
    .dout(m18_fu_451_p2)
);

case_6_mul_9s_3s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
mul_9s_3s_9_1_1_U9(
    .din0(trunc_ln207_reg_1417),
    .din1(m16_reg_1405),
    .dout(m19_fu_459_p2)
);

case_6_mul_9s_3s_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 12 ))
mul_9s_3s_12_1_1_U10(
    .din0(m10_reg_1432),
    .din1(m16_reg_1405),
    .dout(m17_fu_478_p2)
);

case_6_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U11(
    .din0(m19_reg_1442),
    .din1(trunc_ln208_reg_1422),
    .dout(m20_fu_484_p2)
);

case_6_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U12(
    .din0(trunc_ln209_1_reg_1462),
    .din1(m21_reg_1467),
    .dout(mul_ln218_fu_506_p2)
);

case_6_mul_11s_9s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
mul_11s_9s_11_1_1_U13(
    .din0(trunc_ln214_reg_1473),
    .din1(m20_reg_1457),
    .dout(m26_fu_513_p2)
);

case_6_mul_11s_11s_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
mul_11s_11s_11_1_1_U14(
    .din0(m26_reg_1478),
    .din1(add_ln215_fu_539_p2),
    .dout(m27_fu_544_p2)
);

case_6_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U15(
    .din0(trunc_ln221_reg_1489),
    .din1(m33_fu_569_p1),
    .dout(m33_fu_569_p2)
);

case_6_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U16(
    .din0(trunc_ln217_reg_1499),
    .din1(trunc_ln217_1_reg_1505),
    .dout(m29_fu_588_p2)
);

case_6_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U17(
    .din0(m29_fu_588_p2),
    .din1(trunc_ln217_reg_1499),
    .dout(m31_fu_592_p2)
);

case_6_mul_11s_6s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 15 ))
mul_11s_6s_15_1_1_U18(
    .din0(m27_reg_1494),
    .din1(m32_reg_1510),
    .dout(m36_fu_611_p2)
);

case_6_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U19(
    .din0(mul_ln229_fu_625_p0),
    .din1(trunc_ln229_2_reg_1535),
    .dout(mul_ln229_fu_625_p2)
);

case_6_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U20(
    .din0(mul_ln229_fu_625_p2),
    .din1(mul_ln229_1_fu_630_p1),
    .dout(mul_ln229_1_fu_630_p2)
);

case_6_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U21(
    .din0(mul_ln228_fu_636_p0),
    .din1(m33_reg_1515),
    .dout(mul_ln228_fu_636_p2)
);

case_6_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U22(
    .din0(trunc_ln226_reg_1530),
    .din1(m31_reg_1540),
    .dout(m38_fu_645_p2)
);

case_6_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U23(
    .din0(mul_ln228_reg_1555),
    .din1(trunc_ln228_reg_1545),
    .dout(m40_fu_649_p2)
);

case_6_mul_6s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_6s_3s_6_1_1_U24(
    .din0(m43_fu_668_p0),
    .din1(m41_reg_1575),
    .dout(m43_fu_668_p2)
);

case_6_mul_13s_5s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
mul_13s_5s_13_1_1_U25(
    .din0(m42_reg_1581),
    .din1(m38_reg_1565),
    .dout(m44_fu_694_p2)
);

case_6_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U26(
    .din0(trunc_ln233_reg_1596),
    .din1(m41_reg_1575),
    .dout(m45_fu_699_p2)
);

case_6_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U27(
    .din0(trunc_ln236_reg_1601),
    .din1(trunc_ln236_1_reg_1606),
    .dout(mul_ln236_fu_703_p2)
);

case_6_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U28(
    .din0(trunc_ln235_reg_1631),
    .din1(trunc_ln235_1_reg_1611),
    .dout(m47_fu_720_p2)
);

case_6_mul_13s_5s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
mul_13s_5s_13_1_1_U29(
    .din0(m44_reg_1621),
    .din1(m48_reg_1636),
    .dout(m49_fu_727_p2)
);

case_6_mul_7s_5s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_7s_5s_7_1_1_U30(
    .din0(m52_fu_742_p0),
    .din1(m48_reg_1636),
    .dout(m52_fu_742_p2)
);

case_6_mul_13s_6s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mul_13s_6s_16_1_1_U31(
    .din0(m49_reg_1648),
    .din1(m43_reg_1591),
    .dout(mul_ln239_fu_769_p2)
);

case_6_mul_10s_3s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 10 ))
mul_10s_3s_10_1_1_U32(
    .din0(m47_reg_1643),
    .din1(m45_reg_1626),
    .dout(m53_fu_779_p2)
);

case_6_mul_6s_5s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 6 ))
mul_6s_5s_6_1_1_U33(
    .din0(trunc_ln242_reg_1658),
    .din1(m48_reg_1636),
    .dout(m54_fu_787_p2)
);

case_6_mul_9s_7s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 15 ))
mul_9s_7s_15_1_1_U34(
    .din0(m50_fu_756_p3),
    .din1(m52_reg_1653),
    .dout(m57_fu_799_p2)
);

case_6_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U35(
    .din0(trunc_ln252_reg_1665),
    .din1(trunc_ln242_reg_1658),
    .dout(m56_fu_817_p2)
);

case_6_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U36(
    .din0(trunc_ln246_reg_1692),
    .din1(m53_reg_1671),
    .dout(m58_fu_821_p2)
);

case_6_mul_9s_6s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 15 ))
mul_9s_6s_15_1_1_U37(
    .din0(m59_fu_828_p0),
    .din1(m54_reg_1681),
    .dout(m59_fu_828_p2)
);

case_6_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U38(
    .din0(trunc_ln248_reg_1697),
    .din1(m60_fu_837_p1),
    .dout(m60_fu_837_p2)
);

case_6_mul_6s_5s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 6 ))
mul_6s_5s_6_1_1_U39(
    .din0(trunc_ln252_1_reg_1702),
    .din1(mul_ln252_fu_842_p1),
    .dout(mul_ln252_fu_842_p2)
);

case_6_mul_10s_6s_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 14 ))
mul_10s_6s_14_1_1_U40(
    .din0(m58_reg_1712),
    .din1(m54_reg_1681),
    .dout(m62_fu_865_p2)
);

case_6_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U41(
    .din0(grp_fu_1357_p3),
    .din1(m56_reg_1707),
    .dout(m65_fu_879_p2)
);

case_6_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U42(
    .din0(trunc_ln254_reg_1727),
    .din1(trunc_ln254_reg_1727),
    .dout(mul_ln254_fu_883_p2)
);

case_6_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U43(
    .din0(mul_ln254_reg_1754),
    .din1(trunc_ln254_1_reg_1759),
    .dout(m66_fu_901_p2)
);

case_6_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U44(
    .din0(m66_fu_901_p2),
    .din1(trunc_ln254_1_reg_1759),
    .dout(m68_fu_905_p2)
);

case_6_mul_8s_6s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 9 ))
mul_8s_6s_9_1_1_U45(
    .din0(grp_fu_1366_p3),
    .din1(m64_reg_1743),
    .dout(m70_fu_919_p2)
);

case_6_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U46(
    .din0(m66_fu_901_p2),
    .din1(trunc_ln259_reg_1770),
    .dout(m71_fu_925_p2)
);

case_6_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U47(
    .din0(m71_fu_925_p2),
    .din1(m68_fu_905_p2),
    .dout(m72_fu_930_p2)
);

case_6_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U48(
    .din0(trunc_ln262_reg_1795),
    .din1(m74_fu_973_p1),
    .dout(m74_fu_973_p2)
);

case_6_mul_6ns_6ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 7 ))
mul_6ns_6ns_7_1_1_U49(
    .din0(mul_ln269_fu_986_p0),
    .din1(mul_ln269_fu_986_p1),
    .dout(mul_ln269_fu_986_p2)
);

case_6_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U50(
    .din0(add_ln274_fu_978_p2),
    .din1(add_ln274_fu_978_p2),
    .dout(mul_ln276_fu_1017_p2)
);

case_6_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U51(
    .din0(m86_fu_1027_p0),
    .din1(m86_fu_1027_p1),
    .dout(m86_fu_1027_p2)
);

case_6_mul_9s_8s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
mul_9s_8s_9_1_1_U52(
    .din0(m70_reg_1785),
    .din1(m75_fu_1033_p1),
    .dout(m75_fu_1033_p2)
);

case_6_mul_6ns_6ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 7 ))
mul_6ns_6ns_7_1_1_U53(
    .din0(mul_ln270_fu_1043_p0),
    .din1(mul_ln270_fu_1043_p1),
    .dout(mul_ln270_fu_1043_p2)
);

case_6_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U54(
    .din0(trunc_ln269_2_reg_1830),
    .din1(m86_reg_1840),
    .dout(mul_ln283_fu_1065_p2)
);

case_6_mul_9s_7s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 13 ))
mul_9s_7s_13_1_1_U55(
    .din0(m75_reg_1845),
    .din1(m82_reg_1850),
    .dout(m83_fu_1092_p2)
);

case_6_mul_7s_4s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
mul_7s_4s_8_1_1_U56(
    .din0(m82_reg_1850),
    .din1(m88_reg_1862),
    .dout(m89_fu_1104_p2)
);

case_6_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U57(
    .din0(trunc_ln268_1_reg_1810),
    .din1(m88_reg_1862),
    .dout(mul_ln278_fu_1110_p2)
);

case_6_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U58(
    .din0(mul_ln278_fu_1110_p2),
    .din1(m74_reg_1820),
    .dout(mul_ln278_1_fu_1114_p2)
);

case_6_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U59(
    .din0(mul_ln283_reg_1856),
    .din1(mul_ln291_fu_1123_p1),
    .dout(mul_ln291_fu_1123_p2)
);

case_6_mul_8s_4s_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
mul_8s_4s_12_1_1_U60(
    .din0(m89_reg_1871),
    .din1(m88_reg_1862),
    .dout(m91_fu_1139_p2)
);

case_6_mul_4s_4s_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mul_4s_4s_4_1_1_U61(
    .din0(mul_ln278_1_reg_1877),
    .din1(m88_reg_1862),
    .dout(mul_ln283_1_fu_1152_p2)
);

case_6_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U62(
    .din0(mul_ln283_reg_1856),
    .din1(mul_ln283_3_fu_1160_p1),
    .dout(mul_ln283_3_fu_1160_p2)
);

case_6_mul_8s_4s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
mul_8s_4s_8_1_1_U63(
    .din0(m89_reg_1871),
    .din1(m88_reg_1862),
    .dout(mul_ln285_fu_1165_p2)
);

case_6_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U64(
    .din0(mul_ln285_reg_1904),
    .din1(trunc_ln285_reg_1894),
    .dout(m97_fu_1184_p2)
);

case_6_mul_12s_5s_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 14 ))
mul_12s_5s_14_1_1_U65(
    .din0(m91_reg_1888),
    .din1(m95_fu_1177_p3),
    .dout(m99_fu_1202_p2)
);

case_6_mul_12s_5s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
mul_12s_5s_13_1_1_U66(
    .din0(m91_reg_1888),
    .din1(m90_fu_1170_p3),
    .dout(mul_ln293_fu_1216_p2)
);

case_6_mul_8ns_8ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 15 ))
mul_8ns_8ns_15_1_1_U67(
    .din0(mul_ln289_fu_1225_p0),
    .din1(mul_ln289_fu_1225_p1),
    .dout(mul_ln289_fu_1225_p2)
);

case_6_mul_7s_7s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
mul_7s_7s_7_1_1_U68(
    .din0(trunc_ln290_reg_1914),
    .din1(trunc_ln290_reg_1914),
    .dout(m102_fu_1235_p2)
);

case_6_mul_3s_3s_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mul_3s_3s_3_1_1_U69(
    .din0(mul_ln291_reg_1883),
    .din1(mul_ln291_1_fu_1243_p1),
    .dout(mul_ln291_1_fu_1243_p2)
);

case_6_mul_13s_13s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_13s_13s_13_1_1_U70(
    .din0(trunc_ln293_reg_1920),
    .din1(mul_ln293_reg_1925),
    .dout(m105_fu_1248_p2)
);

case_6_mul_7s_5s_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_7s_5s_7_1_1_U71(
    .din0(trunc_ln294_reg_1951),
    .din1(m103_fu_1260_p3),
    .dout(m106_fu_1271_p2)
);

case_6_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U72(
    .din0(m101_reg_1930),
    .din1(m101_reg_1930),
    .dout(m107_fu_1276_p2)
);

case_6_mul_13s_7s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 13 ))
mul_13s_7s_13_1_1_U73(
    .din0(m105_reg_1946),
    .din1(m102_reg_1936),
    .dout(m110_fu_1283_p2)
);

case_6_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U74(
    .din0(m107_reg_1967),
    .din1(trunc_ln301_reg_1956),
    .dout(m113_fu_1288_p2)
);

case_6_mul_8s_7s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
mul_8s_7s_8_1_1_U75(
    .din0(trunc_ln301_reg_1956),
    .din1(m106_reg_1962),
    .dout(m114_fu_1295_p2)
);

case_6_mul_13s_13s_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mul_13s_13s_13_1_1_U76(
    .din0(m110_reg_1972),
    .din1(m110_reg_1972),
    .dout(m119_fu_1300_p2)
);

case_6_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U77(
    .din0(m113_reg_1978),
    .din1(m114_reg_1986),
    .dout(m118_fu_1309_p2)
);

case_6_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U78(
    .din0(m113_reg_1978),
    .din1(m113_reg_1978),
    .dout(m115_fu_1313_p2)
);

case_6_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U79(
    .din0(m118_reg_1991),
    .din1(m113_reg_1978),
    .dout(m120_fu_1317_p2)
);

case_6_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U80(
    .din0(m120_reg_2002),
    .din1(m115_reg_1996),
    .dout(mul_ln312_2_fu_1321_p2)
);

case_6_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U81(
    .din0(mul_ln312_2_reg_2007),
    .din1(m115_reg_1996),
    .dout(mul_ln312_fu_1325_p2)
);

case_6_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U82(
    .din0(mul_ln312_reg_2012),
    .din1(mul_ln312_reg_2012),
    .dout(m133_fu_1329_p2)
);

case_6_mac_muladd_6s_6s_6ns_6_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mac_muladd_6s_6s_6ns_6_4_1_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1338_p0),
    .din1(trunc_ln216_reg_1427),
    .din2(trunc_ln216_2_reg_1452),
    .ce(1'b1),
    .dout(grp_fu_1338_p3)
);

case_6_mac_muladd_11s_6s_13ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
mac_muladd_11s_6s_13ns_13_4_1_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(m26_reg_1478),
    .din1(grp_fu_1338_p3),
    .din2(trunc_ln230_reg_1560),
    .ce(1'b1),
    .dout(grp_fu_1346_p3)
);

case_6_am_addmul_6s_6s_6s_6_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
am_addmul_6s_6s_6s_6_4_1_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln242_reg_1658),
    .din1(trunc_ln252_reg_1665),
    .din2(mul_ln252_fu_842_p2),
    .ce(1'b1),
    .dout(grp_fu_1357_p3)
);

case_6_mac_muladd_8s_5s_6s_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
mac_muladd_8s_5s_6s_8_4_1_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln255_reg_1733),
    .din1(m60_reg_1717),
    .din2(grp_fu_1357_p3),
    .ce(1'b1),
    .dout(grp_fu_1366_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        in9_reg_1375 <= in9_fu_311_p1;
        m12_reg_1380 <= m12_fu_319_p2;
        trunc_ln201_1_reg_1385 <= trunc_ln201_1_fu_325_p1;
        trunc_ln204_reg_1390 <= trunc_ln204_fu_329_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        m101_reg_1930 <= m101_fu_1231_p1;
        m102_reg_1936 <= m102_fu_1235_p2;
        m105_reg_1946 <= m105_fu_1248_p2;
        mul_ln291_1_reg_1941 <= mul_ln291_1_fu_1243_p2;
        trunc_ln294_reg_1951 <= trunc_ln294_fu_1252_p1;
        trunc_ln301_reg_1956 <= trunc_ln301_fu_1256_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        m106_reg_1962 <= m106_fu_1271_p2;
        m107_reg_1967 <= m107_fu_1276_p2;
        m110_reg_1972 <= m110_fu_1283_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        m10_reg_1432 <= m10_fu_443_p2;
        m18_reg_1437 <= m18_fu_451_p2;
        m19_reg_1442 <= m19_fu_459_p2;
        trunc_ln216_2_reg_1452 <= trunc_ln216_2_fu_468_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        m113_reg_1978 <= m113_fu_1288_p2;
        m114_reg_1986 <= m114_fu_1295_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        m115_reg_1996 <= m115_fu_1313_p2;
        m120_reg_2002 <= m120_fu_1317_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        m118_reg_1991 <= m118_fu_1309_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        m13_reg_1400 <= m13_fu_363_p2;
        m16_reg_1405 <= m16_fu_390_p2;
        trunc_ln198_reg_1395 <= trunc_ln198_fu_341_p1;
        trunc_ln206_reg_1412 <= trunc_ln206_fu_395_p1;
        trunc_ln207_reg_1417 <= trunc_ln207_fu_399_p1;
        trunc_ln208_reg_1422 <= trunc_ln208_fu_403_p1;
        trunc_ln216_reg_1427 <= trunc_ln216_fu_421_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        m20_reg_1457 <= m20_fu_484_p2;
        m21_reg_1467 <= m21_fu_496_p2;
        trunc_ln209_1_reg_1462 <= trunc_ln209_1_fu_492_p1;
        trunc_ln214_reg_1473 <= trunc_ln214_fu_502_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        m26_reg_1478 <= m26_fu_513_p2;
        trunc_ln220_1_reg_1484 <= trunc_ln220_1_fu_523_p1;
        trunc_ln221_reg_1489 <= trunc_ln221_fu_527_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        m27_reg_1494 <= m27_fu_544_p2;
        m32_reg_1510 <= m32_fu_560_p2;
        m33_reg_1515 <= m33_fu_569_p2;
        trunc_ln217_1_reg_1505 <= trunc_ln217_1_fu_553_p1;
        trunc_ln217_reg_1499 <= trunc_ln217_fu_549_p1;
        trunc_ln226_reg_1530 <= trunc_ln226_fu_580_p1;
        trunc_ln229_2_reg_1535 <= trunc_ln229_2_fu_584_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        m31_reg_1540 <= m31_fu_592_p2;
        mul_ln228_reg_1555 <= mul_ln228_fu_636_p2;
        mul_ln229_1_reg_1550 <= mul_ln229_1_fu_630_p2;
        trunc_ln228_reg_1545 <= trunc_ln228_fu_597_p1;
        trunc_ln230_reg_1560 <= trunc_ln230_fu_641_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        m38_reg_1565 <= m38_fu_645_p2;
        m40_reg_1570 <= m40_fu_649_p2;
        m41_reg_1575 <= m41_fu_657_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        m42_reg_1581 <= grp_fu_1346_p3;
        m43_reg_1591 <= m43_fu_668_p2;
        trunc_ln231_reg_1586 <= trunc_ln231_fu_662_p1;
        trunc_ln233_reg_1596 <= trunc_ln233_fu_674_p1;
        trunc_ln235_1_reg_1611 <= trunc_ln235_1_fu_685_p1;
        trunc_ln236_1_reg_1606 <= trunc_ln236_1_fu_682_p1;
        trunc_ln236_reg_1601 <= trunc_ln236_fu_678_p1;
        trunc_ln238_reg_1616 <= trunc_ln238_fu_688_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        m44_reg_1621 <= m44_fu_694_p2;
        m45_reg_1626 <= m45_fu_699_p2;
        m48_reg_1636 <= m48_fu_714_p2;
        trunc_ln235_reg_1631 <= trunc_ln235_fu_707_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        m47_reg_1643 <= m47_fu_720_p2;
        m49_reg_1648 <= m49_fu_727_p2;
        m52_reg_1653 <= m52_fu_742_p2;
        trunc_ln242_reg_1658 <= trunc_ln242_fu_748_p1;
        trunc_ln252_reg_1665 <= trunc_ln252_fu_752_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        m53_reg_1671 <= m53_fu_779_p2;
        m54_reg_1681 <= m54_fu_787_p2;
        sext_ln242_reg_1676 <= sext_ln242_fu_784_p1;
        sext_ln245_reg_1687[14 : 1] <= sext_ln245_fu_792_p1[14 : 1];
        trunc_ln246_reg_1692 <= trunc_ln246_fu_805_p1;
        trunc_ln248_reg_1697 <= trunc_ln248_fu_809_p1;
        trunc_ln252_1_reg_1702 <= trunc_ln252_1_fu_813_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        m56_reg_1707 <= m56_fu_817_p2;
        m58_reg_1712 <= m58_fu_821_p2;
        m60_reg_1717 <= m60_fu_837_p2;
        trunc_ln254_reg_1727 <= trunc_ln254_fu_846_p1;
        trunc_ln255_reg_1733 <= trunc_ln255_fu_850_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        m64_reg_1743 <= grp_fu_1357_p3;
        m65_reg_1748 <= m65_fu_879_p2;
        mul_ln254_reg_1754 <= mul_ln254_fu_883_p2;
        trunc_ln254_1_reg_1759 <= trunc_ln254_1_fu_887_p1;
        trunc_ln259_reg_1770 <= trunc_ln259_fu_894_p1;
        trunc_ln262_2_reg_1775 <= trunc_ln262_2_fu_897_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        m70_reg_1785 <= m70_fu_919_p2;
        m72_reg_1790 <= m72_fu_930_p2;
        m76_reg_1800 <= m76_fu_945_p2;
        sext_ln258_reg_1780 <= sext_ln258_fu_913_p1;
        trunc_ln262_reg_1795 <= trunc_ln262_fu_941_p1;
        trunc_ln268_1_reg_1810 <= trunc_ln268_1_fu_955_p1;
        trunc_ln268_2_reg_1815 <= trunc_ln268_2_fu_959_p1;
        trunc_ln269_reg_1805 <= trunc_ln269_fu_951_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        m74_reg_1820 <= m74_fu_973_p2;
        m86_reg_1840 <= m86_fu_1027_p2;
        mul_ln276_reg_1835 <= mul_ln276_fu_1017_p2;
        trunc_ln269_1_reg_1825 <= trunc_ln269_1_fu_992_p1;
        trunc_ln269_2_reg_1830 <= trunc_ln269_2_fu_996_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        m75_reg_1845 <= m75_fu_1033_p2;
        m82_reg_1850 <= m82_fu_1059_p2;
        m88_reg_1862 <= m88_fu_1081_p2;
        mul_ln283_reg_1856 <= mul_ln283_fu_1065_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        m89_reg_1871 <= m89_fu_1104_p2;
        mul_ln278_1_reg_1877 <= mul_ln278_1_fu_1114_p2;
        mul_ln291_reg_1883 <= mul_ln291_fu_1123_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        m91_reg_1888 <= m91_fu_1139_p2;
        mul_ln283_3_reg_1899 <= mul_ln283_3_fu_1160_p2;
        mul_ln285_reg_1904 <= mul_ln285_fu_1165_p2;
        trunc_ln285_reg_1894 <= trunc_ln285_fu_1148_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        m97_reg_1909 <= m97_fu_1184_p2;
        mul_ln293_reg_1925 <= mul_ln293_fu_1216_p2;
        trunc_ln290_reg_1914 <= trunc_ln290_fu_1208_p1;
        trunc_ln293_reg_1920 <= trunc_ln293_fu_1212_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        mul_ln312_2_reg_2007 <= mul_ln312_2_fu_1321_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        mul_ln312_reg_2012 <= mul_ln312_fu_1325_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_data_0_ap_vld = 1'b1;
    end else begin
        out_data_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        out_data_10_ap_vld = 1'b1;
    end else begin
        out_data_10_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        out_data_11_ap_vld = 1'b1;
    end else begin
        out_data_11_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        out_data_12_ap_vld = 1'b1;
    end else begin
        out_data_12_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        out_data_13_ap_vld = 1'b1;
    end else begin
        out_data_13_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        out_data_14_ap_vld = 1'b1;
    end else begin
        out_data_14_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        out_data_15_ap_vld = 1'b1;
    end else begin
        out_data_15_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        out_data_16_ap_vld = 1'b1;
    end else begin
        out_data_16_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        out_data_17_ap_vld = 1'b1;
    end else begin
        out_data_17_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        out_data_18_ap_vld = 1'b1;
    end else begin
        out_data_18_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        out_data_19_ap_vld = 1'b1;
    end else begin
        out_data_19_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_data_1_ap_vld = 1'b1;
    end else begin
        out_data_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        out_data_20_ap_vld = 1'b1;
    end else begin
        out_data_20_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        out_data_21_ap_vld = 1'b1;
    end else begin
        out_data_21_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        out_data_2_ap_vld = 1'b1;
    end else begin
        out_data_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        out_data_3_ap_vld = 1'b1;
    end else begin
        out_data_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        out_data_4_ap_vld = 1'b1;
    end else begin
        out_data_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        out_data_5_ap_vld = 1'b1;
    end else begin
        out_data_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        out_data_6_ap_vld = 1'b1;
    end else begin
        out_data_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        out_data_7_ap_vld = 1'b1;
    end else begin
        out_data_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        out_data_8_ap_vld = 1'b1;
    end else begin
        out_data_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        out_data_9_ap_vld = 1'b1;
    end else begin
        out_data_9_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln215_fu_539_p2 = ($signed(m18_reg_1437) + $signed(sext_ln205_2_fu_536_p1));

assign add_ln274_fu_978_p2 = ($signed(m72_reg_1790) + $signed(m74_fu_973_p2));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_1338_p0 = m18_fu_451_p2[5:0];

assign in2_fu_435_p1 = in_data_1[7:0];

assign in5_fu_333_p1 = in_data_4[2:0];

assign in7_fu_307_p1 = in_data_6[3:0];

assign in9_fu_311_p1 = in_data_8[8:0];

assign m101_fu_1231_p1 = mul_ln289_fu_1225_p2[7:0];

assign m103_fu_1260_p3 = {{mul_ln291_1_reg_1941}, {2'd0}};

assign m11_fu_353_p2 = ($signed(trunc_ln199_fu_349_p1) + $signed(sext_ln199_fu_345_p1));

assign m12_fu_319_p0 = in_data_8[8:0];

assign m13_fu_363_p1 = in_data_7[5:0];

assign m14_fu_368_p1 = in_data_5[12:0];

assign m16_fu_390_p0 = m13_fu_363_p2[2:0];

assign m21_fu_496_p2 = ($signed(trunc_ln209_fu_488_p1) + $signed(trunc_ln209_1_fu_492_p1));

assign m22_fu_415_p0 = m15_fu_380_p2[3:0];

assign m22_fu_415_p1 = m13_fu_363_p2[3:0];

assign m30_fu_518_p2 = ($signed(mul_ln218_fu_506_p2) + $signed(m21_reg_1467));

assign m32_fu_560_p2 = (trunc_ln220_1_reg_1484 + trunc_ln220_fu_556_p1);

assign m33_fu_569_p1 = m32_fu_560_p2[3:0];

assign m41_fu_657_p2 = (mul_ln229_1_reg_1550 + trunc_ln229_3_fu_653_p1);

assign m43_fu_668_p0 = grp_fu_1346_p3[5:0];

assign m48_fu_714_p2 = ($signed(mul_ln236_fu_703_p2) + $signed(sext_ln236_fu_711_p1));

assign m50_fu_756_p3 = {{trunc_ln238_reg_1616}, {1'd0}};

assign m52_fu_742_p0 = {{trunc_ln231_reg_1586}, {1'd0}};

assign m59_fu_828_p0 = sext_ln245_reg_1687;

assign m60_fu_837_p1 = m56_fu_817_p2[4:0];

assign m74_fu_973_p1 = {{trunc_ln262_2_reg_1775}, {1'd0}};

assign m75_fu_1033_p1 = sext_ln258_reg_1780;

assign m76_fu_945_p2 = (trunc_ln95_fu_910_p1 + shl_ln261_fu_936_p2);

assign m81_fu_1049_p2 = mul_ln270_fu_1043_p2 << 7'd1;

assign m82_fu_1059_p2 = (m81_fu_1049_p2 + trunc_ln270_fu_1055_p1);

assign m86_fu_1027_p0 = add_ln274_fu_978_p2[2:0];

assign m86_fu_1027_p1 = (tmp_fu_1004_p3 + trunc_ln268_2_reg_1815);

assign m88_fu_1081_p2 = (mul_ln276_reg_1835 + trunc_ln1_fu_1073_p3);

assign m90_fu_1170_p3 = {{mul_ln278_1_reg_1877}, {1'd0}};

assign m95_fu_1177_p3 = {{mul_ln283_3_reg_1899}, {2'd0}};

assign mul_ln228_fu_636_p0 = m29_fu_588_p2[3:0];

assign mul_ln229_1_fu_630_p1 = m36_fu_611_p2[2:0];

assign mul_ln229_fu_625_p0 = m29_fu_588_p2[2:0];

assign mul_ln252_fu_842_p1 = sext_ln242_reg_1676;

assign mul_ln269_fu_986_p0 = mul_ln269_fu_986_p00;

assign mul_ln269_fu_986_p00 = m65_reg_1748;

assign mul_ln269_fu_986_p1 = mul_ln269_fu_986_p10;

assign mul_ln269_fu_986_p10 = trunc_ln269_reg_1805;

assign mul_ln270_fu_1043_p0 = mul_ln270_fu_1043_p00;

assign mul_ln270_fu_1043_p00 = trunc_ln269_1_reg_1825;

assign mul_ln270_fu_1043_p1 = mul_ln270_fu_1043_p10;

assign mul_ln270_fu_1043_p10 = m76_reg_1800;

assign mul_ln283_3_fu_1160_p1 = mul_ln283_1_fu_1152_p2[2:0];

assign mul_ln289_fu_1225_p0 = zext_ln289_fu_1222_p1;

assign mul_ln289_fu_1225_p1 = zext_ln289_fu_1222_p1;

assign mul_ln291_1_fu_1243_p1 = mul_ln289_fu_1225_p2[2:0];

assign mul_ln291_fu_1123_p1 = mul_ln278_1_fu_1114_p2[2:0];

assign out_data_0 = $signed(m14_fu_368_p2);

assign out_data_1 = $signed(m22_fu_415_p2);

assign out_data_10 = $signed(m133_fu_1329_p2);

assign out_data_11 = 16'd0;

assign out_data_12 = 16'd0;

assign out_data_13 = 16'd0;

assign out_data_14 = 16'd0;

assign out_data_15 = 16'd0;

assign out_data_16 = 16'd0;

assign out_data_17 = 16'd0;

assign out_data_18 = 16'd0;

assign out_data_19 = 16'd0;

assign out_data_2 = $signed(m30_fu_518_p2);

assign out_data_20 = 16'd0;

assign out_data_21 = 16'd0;

assign out_data_3 = mul_ln239_fu_769_p2;

assign out_data_4 = $signed(m59_fu_828_p2);

assign out_data_5 = $signed(m62_fu_865_p2);

assign out_data_6 = $signed(m83_fu_1092_p2);

assign out_data_7 = 16'd0;

assign out_data_8 = $signed(m119_fu_1300_p2);

assign out_data_9 = 16'd0;

assign sext_ln199_fu_345_p1 = $signed(in5_fu_333_p1);

assign sext_ln205_2_fu_536_p1 = m16_reg_1405;

assign sext_ln236_fu_711_p1 = $signed(m40_reg_1570);

assign sext_ln242_fu_784_p1 = m48_reg_1636;

assign sext_ln245_fu_792_p1 = m50_fu_756_p3;

assign sext_ln258_fu_913_p1 = grp_fu_1366_p3;

assign shl_ln261_fu_936_p2 = m65_reg_1748 << 6'd1;

assign tmp_fu_1004_p3 = {{trunc_ln268_fu_1000_p1}, {1'd0}};

assign trunc_ln198_fu_341_p1 = in_data_7[8:0];

assign trunc_ln199_fu_349_p1 = in_data_7[12:0];

assign trunc_ln1_fu_1073_p3 = {{trunc_ln276_fu_1069_p1}, {1'd0}};

assign trunc_ln201_1_fu_325_p1 = m12_fu_319_p2[5:0];

assign trunc_ln204_fu_329_p1 = m12_fu_319_p2[2:0];

assign trunc_ln206_fu_395_p1 = m11_fu_353_p2[10:0];

assign trunc_ln207_fu_399_p1 = m11_fu_353_p2[8:0];

assign trunc_ln208_fu_403_p1 = m15_fu_380_p2[8:0];

assign trunc_ln209_1_fu_492_p1 = m17_fu_478_p2[7:0];

assign trunc_ln209_fu_488_p1 = m20_fu_484_p2[7:0];

assign trunc_ln214_fu_502_p1 = m17_fu_478_p2[10:0];

assign trunc_ln216_2_fu_468_p1 = m19_fu_459_p2[5:0];

assign trunc_ln216_fu_421_p1 = m15_fu_380_p2[5:0];

assign trunc_ln217_1_fu_553_p1 = grp_fu_1338_p3[4:0];

assign trunc_ln217_fu_549_p1 = m27_fu_544_p2[4:0];

assign trunc_ln220_1_fu_523_p1 = mul_ln218_fu_506_p2[5:0];

assign trunc_ln220_fu_556_p1 = add_ln215_fu_539_p2[5:0];

assign trunc_ln221_fu_527_p1 = mul_ln218_fu_506_p2[3:0];

assign trunc_ln226_fu_580_p1 = m32_fu_560_p2[4:0];

assign trunc_ln228_fu_597_p1 = m31_fu_592_p2[3:0];

assign trunc_ln229_2_fu_584_p1 = m33_fu_569_p2[2:0];

assign trunc_ln229_3_fu_653_p1 = m38_fu_645_p2[2:0];

assign trunc_ln230_fu_641_p1 = m36_fu_611_p2[12:0];

assign trunc_ln231_fu_662_p1 = grp_fu_1346_p3[5:0];

assign trunc_ln233_fu_674_p1 = m43_fu_668_p2[2:0];

assign trunc_ln235_1_fu_685_p1 = grp_fu_1346_p3[9:0];

assign trunc_ln235_fu_707_p1 = m44_fu_694_p2[9:0];

assign trunc_ln236_1_fu_682_p1 = grp_fu_1346_p3[4:0];

assign trunc_ln236_fu_678_p1 = m43_fu_668_p2[4:0];

assign trunc_ln238_fu_688_p1 = grp_fu_1346_p3[7:0];

assign trunc_ln242_fu_748_p1 = m52_fu_742_p2[5:0];

assign trunc_ln246_fu_805_p1 = m57_fu_799_p2[9:0];

assign trunc_ln248_fu_809_p1 = m54_fu_787_p2[4:0];

assign trunc_ln252_1_fu_813_p1 = m57_fu_799_p2[5:0];

assign trunc_ln252_fu_752_p1 = m47_fu_720_p2[5:0];

assign trunc_ln254_1_fu_887_p1 = m65_fu_879_p2[3:0];

assign trunc_ln254_fu_846_p1 = m60_fu_837_p2[3:0];

assign trunc_ln255_fu_850_p1 = m58_fu_821_p2[7:0];

assign trunc_ln259_fu_894_p1 = grp_fu_1357_p3[3:0];

assign trunc_ln262_2_fu_897_p1 = m65_fu_879_p2[2:0];

assign trunc_ln262_fu_941_p1 = m70_fu_919_p2[3:0];

assign trunc_ln268_1_fu_955_p1 = m76_fu_945_p2[3:0];

assign trunc_ln268_2_fu_959_p1 = m76_fu_945_p2[2:0];

assign trunc_ln268_fu_1000_p1 = m74_fu_973_p2[1:0];

assign trunc_ln269_1_fu_992_p1 = mul_ln269_fu_986_p2[5:0];

assign trunc_ln269_2_fu_996_p1 = mul_ln269_fu_986_p2[2:0];

assign trunc_ln269_fu_951_p1 = m70_fu_919_p2[5:0];

assign trunc_ln270_fu_1055_p1 = m75_fu_1033_p2[6:0];

assign trunc_ln276_fu_1069_p1 = mul_ln270_fu_1043_p2[2:0];

assign trunc_ln285_fu_1148_p1 = m91_fu_1139_p2[7:0];

assign trunc_ln290_fu_1208_p1 = m99_fu_1202_p2[6:0];

assign trunc_ln293_fu_1212_p1 = m99_fu_1202_p2[12:0];

assign trunc_ln294_fu_1252_p1 = m105_fu_1248_p2[6:0];

assign trunc_ln301_fu_1256_p1 = m105_fu_1248_p2[7:0];

assign trunc_ln95_fu_910_p1 = grp_fu_1366_p3[5:0];

assign zext_ln289_fu_1222_p1 = m97_reg_1909;

always @ (posedge ap_clk) begin
    sext_ln245_reg_1687[0] <= 1'b0;
end

endmodule //case_6
